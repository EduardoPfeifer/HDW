

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Sep 10 20:57:51 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16LF1786
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	swtext1,local,class=CONST,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x620,48
    30                           	dabs	1,0x5A0,80
    31                           	dabs	1,0x520,80
    32                           	dabs	1,0x4C0,48
    33                           	dabs	1,0x22F0,0,__tx_buffer
    34                           	dabs	1,0x7E,2
    35  0000                     	;# 
    36  0001                     	;# 
    37  0002                     	;# 
    38  0003                     	;# 
    39  0004                     	;# 
    40  0005                     	;# 
    41  0006                     	;# 
    42  0007                     	;# 
    43  0008                     	;# 
    44  0009                     	;# 
    45  000A                     	;# 
    46  000B                     	;# 
    47  000C                     	;# 
    48  000D                     	;# 
    49  000E                     	;# 
    50  0010                     	;# 
    51  0011                     	;# 
    52  0012                     	;# 
    53  0013                     	;# 
    54  0014                     	;# 
    55  0015                     	;# 
    56  0016                     	;# 
    57  0016                     	;# 
    58  0017                     	;# 
    59  0018                     	;# 
    60  0019                     	;# 
    61  001A                     	;# 
    62  001B                     	;# 
    63  001C                     	;# 
    64  008C                     	;# 
    65  008D                     	;# 
    66  008E                     	;# 
    67  0090                     	;# 
    68  0091                     	;# 
    69  0092                     	;# 
    70  0093                     	;# 
    71  0094                     	;# 
    72  0095                     	;# 
    73  0096                     	;# 
    74  0097                     	;# 
    75  0098                     	;# 
    76  0099                     	;# 
    77  009A                     	;# 
    78  009B                     	;# 
    79  009B                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009E                     	;# 
    83  009F                     	;# 
    84  010C                     	;# 
    85  010D                     	;# 
    86  010E                     	;# 
    87  0111                     	;# 
    88  0112                     	;# 
    89  0113                     	;# 
    90  0114                     	;# 
    91  0115                     	;# 
    92  0116                     	;# 
    93  0117                     	;# 
    94  0118                     	;# 
    95  0119                     	;# 
    96  011A                     	;# 
    97  011B                     	;# 
    98  011C                     	;# 
    99  011D                     	;# 
   100  011D                     	;# 
   101  011D                     	;# 
   102  011E                     	;# 
   103  011F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0191                     	;# 
   107  0191                     	;# 
   108  0192                     	;# 
   109  0193                     	;# 
   110  0193                     	;# 
   111  0193                     	;# 
   112  0194                     	;# 
   113  0195                     	;# 
   114  0196                     	;# 
   115  0199                     	;# 
   116  0199                     	;# 
   117  0199                     	;# 
   118  019A                     	;# 
   119  019A                     	;# 
   120  019A                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019C                     	;# 
   127  019C                     	;# 
   128  019C                     	;# 
   129  019D                     	;# 
   130  019D                     	;# 
   131  019D                     	;# 
   132  019E                     	;# 
   133  019E                     	;# 
   134  019E                     	;# 
   135  019F                     	;# 
   136  019F                     	;# 
   137  019F                     	;# 
   138  019F                     	;# 
   139  019F                     	;# 
   140  020C                     	;# 
   141  020D                     	;# 
   142  020E                     	;# 
   143  0210                     	;# 
   144  0211                     	;# 
   145  0211                     	;# 
   146  0212                     	;# 
   147  0212                     	;# 
   148  0213                     	;# 
   149  0213                     	;# 
   150  0214                     	;# 
   151  0214                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0216                     	;# 
   157  0216                     	;# 
   158  0217                     	;# 
   159  0217                     	;# 
   160  028C                     	;# 
   161  028D                     	;# 
   162  028E                     	;# 
   163  0291                     	;# 
   164  0291                     	;# 
   165  0292                     	;# 
   166  0293                     	;# 
   167  0298                     	;# 
   168  0298                     	;# 
   169  0299                     	;# 
   170  029A                     	;# 
   171  030C                     	;# 
   172  030D                     	;# 
   173  030E                     	;# 
   174  0311                     	;# 
   175  0311                     	;# 
   176  0312                     	;# 
   177  0313                     	;# 
   178  038C                     	;# 
   179  038D                     	;# 
   180  038E                     	;# 
   181  0390                     	;# 
   182  0391                     	;# 
   183  0392                     	;# 
   184  0393                     	;# 
   185  0394                     	;# 
   186  0395                     	;# 
   187  0396                     	;# 
   188  0397                     	;# 
   189  0398                     	;# 
   190  0399                     	;# 
   191  039D                     	;# 
   192  039E                     	;# 
   193  039F                     	;# 
   194  0511                     	;# 
   195  0513                     	;# 
   196  051A                     	;# 
   197  0811                     	;# 
   198  0812                     	;# 
   199  0813                     	;# 
   200  0814                     	;# 
   201  0815                     	;# 
   202  0816                     	;# 
   203  0817                     	;# 
   204  0818                     	;# 
   205  0819                     	;# 
   206  081A                     	;# 
   207  081B                     	;# 
   208  081C                     	;# 
   209  081D                     	;# 
   210  081E                     	;# 
   211  081F                     	;# 
   212  0820                     	;# 
   213  0821                     	;# 
   214  0821                     	;# 
   215  0822                     	;# 
   216  0823                     	;# 
   217  0823                     	;# 
   218  0824                     	;# 
   219  0825                     	;# 
   220  0825                     	;# 
   221  0826                     	;# 
   222  0827                     	;# 
   223  0827                     	;# 
   224  0828                     	;# 
   225  0829                     	;# 
   226  082A                     	;# 
   227  082B                     	;# 
   228  082C                     	;# 
   229  082D                     	;# 
   230  082E                     	;# 
   231  082F                     	;# 
   232  0831                     	;# 
   233  0832                     	;# 
   234  0833                     	;# 
   235  0834                     	;# 
   236  0835                     	;# 
   237  0836                     	;# 
   238  0837                     	;# 
   239  0838                     	;# 
   240  0839                     	;# 
   241  083A                     	;# 
   242  083B                     	;# 
   243  083C                     	;# 
   244  083D                     	;# 
   245  083E                     	;# 
   246  083F                     	;# 
   247  0840                     	;# 
   248  0841                     	;# 
   249  0841                     	;# 
   250  0842                     	;# 
   251  0843                     	;# 
   252  0843                     	;# 
   253  0844                     	;# 
   254  0845                     	;# 
   255  0845                     	;# 
   256  0846                     	;# 
   257  0847                     	;# 
   258  0847                     	;# 
   259  0848                     	;# 
   260  0849                     	;# 
   261  084A                     	;# 
   262  084B                     	;# 
   263  084C                     	;# 
   264  084D                     	;# 
   265  084E                     	;# 
   266  084F                     	;# 
   267  0851                     	;# 
   268  0852                     	;# 
   269  0853                     	;# 
   270  0854                     	;# 
   271  0855                     	;# 
   272  0856                     	;# 
   273  0857                     	;# 
   274  0858                     	;# 
   275  0859                     	;# 
   276  085A                     	;# 
   277  085B                     	;# 
   278  085C                     	;# 
   279  085D                     	;# 
   280  085E                     	;# 
   281  085F                     	;# 
   282  0860                     	;# 
   283  0861                     	;# 
   284  0861                     	;# 
   285  0862                     	;# 
   286  0863                     	;# 
   287  0863                     	;# 
   288  0864                     	;# 
   289  0865                     	;# 
   290  0865                     	;# 
   291  0866                     	;# 
   292  0867                     	;# 
   293  0867                     	;# 
   294  0868                     	;# 
   295  0869                     	;# 
   296  086A                     	;# 
   297  086B                     	;# 
   298  086C                     	;# 
   299  086D                     	;# 
   300  086E                     	;# 
   301  086F                     	;# 
   302  0FE4                     	;# 
   303  0FE5                     	;# 
   304  0FE6                     	;# 
   305  0FE7                     	;# 
   306  0FE8                     	;# 
   307  0FE9                     	;# 
   308  0FEA                     	;# 
   309  0FEB                     	;# 
   310  0FED                     	;# 
   311  0FEE                     	;# 
   312  0FEF                     	;# 
   313  0000                     	;# 
   314  0001                     	;# 
   315  0002                     	;# 
   316  0003                     	;# 
   317  0004                     	;# 
   318  0005                     	;# 
   319  0006                     	;# 
   320  0007                     	;# 
   321  0008                     	;# 
   322  0009                     	;# 
   323  000A                     	;# 
   324  000B                     	;# 
   325  000C                     	;# 
   326  000D                     	;# 
   327  000E                     	;# 
   328  0010                     	;# 
   329  0011                     	;# 
   330  0012                     	;# 
   331  0013                     	;# 
   332  0014                     	;# 
   333  0015                     	;# 
   334  0016                     	;# 
   335  0016                     	;# 
   336  0017                     	;# 
   337  0018                     	;# 
   338  0019                     	;# 
   339  001A                     	;# 
   340  001B                     	;# 
   341  001C                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  010C                     	;# 
   363  010D                     	;# 
   364  010E                     	;# 
   365  0111                     	;# 
   366  0112                     	;# 
   367  0113                     	;# 
   368  0114                     	;# 
   369  0115                     	;# 
   370  0116                     	;# 
   371  0117                     	;# 
   372  0118                     	;# 
   373  0119                     	;# 
   374  011A                     	;# 
   375  011B                     	;# 
   376  011C                     	;# 
   377  011D                     	;# 
   378  011D                     	;# 
   379  011D                     	;# 
   380  011E                     	;# 
   381  011F                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0191                     	;# 
   385  0191                     	;# 
   386  0192                     	;# 
   387  0193                     	;# 
   388  0193                     	;# 
   389  0193                     	;# 
   390  0194                     	;# 
   391  0195                     	;# 
   392  0196                     	;# 
   393  0199                     	;# 
   394  0199                     	;# 
   395  0199                     	;# 
   396  019A                     	;# 
   397  019A                     	;# 
   398  019A                     	;# 
   399  019B                     	;# 
   400  019B                     	;# 
   401  019B                     	;# 
   402  019B                     	;# 
   403  019B                     	;# 
   404  019C                     	;# 
   405  019C                     	;# 
   406  019C                     	;# 
   407  019D                     	;# 
   408  019D                     	;# 
   409  019D                     	;# 
   410  019E                     	;# 
   411  019E                     	;# 
   412  019E                     	;# 
   413  019F                     	;# 
   414  019F                     	;# 
   415  019F                     	;# 
   416  019F                     	;# 
   417  019F                     	;# 
   418  020C                     	;# 
   419  020D                     	;# 
   420  020E                     	;# 
   421  0210                     	;# 
   422  0211                     	;# 
   423  0211                     	;# 
   424  0212                     	;# 
   425  0212                     	;# 
   426  0213                     	;# 
   427  0213                     	;# 
   428  0214                     	;# 
   429  0214                     	;# 
   430  0215                     	;# 
   431  0215                     	;# 
   432  0215                     	;# 
   433  0215                     	;# 
   434  0216                     	;# 
   435  0216                     	;# 
   436  0217                     	;# 
   437  0217                     	;# 
   438  028C                     	;# 
   439  028D                     	;# 
   440  028E                     	;# 
   441  0291                     	;# 
   442  0291                     	;# 
   443  0292                     	;# 
   444  0293                     	;# 
   445  0298                     	;# 
   446  0298                     	;# 
   447  0299                     	;# 
   448  029A                     	;# 
   449  030C                     	;# 
   450  030D                     	;# 
   451  030E                     	;# 
   452  0311                     	;# 
   453  0311                     	;# 
   454  0312                     	;# 
   455  0313                     	;# 
   456  038C                     	;# 
   457  038D                     	;# 
   458  038E                     	;# 
   459  0390                     	;# 
   460  0391                     	;# 
   461  0392                     	;# 
   462  0393                     	;# 
   463  0394                     	;# 
   464  0395                     	;# 
   465  0396                     	;# 
   466  0397                     	;# 
   467  0398                     	;# 
   468  0399                     	;# 
   469  039D                     	;# 
   470  039E                     	;# 
   471  039F                     	;# 
   472  0511                     	;# 
   473  0513                     	;# 
   474  051A                     	;# 
   475  0811                     	;# 
   476  0812                     	;# 
   477  0813                     	;# 
   478  0814                     	;# 
   479  0815                     	;# 
   480  0816                     	;# 
   481  0817                     	;# 
   482  0818                     	;# 
   483  0819                     	;# 
   484  081A                     	;# 
   485  081B                     	;# 
   486  081C                     	;# 
   487  081D                     	;# 
   488  081E                     	;# 
   489  081F                     	;# 
   490  0820                     	;# 
   491  0821                     	;# 
   492  0821                     	;# 
   493  0822                     	;# 
   494  0823                     	;# 
   495  0823                     	;# 
   496  0824                     	;# 
   497  0825                     	;# 
   498  0825                     	;# 
   499  0826                     	;# 
   500  0827                     	;# 
   501  0827                     	;# 
   502  0828                     	;# 
   503  0829                     	;# 
   504  082A                     	;# 
   505  082B                     	;# 
   506  082C                     	;# 
   507  082D                     	;# 
   508  082E                     	;# 
   509  082F                     	;# 
   510  0831                     	;# 
   511  0832                     	;# 
   512  0833                     	;# 
   513  0834                     	;# 
   514  0835                     	;# 
   515  0836                     	;# 
   516  0837                     	;# 
   517  0838                     	;# 
   518  0839                     	;# 
   519  083A                     	;# 
   520  083B                     	;# 
   521  083C                     	;# 
   522  083D                     	;# 
   523  083E                     	;# 
   524  083F                     	;# 
   525  0840                     	;# 
   526  0841                     	;# 
   527  0841                     	;# 
   528  0842                     	;# 
   529  0843                     	;# 
   530  0843                     	;# 
   531  0844                     	;# 
   532  0845                     	;# 
   533  0845                     	;# 
   534  0846                     	;# 
   535  0847                     	;# 
   536  0847                     	;# 
   537  0848                     	;# 
   538  0849                     	;# 
   539  084A                     	;# 
   540  084B                     	;# 
   541  084C                     	;# 
   542  084D                     	;# 
   543  084E                     	;# 
   544  084F                     	;# 
   545  0851                     	;# 
   546  0852                     	;# 
   547  0853                     	;# 
   548  0854                     	;# 
   549  0855                     	;# 
   550  0856                     	;# 
   551  0857                     	;# 
   552  0858                     	;# 
   553  0859                     	;# 
   554  085A                     	;# 
   555  085B                     	;# 
   556  085C                     	;# 
   557  085D                     	;# 
   558  085E                     	;# 
   559  085F                     	;# 
   560  0860                     	;# 
   561  0861                     	;# 
   562  0861                     	;# 
   563  0862                     	;# 
   564  0863                     	;# 
   565  0863                     	;# 
   566  0864                     	;# 
   567  0865                     	;# 
   568  0865                     	;# 
   569  0866                     	;# 
   570  0867                     	;# 
   571  0867                     	;# 
   572  0868                     	;# 
   573  0869                     	;# 
   574  086A                     	;# 
   575  086B                     	;# 
   576  086C                     	;# 
   577  086D                     	;# 
   578  086E                     	;# 
   579  086F                     	;# 
   580  0FE4                     	;# 
   581  0FE5                     	;# 
   582  0FE6                     	;# 
   583  0FE7                     	;# 
   584  0FE8                     	;# 
   585  0FE9                     	;# 
   586  0FEA                     	;# 
   587  0FEB                     	;# 
   588  0FED                     	;# 
   589  0FEE                     	;# 
   590  0FEF                     	;# 
   591  0000                     	;# 
   592  0001                     	;# 
   593  0002                     	;# 
   594  0003                     	;# 
   595  0004                     	;# 
   596  0005                     	;# 
   597  0006                     	;# 
   598  0007                     	;# 
   599  0008                     	;# 
   600  0009                     	;# 
   601  000A                     	;# 
   602  000B                     	;# 
   603  000C                     	;# 
   604  000D                     	;# 
   605  000E                     	;# 
   606  0010                     	;# 
   607  0011                     	;# 
   608  0012                     	;# 
   609  0013                     	;# 
   610  0014                     	;# 
   611  0015                     	;# 
   612  0016                     	;# 
   613  0016                     	;# 
   614  0017                     	;# 
   615  0018                     	;# 
   616  0019                     	;# 
   617  001A                     	;# 
   618  001B                     	;# 
   619  001C                     	;# 
   620  008C                     	;# 
   621  008D                     	;# 
   622  008E                     	;# 
   623  0090                     	;# 
   624  0091                     	;# 
   625  0092                     	;# 
   626  0093                     	;# 
   627  0094                     	;# 
   628  0095                     	;# 
   629  0096                     	;# 
   630  0097                     	;# 
   631  0098                     	;# 
   632  0099                     	;# 
   633  009A                     	;# 
   634  009B                     	;# 
   635  009B                     	;# 
   636  009C                     	;# 
   637  009D                     	;# 
   638  009E                     	;# 
   639  009F                     	;# 
   640  010C                     	;# 
   641  010D                     	;# 
   642  010E                     	;# 
   643  0111                     	;# 
   644  0112                     	;# 
   645  0113                     	;# 
   646  0114                     	;# 
   647  0115                     	;# 
   648  0116                     	;# 
   649  0117                     	;# 
   650  0118                     	;# 
   651  0119                     	;# 
   652  011A                     	;# 
   653  011B                     	;# 
   654  011C                     	;# 
   655  011D                     	;# 
   656  011D                     	;# 
   657  011D                     	;# 
   658  011E                     	;# 
   659  011F                     	;# 
   660  018C                     	;# 
   661  018D                     	;# 
   662  0191                     	;# 
   663  0191                     	;# 
   664  0192                     	;# 
   665  0193                     	;# 
   666  0193                     	;# 
   667  0193                     	;# 
   668  0194                     	;# 
   669  0195                     	;# 
   670  0196                     	;# 
   671  0199                     	;# 
   672  0199                     	;# 
   673  0199                     	;# 
   674  019A                     	;# 
   675  019A                     	;# 
   676  019A                     	;# 
   677  019B                     	;# 
   678  019B                     	;# 
   679  019B                     	;# 
   680  019B                     	;# 
   681  019B                     	;# 
   682  019C                     	;# 
   683  019C                     	;# 
   684  019C                     	;# 
   685  019D                     	;# 
   686  019D                     	;# 
   687  019D                     	;# 
   688  019E                     	;# 
   689  019E                     	;# 
   690  019E                     	;# 
   691  019F                     	;# 
   692  019F                     	;# 
   693  019F                     	;# 
   694  019F                     	;# 
   695  019F                     	;# 
   696  020C                     	;# 
   697  020D                     	;# 
   698  020E                     	;# 
   699  0210                     	;# 
   700  0211                     	;# 
   701  0211                     	;# 
   702  0212                     	;# 
   703  0212                     	;# 
   704  0213                     	;# 
   705  0213                     	;# 
   706  0214                     	;# 
   707  0214                     	;# 
   708  0215                     	;# 
   709  0215                     	;# 
   710  0215                     	;# 
   711  0215                     	;# 
   712  0216                     	;# 
   713  0216                     	;# 
   714  0217                     	;# 
   715  0217                     	;# 
   716  028C                     	;# 
   717  028D                     	;# 
   718  028E                     	;# 
   719  0291                     	;# 
   720  0291                     	;# 
   721  0292                     	;# 
   722  0293                     	;# 
   723  0298                     	;# 
   724  0298                     	;# 
   725  0299                     	;# 
   726  029A                     	;# 
   727  030C                     	;# 
   728  030D                     	;# 
   729  030E                     	;# 
   730  0311                     	;# 
   731  0311                     	;# 
   732  0312                     	;# 
   733  0313                     	;# 
   734  038C                     	;# 
   735  038D                     	;# 
   736  038E                     	;# 
   737  0390                     	;# 
   738  0391                     	;# 
   739  0392                     	;# 
   740  0393                     	;# 
   741  0394                     	;# 
   742  0395                     	;# 
   743  0396                     	;# 
   744  0397                     	;# 
   745  0398                     	;# 
   746  0399                     	;# 
   747  039D                     	;# 
   748  039E                     	;# 
   749  039F                     	;# 
   750  0511                     	;# 
   751  0513                     	;# 
   752  051A                     	;# 
   753  0811                     	;# 
   754  0812                     	;# 
   755  0813                     	;# 
   756  0814                     	;# 
   757  0815                     	;# 
   758  0816                     	;# 
   759  0817                     	;# 
   760  0818                     	;# 
   761  0819                     	;# 
   762  081A                     	;# 
   763  081B                     	;# 
   764  081C                     	;# 
   765  081D                     	;# 
   766  081E                     	;# 
   767  081F                     	;# 
   768  0820                     	;# 
   769  0821                     	;# 
   770  0821                     	;# 
   771  0822                     	;# 
   772  0823                     	;# 
   773  0823                     	;# 
   774  0824                     	;# 
   775  0825                     	;# 
   776  0825                     	;# 
   777  0826                     	;# 
   778  0827                     	;# 
   779  0827                     	;# 
   780  0828                     	;# 
   781  0829                     	;# 
   782  082A                     	;# 
   783  082B                     	;# 
   784  082C                     	;# 
   785  082D                     	;# 
   786  082E                     	;# 
   787  082F                     	;# 
   788  0831                     	;# 
   789  0832                     	;# 
   790  0833                     	;# 
   791  0834                     	;# 
   792  0835                     	;# 
   793  0836                     	;# 
   794  0837                     	;# 
   795  0838                     	;# 
   796  0839                     	;# 
   797  083A                     	;# 
   798  083B                     	;# 
   799  083C                     	;# 
   800  083D                     	;# 
   801  083E                     	;# 
   802  083F                     	;# 
   803  0840                     	;# 
   804  0841                     	;# 
   805  0841                     	;# 
   806  0842                     	;# 
   807  0843                     	;# 
   808  0843                     	;# 
   809  0844                     	;# 
   810  0845                     	;# 
   811  0845                     	;# 
   812  0846                     	;# 
   813  0847                     	;# 
   814  0847                     	;# 
   815  0848                     	;# 
   816  0849                     	;# 
   817  084A                     	;# 
   818  084B                     	;# 
   819  084C                     	;# 
   820  084D                     	;# 
   821  084E                     	;# 
   822  084F                     	;# 
   823  0851                     	;# 
   824  0852                     	;# 
   825  0853                     	;# 
   826  0854                     	;# 
   827  0855                     	;# 
   828  0856                     	;# 
   829  0857                     	;# 
   830  0858                     	;# 
   831  0859                     	;# 
   832  085A                     	;# 
   833  085B                     	;# 
   834  085C                     	;# 
   835  085D                     	;# 
   836  085E                     	;# 
   837  085F                     	;# 
   838  0860                     	;# 
   839  0861                     	;# 
   840  0861                     	;# 
   841  0862                     	;# 
   842  0863                     	;# 
   843  0863                     	;# 
   844  0864                     	;# 
   845  0865                     	;# 
   846  0865                     	;# 
   847  0866                     	;# 
   848  0867                     	;# 
   849  0867                     	;# 
   850  0868                     	;# 
   851  0869                     	;# 
   852  086A                     	;# 
   853  086B                     	;# 
   854  086C                     	;# 
   855  086D                     	;# 
   856  086E                     	;# 
   857  086F                     	;# 
   858  0FE4                     	;# 
   859  0FE5                     	;# 
   860  0FE6                     	;# 
   861  0FE7                     	;# 
   862  0FE8                     	;# 
   863  0FE9                     	;# 
   864  0FEA                     	;# 
   865  0FEB                     	;# 
   866  0FED                     	;# 
   867  0FEE                     	;# 
   868  0FEF                     	;__tx_buffer
   869                           
   870                           	psect	idataBANK0
   871  02DD                     __pidataBANK0:	
   872                           
   873                           ;initializer for __tx_done
   874  02DD  3401               	retlw	1
   875                           
   876                           	psect	stringtext
   877  01E7                     __pstringtext:	
   878  01E7                     _USART_BAUD_RATE_10417:	
   879  01E7  34B1               	retlw	177
   880  01E8  3428               	retlw	40
   881  01E9  3400               	retlw	0
   882  01EA  3400               	retlw	0
   883  01EB                     __end_of_USART_BAUD_RATE_10417:	
   884  01EB                     _USART_BAUD_RATE_115200:	
   885  01EB  3400               	retlw	0
   886  01EC  34C2               	retlw	194
   887  01ED  3401               	retlw	1
   888  01EE  3400               	retlw	0
   889  01EF                     __end_of_USART_BAUD_RATE_115200:	
   890  01EF                     _USART_BAUD_RATE_1200:	
   891  01EF  34B0               	retlw	176
   892  01F0  3404               	retlw	4
   893  01F1  3400               	retlw	0
   894  01F2  3400               	retlw	0
   895  01F3                     __end_of_USART_BAUD_RATE_1200:	
   896  01F3                     _USART_BAUD_RATE_19200:	
   897  01F3  3400               	retlw	0
   898  01F4  344B               	retlw	75
   899  01F5  3400               	retlw	0
   900  01F6  3400               	retlw	0
   901  01F7                     __end_of_USART_BAUD_RATE_19200:	
   902  01F7                     _USART_BAUD_RATE_2400:	
   903  01F7  3460               	retlw	96
   904  01F8  3409               	retlw	9
   905  01F9  3400               	retlw	0
   906  01FA  3400               	retlw	0
   907  01FB                     __end_of_USART_BAUD_RATE_2400:	
   908  01FB                     _USART_BAUD_RATE_300:	
   909  01FB  342C               	retlw	44
   910  01FC  3401               	retlw	1
   911  01FD  3400               	retlw	0
   912  01FE  3400               	retlw	0
   913  01FF                     __end_of_USART_BAUD_RATE_300:	
   914  01FF                     _USART_BAUD_RATE_57600:	
   915  01FF  3400               	retlw	0
   916  0200  34E1               	retlw	225
   917  0201  3400               	retlw	0
   918  0202  3400               	retlw	0
   919  0203                     __end_of_USART_BAUD_RATE_57600:	
   920  0203                     _USART_BAUD_RATE_9600:	
   921  0203  3480               	retlw	128
   922  0204  3425               	retlw	37
   923  0205  3400               	retlw	0
   924  0206  3400               	retlw	0
   925  0207                     __end_of_USART_BAUD_RATE_9600:	
   926  0207                     STR_1:	
   927  0207  3454               	retlw	84	;'T'
   928  0208  3465               	retlw	101	;'e'
   929  0209  3473               	retlw	115	;'s'
   930  020A  3474               	retlw	116	;'t'
   931  020B  3465               	retlw	101	;'e'
   932  020C  347A               	retlw	122	;'z'
   933  020D  3469               	retlw	105	;'i'
   934  020E  346E               	retlw	110	;'n'
   935  020F  3468               	retlw	104	;'h'
   936  0210  346F               	retlw	111	;'o'
   937  0211  3400               	retlw	0
   938                           
   939                           ; #config settings
   940  0000                     
   941                           	psect	nvBANK0
   942  0034                     __pnvBANK0:	
   943  0034                     __timer0_callback:	
   944  0034                     	ds	2
   945  000B                     _INTCONbits	set	11
   946  0011                     _PIR1bits	set	17
   947  000D                     _PORTBbits	set	13
   948  0095                     _OPTION_REGbits	set	149
   949  0099                     _OSCCONbits	set	153
   950  0091                     _PIE1bits	set	145
   951  008D                     _TRISBbits	set	141
   952  010D                     _LATBbits	set	269
   953  019F                     _BAUDCONbits	set	415
   954  019D                     _RCSTAbits	set	413
   955  019B                     _SPBRG	set	411
   956  019E                     _TX1STAbits	set	414
   957  019A                     _TXREG	set	410
   958  019E                     _TXSTAbits	set	414
   959  0CFB                     _BRG16	set	3323
   960  0CF2                     _BRGH	set	3314
   961  0CF4                     _SYNC	set	3316
   962                           
   963                           	psect	cinit
   964  001E                     start_initialization:	
   965  001E                     __initialization:		;BIGRAM
   966                           
   967                           ; Clear objects allocated to BIGRAM
   968  001E  30F0               	movlw	low (0+8944)
   969  001F  0084               	movwf	4
   970  0020  3022               	movlw	high (0+8944)
   971  0021  0085               	movwf	5
   972  0022  3000               	movlw	0
   973  0023  00FE               	movwf	btemp
   974  0024  3001               	movlw	1
   975  0025  00FF               	movwf	btemp+1
   976  0026  3182  22AB  3180   	fcall	clear_ram0
   977                           
   978                           ; Clear objects allocated to COMMON
   979  0029  01FB               	clrf	__pbssCOMMON& (0+127)
   980  002A  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   981                           
   982                           ; Clear objects allocated to BANK0
   983  002B  01B6               	clrf	__pbssBANK0& (0+127)
   984  002C  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   985                           
   986                           ; Initialize objects allocated to BANK0
   987  002D  3182  22DD         	fcall	__pidataBANK0	;fetch initializer
   988  002F  00B8               	movwf	__pdataBANK0& (0+127)
   989  0030                     end_of_initialization:	
   990                           ;End of C runtime variable initialization code
   991                           
   992  0030                     __end_of__initialization:	
   993  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   994  0031  0020               	movlb	0
   995  0032  3181  29B7         	ljmp	_main	;jump to C main() function
   996                           
   997                           	psect	bssCOMMON
   998  007B                     __pbssCOMMON:	
   999  007B                     __tx_iterator:	
  1000  007B                     	ds	2
  1001                           
  1002                           	psect	bssBANK0
  1003  0036                     __pbssBANK0:	
  1004  0036                     __usart_callback_transmit_done:	
  1005  0036                     	ds	2
  1006                           
  1007                           	psect	dataBANK0
  1008  0038                     __pdataBANK0:	
  1009  0038                     __tx_done:	
  1010  0038                     	ds	1
  1011                           
  1012                           	psect	clrtext
  1013  02AB                     clear_ram0:	
  1014                           ;	Called with FSR0 containing the base address, and
  1015                           ;	btemp/btemp+1 has the size to clear
  1016                           
  1017  02AB  0064               	clrwdt	;clear the watchdog before getting into this loop
  1018  02AC                     clrloop0:	
  1019  02AC  0180               	clrf	0	;clear RAM location pointed to by FSR
  1020  02AD  3101               	addfsr 0,1
  1021  02AE  3001               	movlw	1
  1022  02AF  02FE               	subwf	126,f
  1023  02B0  3000               	movlw	0
  1024  02B1  3BFF               	subwfb	127,f
  1025  02B2  087F               	movf	127,w
  1026  02B3  047E               	iorwf	126,w
  1027  02B4  1903               	btfsc	3,2
  1028  02B5  3400               	retlw	0	;all done for this memory range, return
  1029  02B6  2AAC               	goto	clrloop0	;have we reached the end yet?
  1030                           
  1031                           	psect	cstackCOMMON
  1032  0070                     __pcstackCOMMON:	
  1033  0070                     ?_timer0_isr:	
  1034  0070                     ??_timer0_isr:	
  1035                           ; 1 bytes @ 0x0
  1036                           
  1037  0070                     ?_usart_transmite_interrupt_isr:	
  1038                           ; 1 bytes @ 0x0
  1039                           
  1040  0070                     ??_usart_transmite_interrupt_isr:	
  1041                           ; 1 bytes @ 0x0
  1042                           
  1043  0070                     ?_isr_general:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046  0070                     ??_isr_general:	
  1047                           ; 1 bytes @ 0x0
  1048                           
  1049  0070                     ?_isr_timer0_pisca_led:	
  1050                           ; 1 bytes @ 0x0
  1051                           
  1052  0070                     ??_isr_timer0_pisca_led:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055  0070                     ?_isr_usart_tx_acende_led:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058  0070                     ?_main:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061  0070                     ?_usart_transmite_interrupt_done:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064  0070                     ??_usart_transmite_interrupt_done:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0070                     ?_usart_transmite_lock_write_byte:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070                           
  1071                           ; 1 bytes @ 0x0
  1072  0070                     	ds	1
  1073  0071                     ?_timer0_start:	
  1074  0071                     ??_isr_usart_tx_acende_led:	
  1075                           ; 1 bytes @ 0x1
  1076                           
  1077  0071                     ??_usart_transmite_lock_write_byte:	
  1078                           ; 1 bytes @ 0x1
  1079                           
  1080  0071                     ?_strcpy:	
  1081                           ; 1 bytes @ 0x1
  1082                           
  1083  0071                     ?___lldiv:	
  1084                           ; 2 bytes @ 0x1
  1085                           
  1086  0071                     timer0_start@prescalar_use:	
  1087                           ; 4 bytes @ 0x1
  1088                           
  1089  0071                     usart_transmite_lock_write_byte@data:	
  1090                           ; 1 bytes @ 0x1
  1091                           
  1092  0071                     strcpy@to:	
  1093                           ; 1 bytes @ 0x1
  1094                           
  1095  0071                     ___lldiv@divisor:	
  1096                           ; 2 bytes @ 0x1
  1097                           
  1098                           
  1099                           ; 4 bytes @ 0x1
  1100  0071                     	ds	1
  1101  0072                     timer0_start@prescalar_rate:	
  1102                           
  1103                           ; 1 bytes @ 0x2
  1104  0072                     	ds	1
  1105  0073                     timer0_start@timer0_callback:	
  1106  0073                     strcpy@from:	
  1107                           ; 2 bytes @ 0x3
  1108                           
  1109                           
  1110                           ; 2 bytes @ 0x3
  1111  0073                     	ds	2
  1112  0075                     ??_timer0_start:	
  1113  0075                     ??_strcpy:	
  1114                           ; 1 bytes @ 0x5
  1115                           
  1116  0075                     timer0_start@mode:	
  1117                           ; 1 bytes @ 0x5
  1118                           
  1119  0075                     strcpy@cp:	
  1120                           ; 1 bytes @ 0x5
  1121                           
  1122  0075                     ___lldiv@dividend:	
  1123                           ; 2 bytes @ 0x5
  1124                           
  1125                           
  1126                           ; 4 bytes @ 0x5
  1127  0075                     	ds	2
  1128  0077                     ?_usart_transmite_set_message:	
  1129  0077                     usart_transmite_set_message@message:	
  1130                           ; 1 bytes @ 0x7
  1131                           
  1132                           
  1133                           ; 2 bytes @ 0x7
  1134  0077                     	ds	2
  1135  0079                     ?_usart_transmite_lock_write_message:	
  1136  0079                     ??_usart_transmite_set_message:	
  1137                           ; 1 bytes @ 0x9
  1138                           
  1139  0079                     ??___lldiv:	
  1140                           ; 1 bytes @ 0x9
  1141                           
  1142  0079                     usart_transmite_lock_write_message@message:	
  1143                           ; 1 bytes @ 0x9
  1144                           
  1145                           
  1146                           ; 2 bytes @ 0x9
  1147  0079                     	ds	2
  1148  007B                     ??_usart_transmite_lock_write_message:	
  1149                           
  1150                           	psect	cstackBANK0
  1151  0020                     __pcstackBANK0:	
  1152                           ; 1 bytes @ 0xB
  1153                           
  1154  0020                     ___lldiv@quotient:	
  1155                           
  1156                           ; 4 bytes @ 0x0
  1157  0020                     	ds	4
  1158  0024                     ___lldiv@counter:	
  1159                           
  1160                           ; 1 bytes @ 0x4
  1161  0024                     	ds	1
  1162  0025                     ?_usart_start:	
  1163  0025                     usart_start@baud_rate:	
  1164                           ; 1 bytes @ 0x5
  1165                           
  1166                           
  1167                           ; 4 bytes @ 0x5
  1168  0025                     	ds	4
  1169  0029                     ??_usart_start:	
  1170                           
  1171                           ; 1 bytes @ 0x9
  1172  0029                     	ds	4
  1173  002D                     usart_start@baud_switch:	
  1174                           
  1175                           ; 1 bytes @ 0xD
  1176  002D                     	ds	1
  1177  002E                     usart_start@usart_sync_mode:	
  1178                           
  1179                           ; 1 bytes @ 0xE
  1180  002E                     	ds	1
  1181  002F                     usart_start@fosc:	
  1182                           
  1183                           ; 4 bytes @ 0xF
  1184  002F                     	ds	4
  1185  0033                     ??_main:	
  1186                           
  1187                           ; 1 bytes @ 0x13
  1188  0033                     	ds	1
  1189                           
  1190                           	psect	maintext
  1191  01B7                     __pmaintext:	
  1192 ;;
  1193 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1194 ;;
  1195 ;; *************** function _main *****************
  1196 ;; Defined at:
  1197 ;;		line 46 in file "main.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : B1F/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1213 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1214 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1215 ;;Total ram usage:        1 bytes
  1216 ;; Hardware stack levels required when called:    6
  1217 ;; This function calls:
  1218 ;;		_isr_usart_tx_acende_led
  1219 ;;		_timer0_start
  1220 ;;		_usart_start
  1221 ;;		_usart_transmite_lock_write_message
  1222 ;; This function is called by:
  1223 ;;		Startup code after reset
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           
  1228                           ;psect for function _main
  1229  01B7                     _main:	
  1230                           
  1231                           ;main.c: 47: TRISBbits.TRISB4 = 0;
  1232                           
  1233                           ;incstack = 0
  1234                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1235  01B7  0021               	movlb	1	; select bank1
  1236  01B8  120D               	bcf	13,4	;volatile
  1237                           
  1238                           ;main.c: 48: PORTBbits.RB4 = 0;
  1239  01B9  0020               	movlb	0	; select bank0
  1240  01BA  120D               	bcf	13,4	;volatile
  1241                           
  1242                           ;main.c: 50: timer0_start( TIMER0_MODE_TIMER, PRESCALAR_USE_YES, PRESCALAR_RATE_256, isr
      +                          _timer0_pisca_led );
  1243  01BB  01F1               	clrf	timer0_start@prescalar_use
  1244  01BC  0AF1               	incf	timer0_start@prescalar_use,f
  1245  01BD  3007               	movlw	7
  1246  01BE  00B3               	movwf	??_main
  1247  01BF  0833               	movf	??_main,w
  1248  01C0  00F2               	movwf	timer0_start@prescalar_rate
  1249  01C1  30DE               	movlw	low _isr_timer0_pisca_led
  1250  01C2  00F3               	movwf	timer0_start@timer0_callback
  1251  01C3  3002               	movlw	high _isr_timer0_pisca_led
  1252  01C4  00F4               	movwf	timer0_start@timer0_callback+1
  1253  01C5  3000               	movlw	0
  1254  01C6  3182  2250  3181   	fcall	_timer0_start
  1255                           
  1256                           ;main.c: 52: usart_start( USART_SYNC_MODE_ASYNCHRONOUS, USART_BAUD_RATE_300 );
  1257  01C9  30FB               	movlw	low (_USART_BAUD_RATE_300| (0+32768))
  1258  01CA  0084               	movwf	4
  1259  01CB  3081               	movlw	high (_USART_BAUD_RATE_300| (0+32768))
  1260  01CC  0085               	movwf	5
  1261  01CD  3F00               	moviw [0]fsr0
  1262  01CE  0020               	movlb	0	; select bank0
  1263  01CF  00A5               	movwf	usart_start@baud_rate
  1264  01D0  3F01               	moviw [1]fsr0
  1265  01D1  00A6               	movwf	usart_start@baud_rate+1
  1266  01D2  3F02               	moviw [2]fsr0
  1267  01D3  00A7               	movwf	usart_start@baud_rate+2
  1268  01D4  3F03               	moviw [3]fsr0
  1269  01D5  00A8               	movwf	usart_start@baud_rate+3
  1270  01D6  3000               	movlw	0
  1271  01D7  3180  2034  3181   	fcall	_usart_start
  1272                           
  1273                           ;main.c: 54: INTCONbits.GIE = 1;
  1274  01DA  178B               	bsf	11,7	;volatile
  1275                           
  1276                           ;main.c: 58: usart_transmite_lock_write_message( "Testezinho" );
  1277  01DB  3007               	movlw	low (STR_1| (0+32768))
  1278  01DC  00F9               	movwf	usart_transmite_lock_write_message@message
  1279  01DD  3082               	movlw	high (STR_1| (0+32768))
  1280  01DE  00FA               	movwf	usart_transmite_lock_write_message@message+1
  1281  01DF  3182  2232  3181   	fcall	_usart_transmite_lock_write_message
  1282                           
  1283                           ;main.c: 59: isr_usart_tx_acende_led();
  1284  01E2  3182  22B7  3181   	fcall	_isr_usart_tx_acende_led
  1285  01E5                     l52:	
  1286                           ;main.c: 61: while(1) {
  1287                           
  1288  01E5  0000               	nop	;# 
  1289  01E6  29E5               	goto	l52
  1290  01E7                     __end_of_main:	
  1291                           ;main.c: 63: }
  1292                           ;main.c: 65: return;
  1293                           
  1294                           
  1295                           	psect	text1
  1296  0232                     __ptext1:	
  1297 ;; *************** function _usart_transmite_lock_write_message *****************
  1298 ;; Defined at:
  1299 ;;		line 146 in file "usart.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  message         2    9[COMMON] PTR unsigned char 
  1302 ;;		 -> STR_1(11), 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;		None
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1317 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1318 ;;Total ram usage:        2 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; Hardware stack levels required when called:    5
  1321 ;; This function calls:
  1322 ;;		_usart_transmite_lock_write_byte
  1323 ;;		_usart_transmite_set_message
  1324 ;; This function is called by:
  1325 ;;		_main
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           
  1330                           ;psect for function _usart_transmite_lock_write_message
  1331  0232                     _usart_transmite_lock_write_message:	
  1332                           
  1333                           ;usart.c: 148: usart_transmite_set_message( message );
  1334                           
  1335                           ;incstack = 0
  1336                           ; Regs used in _usart_transmite_lock_write_message: [wreg-fsr1h+status,2+status,0+pclath
      +                          +cstack]
  1337  0232  087A               	movf	usart_transmite_lock_write_message@message+1,w
  1338  0233  00F8               	movwf	usart_transmite_set_message@message+1
  1339  0234  0879               	movf	usart_transmite_lock_write_message@message,w
  1340  0235  00F7               	movwf	usart_transmite_set_message@message
  1341  0236  3182  229C  3182   	fcall	_usart_transmite_set_message
  1342  0239                     l977:	
  1343                           ;usart.c: 150: while( *_tx_iterator ) {
  1344                           
  1345  0239  087B               	movf	__tx_iterator,w
  1346  023A  0086               	movwf	6
  1347  023B  087C               	movf	__tx_iterator+1,w
  1348  023C  0087               	movwf	7
  1349  023D  0801               	movf	1,w
  1350  023E  1903               	btfsc	3,2
  1351  023F  2A4D               	goto	l178
  1352                           
  1353                           ;usart.c: 152: usart_transmite_lock_write_byte( *_tx_iterator );
  1354  0240  087B               	movf	__tx_iterator,w
  1355  0241  0086               	movwf	6
  1356  0242  087C               	movf	__tx_iterator+1,w
  1357  0243  0087               	movwf	7
  1358  0244  0801               	movf	1,w
  1359  0245  3182  22CF  3182   	fcall	_usart_transmite_lock_write_byte
  1360                           
  1361                           ;usart.c: 154: _tx_iterator++;
  1362  0248  3001               	movlw	1
  1363  0249  07FB               	addwf	__tx_iterator,f
  1364  024A  3000               	movlw	0
  1365  024B  3DFC               	addwfc	__tx_iterator+1,f
  1366  024C  2A39               	goto	l977
  1367  024D                     l178:	
  1368                           
  1369                           ;usart.c: 155: }
  1370                           ;usart.c: 157: PIE1bits.TXIE = 0;
  1371  024D  0021               	movlb	1	; select bank1
  1372  024E  1211               	bcf	17,4	;volatile
  1373  024F  0008               	return
  1374  0250                     __end_of_usart_transmite_lock_write_message:	
  1375                           
  1376                           	psect	text2
  1377  029C                     __ptext2:	
  1378 ;; *************** function _usart_transmite_set_message *****************
  1379 ;; Defined at:
  1380 ;;		line 84 in file "usart.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  message         2    7[COMMON] PTR unsigned char 
  1383 ;;		 -> STR_1(11), 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1398 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1399 ;;Total ram usage:        2 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    4
  1402 ;; This function calls:
  1403 ;;		_strcpy
  1404 ;; This function is called by:
  1405 ;;		_usart_transmite_lock_write_message
  1406 ;;		_usart_transmite_interrupt_write_message
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           
  1411                           ;psect for function _usart_transmite_set_message
  1412  029C                     _usart_transmite_set_message:	
  1413                           
  1414                           ;usart.c: 86: strcpy( _tx_buffer, message );
  1415                           
  1416                           ;incstack = 0
  1417                           ; Regs used in _usart_transmite_set_message: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  1418  029C  30F0               	movlw	240
  1419  029D  00F1               	movwf	strcpy@to
  1420  029E  3022               	movlw	34
  1421  029F  00F2               	movwf	strcpy@to+1
  1422  02A0  0878               	movf	usart_transmite_set_message@message+1,w
  1423  02A1  00F4               	movwf	strcpy@from+1
  1424  02A2  0877               	movf	usart_transmite_set_message@message,w
  1425  02A3  00F3               	movwf	strcpy@from
  1426  02A4  3182  226C         	fcall	_strcpy
  1427                           
  1428                           ;usart.c: 88: _tx_iterator = _tx_buffer;
  1429  02A6  30F0               	movlw	240
  1430  02A7  00FB               	movwf	__tx_iterator
  1431  02A8  3022               	movlw	34
  1432  02A9  00FC               	movwf	__tx_iterator+1
  1433  02AA  0008               	return
  1434  02AB                     __end_of_usart_transmite_set_message:	
  1435                           
  1436                           	psect	text3
  1437  026C                     __ptext3:	
  1438 ;; *************** function _strcpy *****************
  1439 ;; Defined at:
  1440 ;;		line 8 in file "/home/bruno/Programs/microchip/xc8/v1.37/sources/common/strcpy.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;  to              2    1[COMMON] PTR unsigned char 
  1443 ;;		 -> _tx_buffer(256), 
  1444 ;;  from            2    3[COMMON] PTR const unsigned char 
  1445 ;;		 -> STR_1(11), 
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;  cp              2    5[COMMON] PTR unsigned char 
  1448 ;;		 -> _tx_buffer(256), 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  2    1[COMMON] PTR unsigned char 
  1451 ;; Registers used:
  1452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, pclath
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1458 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1461 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1462 ;;Total ram usage:        6 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    3
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_usart_transmite_set_message
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           
  1473                           ;psect for function _strcpy
  1474  026C                     _strcpy:	
  1475                           
  1476                           ;incstack = 0
  1477                           ; Regs used in _strcpy: [wreg-fsr1h+pclath]
  1478  026C  0872               	movf	strcpy@to+1,w
  1479  026D  00F6               	movwf	strcpy@cp+1
  1480  026E  0871               	movf	strcpy@to,w
  1481  026F  00F5               	movwf	strcpy@cp
  1482  0270                     l847:	
  1483  0270  0875               	movf	strcpy@cp,w
  1484  0271  0086               	movwf	6
  1485  0272  0876               	movf	strcpy@cp+1,w
  1486  0273  0087               	movwf	7
  1487  0274  0873               	movf	strcpy@from,w
  1488  0275  0084               	movwf	4
  1489  0276  0874               	movf	strcpy@from+1,w
  1490  0277  0085               	movwf	5
  1491  0278  0800               	movf	0,w	;code access
  1492  0279  3FC0               	movwi [0]fsr1
  1493  027A  0889               	movf	9,f
  1494  027B  1903               	btfsc	3,2
  1495  027C  0008               	return
  1496  027D  3001               	movlw	1
  1497  027E  07F5               	addwf	strcpy@cp,f
  1498  027F  3000               	movlw	0
  1499  0280  3DF6               	addwfc	strcpy@cp+1,f
  1500  0281  3001               	movlw	1
  1501  0282  07F3               	addwf	strcpy@from,f
  1502  0283  3000               	movlw	0
  1503  0284  3DF4               	addwfc	strcpy@from+1,f
  1504  0285  2A70               	goto	l847
  1505  0286                     __end_of_strcpy:	
  1506                           ;	Return value of _strcpy is never used
  1507                           
  1508                           
  1509                           	psect	text4
  1510  02CF                     __ptext4:	
  1511 ;; *************** function _usart_transmite_lock_write_byte *****************
  1512 ;; Defined at:
  1513 ;;		line 136 in file "usart.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  data            1    wreg     unsigned char 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;  data            1    1[COMMON] unsigned char 
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1530 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1531 ;;Total ram usage:        1 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; Hardware stack levels required when called:    3
  1534 ;; This function calls:
  1535 ;;		Nothing
  1536 ;; This function is called by:
  1537 ;;		_usart_transmite_lock_write_message
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           
  1542                           ;psect for function _usart_transmite_lock_write_byte
  1543  02CF                     _usart_transmite_lock_write_byte:	
  1544                           
  1545                           ;incstack = 0
  1546                           ; Regs used in _usart_transmite_lock_write_byte: [wreg]
  1547                           ;usart_transmite_lock_write_byte@data stored from wreg
  1548  02CF  00F1               	movwf	usart_transmite_lock_write_byte@data
  1549  02D0                     l170:	
  1550                           ;usart.c: 139: while( !PIR1bits.TXIF ) {
  1551                           
  1552  02D0  0020               	movlb	0	; select bank0
  1553  02D1  1A11               	btfsc	17,4	;volatile
  1554  02D2  2AD5               	goto	l665
  1555  02D3  0000               	nop	;# 
  1556  02D4  2AD0               	goto	l170
  1557  02D5                     l665:	
  1558                           
  1559                           ;usart.c: 141: }
  1560                           ;usart.c: 143: TXREG = data;
  1561  02D5  0871               	movf	usart_transmite_lock_write_byte@data,w
  1562  02D6  0023               	movlb	3	; select bank3
  1563  02D7  009A               	movwf	26	;volatile
  1564  02D8  0008               	return
  1565  02D9                     __end_of_usart_transmite_lock_write_byte:	
  1566                           
  1567                           	psect	text5
  1568  0034                     __ptext5:	
  1569 ;; *************** function _usart_start *****************
  1570 ;; Defined at:
  1571 ;;		line 17 in file "usart.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;  usart_sync_m    1    wreg     enum E8
  1574 ;;  baud_rate       4    5[BANK0 ] unsigned long 
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  usart_sync_m    1   14[BANK0 ] enum E8
  1577 ;;  fosc            4   15[BANK0 ] unsigned long 
  1578 ;;  baud_switch     1   13[BANK0 ] unsigned char 
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1588 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1589 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1590 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1591 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1592 ;;Total ram usage:       14 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; Hardware stack levels required when called:    4
  1595 ;; This function calls:
  1596 ;;		___lldiv
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           
  1603                           ;psect for function _usart_start
  1604  0034                     _usart_start:	
  1605                           
  1606                           ;incstack = 0
  1607                           ; Regs used in _usart_start: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1608                           ;usart_start@usart_sync_mode stored from wreg
  1609  0034  0020               	movlb	0	; select bank0
  1610  0035  00AE               	movwf	usart_start@usart_sync_mode
  1611                           
  1612                           ;usart.c: 19: TX1STAbits.TXEN = 1;
  1613  0036  0023               	movlb	3	; select bank3
  1614  0037  169E               	bsf	30,5	;volatile
  1615                           
  1616                           ;usart.c: 21: RCSTAbits.SPEN = 1;
  1617  0038  179D               	bsf	29,7	;volatile
  1618                           
  1619                           ;usart.c: 23: TX1STAbits.SYNC = usart_sync_mode;
  1620  0039  0020               	movlb	0	; select bank0
  1621  003A  0C2E               	rrf	usart_start@usart_sync_mode,w
  1622  003B  0023               	movlb	3	; select bank3
  1623  003C  1C03               	skipc
  1624  003D  121E               	bcf	30,4	;volatile
  1625  003E  1803               	skipnc
  1626  003F  161E               	bsf	30,4	;volatile
  1627                           
  1628                           ;usart.c: 32: if( usart_sync_mode == USART_SYNC_MODE_ASYNCHRONOUS ) {
  1629  0040  0020               	movlb	0	; select bank0
  1630  0041  082E               	movf	usart_start@usart_sync_mode,w
  1631  0042  1D03               	btfss	3,2
  1632  0043  2846               	goto	l123
  1633                           
  1634                           ;usart.c: 33: BAUDCONbits.SCKP = 0;
  1635  0044  0023               	movlb	3	; select bank3
  1636  0045  121F               	bcf	31,4	;volatile
  1637  0046                     l123:	
  1638                           
  1639                           ;usart.c: 34: }
  1640                           ;usart.c: 37: TXSTAbits.TX9 = USART_9BIT_MODE_NOT_IMPLEMENTED;
  1641  0046  0023               	movlb	3	; select bank3
  1642  0047  131E               	bcf	30,6	;volatile
  1643                           
  1644                           ;usart.c: 41: uint32_t fosc;
  1645                           ;usart.c: 42: switch( OSCCONbits.IRCF ) {
  1646  0048  28A8               	goto	l949
  1647  0049                     l915:	
  1648                           ;usart.c: 43: case 0b1111: fosc = 16000000ul; break;
  1649                           
  1650  0049  3000               	movlw	0
  1651  004A  0020               	movlb	0	; select bank0
  1652  004B  00B2               	movwf	usart_start@fosc+3
  1653  004C  30F4               	movlw	244
  1654  004D  00B1               	movwf	usart_start@fosc+2
  1655  004E  3024               	movlw	36
  1656  004F  28A4               	goto	L17
  1657  0050                     l917:	
  1658                           ;usart.c: 44: case 0b1110: fosc = 8000000ul; break;
  1659                           
  1660  0050  3000               	movlw	0
  1661  0051  00B2               	movwf	usart_start@fosc+3
  1662  0052  307A               	movlw	122
  1663  0053  00B1               	movwf	usart_start@fosc+2
  1664  0054  3012               	movlw	18
  1665  0055  28A4               	goto	L17
  1666  0056                     l919:	
  1667                           ;usart.c: 45: case 0b1101: fosc = 4000000ul; break;
  1668                           
  1669  0056  3000               	movlw	0
  1670  0057  00B2               	movwf	usart_start@fosc+3
  1671  0058  303D               	movlw	61
  1672  0059  00B1               	movwf	usart_start@fosc+2
  1673  005A  3009               	movlw	9
  1674  005B  28A4               	goto	L17
  1675  005C                     l921:	
  1676                           ;usart.c: 46: case 0b1100: fosc = 2000000ul; break;
  1677                           
  1678  005C  3000               	movlw	0
  1679  005D  00B2               	movwf	usart_start@fosc+3
  1680  005E  301E               	movlw	30
  1681  005F  00B1               	movwf	usart_start@fosc+2
  1682  0060  3084               	movlw	132
  1683  0061  00B0               	movwf	usart_start@fosc+1
  1684  0062  3080               	movlw	128
  1685  0063  28A6               	goto	L16
  1686  0064                     l923:	
  1687                           ;usart.c: 47: case 0b1011: fosc = 1000000ul; break;
  1688                           
  1689  0064  3000               	movlw	0
  1690  0065  00B2               	movwf	usart_start@fosc+3
  1691  0066  300F               	movlw	15
  1692  0067  00B1               	movwf	usart_start@fosc+2
  1693  0068  3042               	movlw	66
  1694  0069  00B0               	movwf	usart_start@fosc+1
  1695  006A  3040               	movlw	64
  1696  006B  28A6               	goto	L16
  1697  006C                     l925:	
  1698                           ;usart.c: 48: case 0b1010: fosc = 500000ul; break;
  1699                           
  1700  006C  286F               	goto	l931
  1701  006D                     l927:	
  1702                           ;usart.c: 49: case 0b1001: fosc = 250000ul; break;
  1703                           
  1704  006D  2877               	goto	l933
  1705  006E                     l929:	
  1706                           ;usart.c: 50: case 0b1000: fosc = 125000ul; break;
  1707                           
  1708  006E  287F               	goto	l935
  1709  006F                     l931:	
  1710                           ;usart.c: 51: case 0b0111: fosc = 500000ul; break;
  1711                           
  1712  006F  3000               	movlw	0
  1713  0070  00B2               	movwf	usart_start@fosc+3
  1714  0071  3007               	movlw	7
  1715  0072  00B1               	movwf	usart_start@fosc+2
  1716  0073  30A1               	movlw	161
  1717  0074  00B0               	movwf	usart_start@fosc+1
  1718  0075  3020               	movlw	32
  1719  0076  28A6               	goto	L16
  1720  0077                     l933:	
  1721                           ;usart.c: 52: case 0b0110: fosc = 250000ul; break;
  1722                           
  1723  0077  3000               	movlw	0
  1724  0078  00B2               	movwf	usart_start@fosc+3
  1725  0079  3003               	movlw	3
  1726  007A  00B1               	movwf	usart_start@fosc+2
  1727  007B  30D0               	movlw	208
  1728  007C  00B0               	movwf	usart_start@fosc+1
  1729  007D  3090               	movlw	144
  1730  007E  28A6               	goto	L16
  1731  007F                     l935:	
  1732                           ;usart.c: 53: case 0b0101: fosc = 125000ul; break;
  1733                           
  1734  007F  3000               	movlw	0
  1735  0080  00B2               	movwf	usart_start@fosc+3
  1736  0081  3001               	movlw	1
  1737  0082  00B1               	movwf	usart_start@fosc+2
  1738  0083  30E8               	movlw	232
  1739  0084  00B0               	movwf	usart_start@fosc+1
  1740  0085  3048               	movlw	72
  1741  0086  28A6               	goto	L16
  1742  0087                     l937:	
  1743                           ;usart.c: 54: case 0b0100: fosc = 62500ul; break;
  1744                           
  1745  0087  3000               	movlw	0
  1746  0088  00B2               	movwf	usart_start@fosc+3
  1747  0089  3000               	movlw	0
  1748  008A  00B1               	movwf	usart_start@fosc+2
  1749  008B  30F4               	movlw	244
  1750  008C  00B0               	movwf	usart_start@fosc+1
  1751  008D  3024               	movlw	36
  1752  008E  28A6               	goto	L16
  1753  008F                     l939:	
  1754                           ;usart.c: 55: case 0b0011: fosc = 31250ul; break;
  1755                           
  1756  008F                     l941:	
  1757                           ;usart.c: 56: case 0b0010: fosc = 31250ul; break;
  1758                           
  1759  008F  3000               	movlw	0
  1760  0090  00B2               	movwf	usart_start@fosc+3
  1761  0091  3000               	movlw	0
  1762  0092  00B1               	movwf	usart_start@fosc+2
  1763  0093  307A               	movlw	122
  1764  0094  00B0               	movwf	usart_start@fosc+1
  1765  0095  3012               	movlw	18
  1766  0096  28A6               	goto	L16
  1767  0097                     l943:	
  1768                           ;usart.c: 57: case 0b0001: fosc = 31000ul; break;
  1769                           
  1770  0097                     l945:	
  1771                           ;usart.c: 58: case 0b0000: fosc = 31000ul; break;
  1772                           
  1773  0097  3000               	movlw	0
  1774  0098  00B2               	movwf	usart_start@fosc+3
  1775  0099  3000               	movlw	0
  1776  009A  00B1               	movwf	usart_start@fosc+2
  1777  009B  3079               	movlw	121
  1778  009C  00B0               	movwf	usart_start@fosc+1
  1779  009D  3018               	movlw	24
  1780  009E  28A6               	goto	L16
  1781  009F                     l947:	
  1782                           ;usart.c: 59: default:
  1783                           
  1784                           
  1785                           ;usart.c: 60: fosc = 0ul;
  1786  009F  3000               	movlw	0
  1787  00A0  00B2               	movwf	usart_start@fosc+3
  1788  00A1  3000               	movlw	0
  1789  00A2  00B1               	movwf	usart_start@fosc+2
  1790  00A3  3000               	movlw	0
  1791  00A4                     L17:	
  1792  00A4  00B0               	movwf	usart_start@fosc+1
  1793  00A5  3000               	movlw	0
  1794  00A6                     L16:	
  1795  00A6  00AF               	movwf	usart_start@fosc
  1796                           
  1797                           ;usart.c: 61: }
  1798  00A7  28B8               	goto	l126
  1799  00A8                     l949:	
  1800  00A8  0021               	movlb	1	; select bank1
  1801  00A9  0C19               	rrf	25,w	;volatile
  1802  00AA  0020               	movlb	0	; select bank0
  1803  00AB  00A9               	movwf	??_usart_start
  1804  00AC  0CA9               	rrf	??_usart_start,f
  1805  00AD  0C29               	rrf	??_usart_start,w
  1806  00AE  390F               	andlw	15
  1807                           
  1808                           ; Switch size 1, requested type "space"
  1809                           ; Number of cases is 16, Range of values is 0 to 15
  1810                           ; switch strategies available:
  1811                           ; Name         Instructions Cycles
  1812                           ; direct_byte           38     6 (fixed)
  1813                           ; simple_byte           49    25 (average)
  1814                           ; jumptable            260     6 (fixed)
  1815                           ;	Chosen strategy is direct_byte
  1816  00AF  0084               	movwf	4
  1817  00B0  3010               	movlw	16
  1818  00B1  0204               	subwf	4,w
  1819  00B2  1803               	skipnc
  1820  00B3  289F               	goto	l947
  1821  00B4  3182               	movlp	high S1063
  1822  00B5  3504               	lslf	4,w
  1823  00B6  3E12               	addlw	low S1063
  1824  00B7  0082               	movwf	2
  1825  00B8                     l126:	
  1826                           
  1827                           ;usart.c: 63: if( OSCCONbits.SPLLEN && ( fosc == 16000000ul || fosc == 8000000ul ) ) {
  1828  00B8  0021               	movlb	1	; select bank1
  1829  00B9  1F99               	btfss	25,7	;volatile
  1830  00BA  28D6               	goto	l143
  1831  00BB  3024               	movlw	36
  1832  00BC  0020               	movlb	0	; select bank0
  1833  00BD  0630               	xorwf	usart_start@fosc+1,w
  1834  00BE  30F4               	movlw	244
  1835  00BF  1903               	skipnz
  1836  00C0  0631               	xorwf	usart_start@fosc+2,w
  1837  00C1  042F               	iorwf	usart_start@fosc,w
  1838  00C2  0432               	iorwf	usart_start@fosc+3,w
  1839  00C3  1903               	btfsc	3,2
  1840  00C4  28CE               	goto	l955
  1841  00C5  3012               	movlw	18
  1842  00C6  0630               	xorwf	usart_start@fosc+1,w
  1843  00C7  307A               	movlw	122
  1844  00C8  1903               	skipnz
  1845  00C9  0631               	xorwf	usart_start@fosc+2,w
  1846  00CA  042F               	iorwf	usart_start@fosc,w
  1847  00CB  0432               	iorwf	usart_start@fosc+3,w
  1848  00CC  1D03               	btfss	3,2
  1849  00CD  28D6               	goto	l143
  1850  00CE                     l955:	
  1851                           
  1852                           ;usart.c: 64: fosc = 32000000ul;
  1853  00CE  3001               	movlw	1
  1854  00CF  00B2               	movwf	usart_start@fosc+3
  1855  00D0  30E8               	movlw	232
  1856  00D1  00B1               	movwf	usart_start@fosc+2
  1857  00D2  3048               	movlw	72
  1858  00D3  00B0               	movwf	usart_start@fosc+1
  1859  00D4  3000               	movlw	0
  1860  00D5  00AF               	movwf	usart_start@fosc
  1861  00D6                     l143:	
  1862                           
  1863                           ;usart.c: 65: }
  1864                           ;usart.c: 68: uint8_t baud_switch = SYNC << 2 | BRG16 << 1 | BRGH << 0;
  1865  00D6  3000               	movlw	0
  1866  00D7  0023               	movlb	3	; select bank3
  1867  00D8  1A1E               	btfsc	30,4	;volatile
  1868  00D9  3004               	movlw	4
  1869  00DA  199F               	btfsc	31,3	;volatile
  1870  00DB  3802               	iorlw	2
  1871  00DC  191E               	btfsc	30,2	;volatile
  1872  00DD  3801               	iorlw	1
  1873  00DE  0020               	movlb	0	; select bank0
  1874  00DF  00A9               	movwf	??_usart_start
  1875  00E0  0829               	movf	??_usart_start,w
  1876  00E1  00AD               	movwf	usart_start@baud_switch
  1877                           
  1878                           ;usart.c: 70: switch( baud_switch ) {
  1879  00E2  2957               	goto	l965
  1880  00E3                     l957:	
  1881                           ;usart.c: 71: case 0b000: SPBRG = ( fosc / ( 64ul * baud_rate ) ) - 1ul; break;
  1882                           
  1883  00E3  0825               	movf	usart_start@baud_rate,w
  1884  00E4  00A9               	movwf	??_usart_start
  1885  00E5  0826               	movf	usart_start@baud_rate+1,w
  1886  00E6  00AA               	movwf	??_usart_start+1
  1887  00E7  0827               	movf	usart_start@baud_rate+2,w
  1888  00E8  00AB               	movwf	??_usart_start+2
  1889  00E9  0828               	movf	usart_start@baud_rate+3,w
  1890  00EA  00AC               	movwf	??_usart_start+3
  1891  00EB  3006               	movlw	6
  1892  00EC                     u445:	
  1893  00EC  35A9               	lslf	??_usart_start,f
  1894  00ED  0DAA               	rlf	??_usart_start+1,f
  1895  00EE  0DAB               	rlf	??_usart_start+2,f
  1896  00EF  0DAC               	rlf	??_usart_start+3,f
  1897  00F0  0B89               	decfsz	9,f
  1898  00F1  28EC               	goto	u445
  1899  00F2  082C               	movf	??_usart_start+3,w
  1900  00F3  00F4               	movwf	___lldiv@divisor+3
  1901  00F4  082B               	movf	??_usart_start+2,w
  1902  00F5  00F3               	movwf	___lldiv@divisor+2
  1903  00F6  082A               	movf	??_usart_start+1,w
  1904  00F7  00F2               	movwf	___lldiv@divisor+1
  1905  00F8  0829               	movf	??_usart_start,w
  1906  00F9  00F1               	movwf	___lldiv@divisor
  1907  00FA  0832               	movf	usart_start@fosc+3,w
  1908  00FB  00F8               	movwf	___lldiv@dividend+3
  1909  00FC  0831               	movf	usart_start@fosc+2,w
  1910  00FD  00F7               	movwf	___lldiv@dividend+2
  1911  00FE  0830               	movf	usart_start@fosc+1,w
  1912  00FF  00F6               	movwf	___lldiv@dividend+1
  1913  0100  082F               	movf	usart_start@fosc,w
  1914  0101  00F5               	movwf	___lldiv@dividend
  1915  0102  3181  2164         	fcall	___lldiv
  1916  0104  0871               	movf	?___lldiv,w
  1917  0105  3EFF               	addlw	255
  1918  0106  0023               	movlb	3	; select bank3
  1919  0107  009B               	movwf	27	;volatile
  1920  0108  0008               	return
  1921  0109                     l959:	
  1922                           ;usart.c: 72: case 0b001:
  1923                           
  1924                           
  1925                           ;usart.c: 73: case 0b010: SPBRG = ( fosc / ( 16ul * baud_rate ) ) - 1ul; break;
  1926  0109  0020               	movlb	0	; select bank0
  1927  010A  0825               	movf	usart_start@baud_rate,w
  1928  010B  00A9               	movwf	??_usart_start
  1929  010C  0826               	movf	usart_start@baud_rate+1,w
  1930  010D  00AA               	movwf	??_usart_start+1
  1931  010E  0827               	movf	usart_start@baud_rate+2,w
  1932  010F  00AB               	movwf	??_usart_start+2
  1933  0110  0828               	movf	usart_start@baud_rate+3,w
  1934  0111  00AC               	movwf	??_usart_start+3
  1935  0112  3004               	movlw	4
  1936  0113                     u455:	
  1937  0113  35A9               	lslf	??_usart_start,f
  1938  0114  0DAA               	rlf	??_usart_start+1,f
  1939  0115  0DAB               	rlf	??_usart_start+2,f
  1940  0116  0DAC               	rlf	??_usart_start+3,f
  1941  0117  0B89               	decfsz	9,f
  1942  0118  2913               	goto	u455
  1943  0119  082C               	movf	??_usart_start+3,w
  1944  011A  00F4               	movwf	___lldiv@divisor+3
  1945  011B  082B               	movf	??_usart_start+2,w
  1946  011C  00F3               	movwf	___lldiv@divisor+2
  1947  011D  082A               	movf	??_usart_start+1,w
  1948  011E  00F2               	movwf	___lldiv@divisor+1
  1949  011F  0829               	movf	??_usart_start,w
  1950  0120  00F1               	movwf	___lldiv@divisor
  1951  0121  0832               	movf	usart_start@fosc+3,w
  1952  0122  00F8               	movwf	___lldiv@dividend+3
  1953  0123  0831               	movf	usart_start@fosc+2,w
  1954  0124  00F7               	movwf	___lldiv@dividend+2
  1955  0125  0830               	movf	usart_start@fosc+1,w
  1956  0126  00F6               	movwf	___lldiv@dividend+1
  1957  0127  082F               	movf	usart_start@fosc,w
  1958  0128  00F5               	movwf	___lldiv@dividend
  1959  0129  3181  2164         	fcall	___lldiv
  1960  012B  0871               	movf	?___lldiv,w
  1961  012C  3EFF               	addlw	255
  1962  012D  0023               	movlb	3	; select bank3
  1963  012E  009B               	movwf	27	;volatile
  1964  012F  0008               	return
  1965  0130                     l961:	
  1966                           ;usart.c: 74: default:
  1967                           
  1968                           
  1969                           ;usart.c: 75: SPBRG = ( fosc / ( 4ul * baud_rate ) ) - 1ul; break;
  1970  0130  0020               	movlb	0	; select bank0
  1971  0131  0825               	movf	usart_start@baud_rate,w
  1972  0132  00A9               	movwf	??_usart_start
  1973  0133  0826               	movf	usart_start@baud_rate+1,w
  1974  0134  00AA               	movwf	??_usart_start+1
  1975  0135  0827               	movf	usart_start@baud_rate+2,w
  1976  0136  00AB               	movwf	??_usart_start+2
  1977  0137  0828               	movf	usart_start@baud_rate+3,w
  1978  0138  00AC               	movwf	??_usart_start+3
  1979  0139  3002               	movlw	2
  1980  013A                     u465:	
  1981  013A  35A9               	lslf	??_usart_start,f
  1982  013B  0DAA               	rlf	??_usart_start+1,f
  1983  013C  0DAB               	rlf	??_usart_start+2,f
  1984  013D  0DAC               	rlf	??_usart_start+3,f
  1985  013E  0B89               	decfsz	9,f
  1986  013F  293A               	goto	u465
  1987  0140  082C               	movf	??_usart_start+3,w
  1988  0141  00F4               	movwf	___lldiv@divisor+3
  1989  0142  082B               	movf	??_usart_start+2,w
  1990  0143  00F3               	movwf	___lldiv@divisor+2
  1991  0144  082A               	movf	??_usart_start+1,w
  1992  0145  00F2               	movwf	___lldiv@divisor+1
  1993  0146  0829               	movf	??_usart_start,w
  1994  0147  00F1               	movwf	___lldiv@divisor
  1995  0148  0832               	movf	usart_start@fosc+3,w
  1996  0149  00F8               	movwf	___lldiv@dividend+3
  1997  014A  0831               	movf	usart_start@fosc+2,w
  1998  014B  00F7               	movwf	___lldiv@dividend+2
  1999  014C  0830               	movf	usart_start@fosc+1,w
  2000  014D  00F6               	movwf	___lldiv@dividend+1
  2001  014E  082F               	movf	usart_start@fosc,w
  2002  014F  00F5               	movwf	___lldiv@dividend
  2003  0150  3181  2164         	fcall	___lldiv
  2004  0152  0871               	movf	?___lldiv,w
  2005  0153  3EFF               	addlw	255
  2006  0154  0023               	movlb	3	; select bank3
  2007  0155  009B               	movwf	27	;volatile
  2008                           
  2009                           ;usart.c: 76: }
  2010  0156  0008               	return
  2011  0157                     l965:	
  2012  0157  0020               	movlb	0	; select bank0
  2013  0158  082D               	movf	usart_start@baud_switch,w
  2014                           
  2015                           ; Switch size 1, requested type "space"
  2016                           ; Number of cases is 3, Range of values is 0 to 2
  2017                           ; switch strategies available:
  2018                           ; Name         Instructions Cycles
  2019                           ; simple_byte           10     6 (average)
  2020                           ; direct_byte           12     6 (fixed)
  2021                           ; jumptable            260     6 (fixed)
  2022                           ;	Chosen strategy is simple_byte
  2023  0159  3A00               	xorlw	0	; case 0
  2024  015A  1903               	skipnz
  2025  015B  28E3               	goto	l957
  2026  015C  3A01               	xorlw	1	; case 1
  2027  015D  1903               	skipnz
  2028  015E  2909               	goto	l959
  2029  015F  3A03               	xorlw	3	; case 2
  2030  0160  1903               	skipnz
  2031  0161  2909               	goto	l959
  2032  0162  2930               	goto	l961
  2033  0163  0008               	return
  2034  0164                     __end_of_usart_start:	
  2035                           
  2036                           	psect	swtext1
  2037  0212                     __pswtext1:	
  2038  0212                     S1063:	
  2039  0212  3180  2897         	ljmp	l945
  2040  0214  3180  2897         	ljmp	l943
  2041  0216  3180  288F         	ljmp	l941
  2042  0218  3180  288F         	ljmp	l939
  2043  021A  3180  2887         	ljmp	l937
  2044  021C  3180  287F         	ljmp	l935
  2045  021E  3180  2877         	ljmp	l933
  2046  0220  3180  286F         	ljmp	l931
  2047  0222  3180  286E         	ljmp	l929
  2048  0224  3180  286D         	ljmp	l927
  2049  0226  3180  286C         	ljmp	l925
  2050  0228  3180  2864         	ljmp	l923
  2051  022A  3180  285C         	ljmp	l921
  2052  022C  3180  2856         	ljmp	l919
  2053  022E  3180  2850         	ljmp	l917
  2054  0230  3180  2849         	ljmp	l915
  2055                           
  2056                           	psect	text6
  2057  0164                     __ptext6:	
  2058 ;; *************** function ___lldiv *****************
  2059 ;; Defined at:
  2060 ;;		line 6 in file "/home/bruno/Programs/microchip/xc8/v1.37/sources/common/lldiv.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;  divisor         4    1[COMMON] unsigned long 
  2063 ;;  dividend        4    5[COMMON] unsigned long 
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  quotient        4    0[BANK0 ] unsigned long 
  2066 ;;  counter         1    4[BANK0 ] unsigned char 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  4    1[COMMON] unsigned long 
  2069 ;; Registers used:
  2070 ;;		wreg, status,2, status,0
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2076 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2077 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2078 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2079 ;;      Totals:         9       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2080 ;;Total ram usage:       14 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    3
  2083 ;; This function calls:
  2084 ;;		Nothing
  2085 ;; This function is called by:
  2086 ;;		_usart_start
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           
  2091                           ;psect for function ___lldiv
  2092  0164                     ___lldiv:	
  2093                           
  2094                           ;incstack = 0
  2095                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2096  0164  3000               	movlw	0
  2097  0165  0020               	movlb	0	; select bank0
  2098  0166  00A3               	movwf	___lldiv@quotient+3
  2099  0167  3000               	movlw	0
  2100  0168  00A2               	movwf	___lldiv@quotient+2
  2101  0169  3000               	movlw	0
  2102  016A  00A1               	movwf	___lldiv@quotient+1
  2103  016B  3000               	movlw	0
  2104  016C  00A0               	movwf	___lldiv@quotient
  2105  016D  0874               	movf	___lldiv@divisor+3,w
  2106  016E  0473               	iorwf	___lldiv@divisor+2,w
  2107  016F  0472               	iorwf	___lldiv@divisor+1,w
  2108  0170  0471               	iorwf	___lldiv@divisor,w
  2109  0171  1903               	skipnz
  2110  0172  29AE               	goto	l877
  2111  0173  01A4               	clrf	___lldiv@counter
  2112  0174  0AA4               	incf	___lldiv@counter,f
  2113  0175                     l863:	
  2114  0175  1BF4               	btfsc	___lldiv@divisor+3,7
  2115  0176  2983               	goto	l865
  2116  0177  3001               	movlw	1
  2117  0178                     u305:	
  2118  0178  35F1               	lslf	___lldiv@divisor,f
  2119  0179  0DF2               	rlf	___lldiv@divisor+1,f
  2120  017A  0DF3               	rlf	___lldiv@divisor+2,f
  2121  017B  0DF4               	rlf	___lldiv@divisor+3,f
  2122  017C  0B89               	decfsz	9,f
  2123  017D  2978               	goto	u305
  2124  017E  3001               	movlw	1
  2125  017F  00F9               	movwf	??___lldiv
  2126  0180  0879               	movf	??___lldiv,w
  2127  0181  07A4               	addwf	___lldiv@counter,f
  2128  0182  2975               	goto	l863
  2129  0183                     l865:	
  2130  0183  3001               	movlw	1
  2131  0184                     u325:	
  2132  0184  35A0               	lslf	___lldiv@quotient,f
  2133  0185  0DA1               	rlf	___lldiv@quotient+1,f
  2134  0186  0DA2               	rlf	___lldiv@quotient+2,f
  2135  0187  0DA3               	rlf	___lldiv@quotient+3,f
  2136  0188  0B89               	decfsz	9,f
  2137  0189  2984               	goto	u325
  2138  018A  0874               	movf	___lldiv@divisor+3,w
  2139  018B  0278               	subwf	___lldiv@dividend+3,w
  2140  018C  1D03               	skipz
  2141  018D  2998               	goto	u335
  2142  018E  0873               	movf	___lldiv@divisor+2,w
  2143  018F  0277               	subwf	___lldiv@dividend+2,w
  2144  0190  1D03               	skipz
  2145  0191  2998               	goto	u335
  2146  0192  0872               	movf	___lldiv@divisor+1,w
  2147  0193  0276               	subwf	___lldiv@dividend+1,w
  2148  0194  1D03               	skipz
  2149  0195  2998               	goto	u335
  2150  0196  0871               	movf	___lldiv@divisor,w
  2151  0197  0275               	subwf	___lldiv@dividend,w
  2152  0198                     u335:	
  2153  0198  1C03               	skipc
  2154  0199  29A3               	goto	l873
  2155  019A  0871               	movf	___lldiv@divisor,w
  2156  019B  02F5               	subwf	___lldiv@dividend,f
  2157  019C  0872               	movf	___lldiv@divisor+1,w
  2158  019D  3BF6               	subwfb	___lldiv@dividend+1,f
  2159  019E  0873               	movf	___lldiv@divisor+2,w
  2160  019F  3BF7               	subwfb	___lldiv@dividend+2,f
  2161  01A0  0874               	movf	___lldiv@divisor+3,w
  2162  01A1  3BF8               	subwfb	___lldiv@dividend+3,f
  2163  01A2  1420               	bsf	___lldiv@quotient,0
  2164  01A3                     l873:	
  2165  01A3  3001               	movlw	1
  2166  01A4                     u345:	
  2167  01A4  36F4               	lsrf	___lldiv@divisor+3,f
  2168  01A5  0CF3               	rrf	___lldiv@divisor+2,f
  2169  01A6  0CF2               	rrf	___lldiv@divisor+1,f
  2170  01A7  0CF1               	rrf	___lldiv@divisor,f
  2171  01A8  0B89               	decfsz	9,f
  2172  01A9  29A4               	goto	u345
  2173  01AA  3001               	movlw	1
  2174  01AB  02A4               	subwf	___lldiv@counter,f
  2175  01AC  1D03               	btfss	3,2
  2176  01AD  2983               	goto	l865
  2177  01AE                     l877:	
  2178  01AE  0823               	movf	___lldiv@quotient+3,w
  2179  01AF  00F4               	movwf	?___lldiv+3
  2180  01B0  0822               	movf	___lldiv@quotient+2,w
  2181  01B1  00F3               	movwf	?___lldiv+2
  2182  01B2  0821               	movf	___lldiv@quotient+1,w
  2183  01B3  00F2               	movwf	?___lldiv+1
  2184  01B4  0820               	movf	___lldiv@quotient,w
  2185  01B5  00F1               	movwf	?___lldiv
  2186  01B6  0008               	return
  2187  01B7                     __end_of___lldiv:	
  2188                           
  2189                           	psect	text7
  2190  0250                     __ptext7:	
  2191 ;; *************** function _timer0_start *****************
  2192 ;; Defined at:
  2193 ;;		line 10 in file "timer.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  mode            1    wreg     enum E8
  2196 ;;  prescalar_us    1    1[COMMON] enum E12
  2197 ;;  prescalar_ra    1    2[COMMON] enum E16
  2198 ;;  timer0_callb    2    3[COMMON] PTR FTN()void 
  2199 ;;		 -> isr_timer0_pisca_led(1), 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  mode            1    5[COMMON] enum E8
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2214 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2215 ;;Total ram usage:        5 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    3
  2218 ;; This function calls:
  2219 ;;		Nothing
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           
  2226                           ;psect for function _timer0_start
  2227  0250                     _timer0_start:	
  2228                           
  2229                           ;incstack = 0
  2230                           ; Regs used in _timer0_start: [wreg+status,2+status,0]
  2231                           ;timer0_start@mode stored from wreg
  2232  0250  00F5               	movwf	timer0_start@mode
  2233                           
  2234                           ;timer.c: 11: OPTION_REGbits.TMR0CS = mode;
  2235  0251  0C75               	rrf	timer0_start@mode,w
  2236  0252  0021               	movlb	1	; select bank1
  2237  0253  1C03               	skipc
  2238  0254  1295               	bcf	21,5	;volatile
  2239  0255  1803               	skipnc
  2240  0256  1695               	bsf	21,5	;volatile
  2241                           
  2242                           ;timer.c: 12: OPTION_REGbits.PSA = prescalar_use ? 0 : 1;
  2243  0257  0871               	movf	timer0_start@prescalar_use,w
  2244  0258  1D03               	btfss	3,2
  2245  0259  2A5D               	goto	u380
  2246  025A  0021               	movlb	1	; select bank1
  2247  025B  1595               	bsf	21,3	;volatile
  2248  025C  2A5F               	goto	l899
  2249  025D                     u380:	
  2250  025D  0021               	movlb	1	; select bank1
  2251  025E  1195               	bcf	21,3	;volatile
  2252  025F                     l899:	
  2253                           
  2254                           ;timer.c: 13: OPTION_REGbits.PS = prescalar_rate;
  2255  025F  0815               	movf	21,w	;volatile
  2256  0260  0672               	xorwf	timer0_start@prescalar_rate,w
  2257  0261  39F8               	andlw	-8
  2258  0262  0672               	xorwf	timer0_start@prescalar_rate,w
  2259  0263  0095               	movwf	21	;volatile
  2260                           
  2261                           ;timer.c: 15: _timer0_callback = timer0_callback;
  2262  0264  0874               	movf	timer0_start@timer0_callback+1,w
  2263  0265  0020               	movlb	0	; select bank0
  2264  0266  00B5               	movwf	__timer0_callback+1
  2265  0267  0873               	movf	timer0_start@timer0_callback,w
  2266  0268  00B4               	movwf	__timer0_callback
  2267                           
  2268                           ;timer.c: 17: INTCONbits.TMR0IF = 0;
  2269  0269  110B               	bcf	11,2	;volatile
  2270                           
  2271                           ;timer.c: 18: INTCONbits.TMR0IE = 1;
  2272  026A  168B               	bsf	11,5	;volatile
  2273  026B  0008               	return
  2274  026C                     __end_of_timer0_start:	
  2275                           
  2276                           	psect	text8
  2277  02B7                     __ptext8:	
  2278 ;; *************** function _isr_usart_tx_acende_led *****************
  2279 ;; Defined at:
  2280 ;;		line 42 in file "main.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;		None
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;		None
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		status,0
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2298 ;;Total ram usage:        0 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; Hardware stack levels required when called:    3
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		_main
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           
  2309                           ;psect for function _isr_usart_tx_acende_led
  2310  02B7                     _isr_usart_tx_acende_led:	
  2311                           
  2312                           ;main.c: 43: PORTBbits.RB4 = ~LATBbits.LATB4;
  2313                           
  2314                           ;incstack = 0
  2315                           ; Regs used in _isr_usart_tx_acende_led: [status,0]
  2316  02B7  1003               	clrc
  2317  02B8  0022               	movlb	2	; select bank2
  2318  02B9  1E0D               	btfss	13,4	;volatile
  2319  02BA  1403               	setc
  2320  02BB  1C03               	btfss	3,0
  2321  02BC  2AC0               	goto	u120
  2322  02BD  0020               	movlb	0	; select bank0
  2323  02BE  160D               	bsf	13,4	;volatile
  2324  02BF  0008               	return
  2325  02C0                     u120:	
  2326  02C0  0020               	movlb	0	; select bank0
  2327  02C1  120D               	bcf	13,4	;volatile
  2328  02C2  0008               	return
  2329  02C3                     __end_of_isr_usart_tx_acende_led:	
  2330                           
  2331                           	psect	intentry
  2332  0004                     __pintentry:	
  2333 ;; *************** function _isr_general *****************
  2334 ;; Defined at:
  2335 ;;		line 28 in file "main.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;		None
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;		None
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2351 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2352 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2353 ;;Total ram usage:        1 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; Hardware stack levels required when called:    2
  2356 ;; This function calls:
  2357 ;;		_timer0_isr
  2358 ;;		_usart_transmite_interrupt_isr
  2359 ;; This function is called by:
  2360 ;;		Interrupt level 1
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364  0004                     _isr_general:	
  2365                           
  2366                           ;incstack = 0
  2367                           ; Regs used in _isr_general: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2368  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2369  0005  3180               	pagesel	$
  2370  0006  0020               	movlb	0	; select bank0
  2371  0007  087F               	movf	127,w
  2372  0008  00F0               	movwf	??_isr_general
  2373                           
  2374                           ;main.c: 30: if( INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1 ) {
  2375  0009  1A8B               	btfsc	11,5	;volatile
  2376  000A  1D0B               	btfss	11,2	;volatile
  2377  000B  280F               	goto	i1l985
  2378                           
  2379                           ;main.c: 31: timer0_isr();
  2380  000C  3182  22C3  3180   	fcall	_timer0_isr
  2381  000F                     i1l985:	
  2382                           
  2383                           ;main.c: 32: }
  2384                           ;main.c: 33: if( PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1 ) {
  2385  000F  0021               	movlb	1	; select bank1
  2386  0010  1E11               	btfss	17,4	;volatile
  2387  0011  2817               	goto	i1l43
  2388  0012  0020               	movlb	0	; select bank0
  2389  0013  1E11               	btfss	17,4	;volatile
  2390  0014  2817               	goto	i1l43
  2391                           
  2392                           ;main.c: 34: usart_transmite_interrupt_isr();
  2393  0015  3182  2286         	fcall	_usart_transmite_interrupt_isr
  2394  0017                     i1l43:	
  2395  0017  0870               	movf	??_isr_general,w
  2396  0018  0020               	movlb	0	; select bank0
  2397  0019  00FF               	movwf	127
  2398  001A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2399  001B  0009               	retfie
  2400  001C                     __end_of_isr_general:	
  2401                           
  2402                           	psect	text10
  2403  0286                     __ptext10:	
  2404 ;; *************** function _usart_transmite_interrupt_isr *****************
  2405 ;; Defined at:
  2406 ;;		line 118 in file "usart.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2424 ;;Total ram usage:        0 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    1
  2427 ;; This function calls:
  2428 ;;		_usart_transmite_interrupt_done
  2429 ;; This function is called by:
  2430 ;;		_isr_general
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           
  2435                           ;psect for function _usart_transmite_interrupt_isr
  2436  0286                     _usart_transmite_interrupt_isr:	
  2437                           
  2438                           ;usart.c: 120: if( *_tx_iterator ) {
  2439                           
  2440                           ;incstack = 0
  2441                           ; Regs used in _usart_transmite_interrupt_isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  2442  0286  087B               	movf	__tx_iterator,w
  2443  0287  0086               	movwf	6
  2444  0288  087C               	movf	__tx_iterator+1,w
  2445  0289  0087               	movwf	7
  2446  028A  0801               	movf	1,w
  2447  028B  1903               	btfsc	3,2
  2448  028C  2A99               	goto	i1l893
  2449                           
  2450                           ;usart.c: 121: TXREG = *_tx_iterator;
  2451  028D  087B               	movf	__tx_iterator,w
  2452  028E  0086               	movwf	6
  2453  028F  087C               	movf	__tx_iterator+1,w
  2454  0290  0087               	movwf	7
  2455  0291  0801               	movf	1,w
  2456  0292  0023               	movlb	3	; select bank3
  2457  0293  009A               	movwf	26	;volatile
  2458                           
  2459                           ;usart.c: 122: _tx_iterator++;
  2460  0294  3001               	movlw	1
  2461  0295  07FB               	addwf	__tx_iterator,f
  2462  0296  3000               	movlw	0
  2463  0297  3DFC               	addwfc	__tx_iterator+1,f
  2464                           
  2465                           ;usart.c: 124: } else {
  2466  0298  0008               	return
  2467  0299                     i1l893:	
  2468                           
  2469                           ;usart.c: 125: usart_transmite_interrupt_done();
  2470  0299  3182  22D9         	fcall	_usart_transmite_interrupt_done
  2471  029B  0008               	return
  2472  029C                     __end_of_usart_transmite_interrupt_isr:	
  2473                           
  2474                           	psect	text11
  2475  02D9                     __ptext11:	
  2476 ;; *************** function _usart_transmite_interrupt_done *****************
  2477 ;; Defined at:
  2478 ;;		line 108 in file "usart.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;		None
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;		None
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2496 ;;Total ram usage:        0 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; This function calls:
  2499 ;;		Nothing
  2500 ;; This function is called by:
  2501 ;;		_usart_transmite_interrupt_isr
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           
  2506                           ;psect for function _usart_transmite_interrupt_done
  2507  02D9                     _usart_transmite_interrupt_done:	
  2508                           
  2509                           ;usart.c: 110: if( PIE1bits.TXIE && _usart_callback_transmit_done ) {
  2510                           
  2511                           ;incstack = 0
  2512                           ; Regs used in _usart_transmite_interrupt_done: [wreg+status,2+status,0]
  2513  02D9  0021               	movlb	1	; select bank1
  2514  02DA  0811               	movf	17,w	;volatile
  2515                           
  2516                           ;usart.c: 113: }
  2517                           ;usart.c: 115: PIE1bits.TXIE = 0;
  2518  02DB  1211               	bcf	17,4	;volatile
  2519  02DC  0008               	return
  2520  02DD                     __end_of_usart_transmite_interrupt_done:	
  2521                           
  2522                           	psect	text12
  2523  02C3                     __ptext12:	
  2524 ;; *************** function _timer0_isr *****************
  2525 ;; Defined at:
  2526 ;;		line 21 in file "timer.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;		None
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;		None
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  1    wreg      void 
  2533 ;; Registers used:
  2534 ;;		wreg, status,2, status,0, pclath, cstack
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2544 ;;Total ram usage:        0 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    1
  2547 ;; This function calls:
  2548 ;;		Absolute function
  2549 ;;		_isr_timer0_pisca_led
  2550 ;; This function is called by:
  2551 ;;		_isr_general
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           
  2556                           ;psect for function _timer0_isr
  2557  02C3                     _timer0_isr:	
  2558                           
  2559                           ;timer.c: 22: if( _timer0_callback ) {
  2560                           
  2561                           ;incstack = 0
  2562                           ; Regs used in _timer0_isr: [wreg+status,2+status,0+pclath+cstack]
  2563  02C3  0020               	movlb	0	; select bank0
  2564  02C4  0834               	movf	__timer0_callback,w
  2565  02C5  0435               	iorwf	__timer0_callback+1,w
  2566  02C6  1903               	btfsc	3,2
  2567  02C7  2ACD               	goto	i1l885
  2568                           
  2569                           ;timer.c: 23: _timer0_callback();
  2570  02C8  0835               	movf	__timer0_callback+1,w
  2571  02C9  008A               	movwf	10
  2572  02CA  0834               	movf	__timer0_callback,w
  2573  02CB  000A               	callw
  2574  02CC  3182               	pagesel	$
  2575  02CD                     i1l885:	
  2576                           
  2577                           ;timer.c: 24: }
  2578                           ;timer.c: 25: INTCONbits.TMR0IF = 0;
  2579  02CD  110B               	bcf	11,2	;volatile
  2580  02CE  0008               	return
  2581  02CF                     __end_of_timer0_isr:	
  2582                           
  2583                           	psect	text13
  2584  02DE                     __ptext13:	
  2585 ;; *************** function _isr_timer0_pisca_led *****************
  2586 ;; Defined at:
  2587 ;;		line 38 in file "main.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		None
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2605 ;;Total ram usage:        0 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_main
  2611 ;;		_timer0_isr
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           
  2616                           ;psect for function _isr_timer0_pisca_led
  2617  02DE                     _isr_timer0_pisca_led:	
  2618                           
  2619                           ;incstack = 0
  2620                           ; Regs used in _isr_timer0_pisca_led: []
  2621  02DE  0008               	return
  2622  02DF                     __end_of_isr_timer0_pisca_led:	
  2623  007E                     btemp	set	126	;btemp
  2624  007E                     int$flags	set	126
  2625  007E                     wtemp	set	126
  2626  007E                     wtemp0	set	126
  2627  0080                     wtemp1	set	128
  2628  0082                     wtemp2	set	130
  2629  0084                     wtemp3	set	132
  2630  0086                     wtemp4	set	134
  2631  0088                     wtemp5	set	136
  2632  007F                     wtemp6	set	127
  2633  007E                     ttemp	set	126
  2634  007E                     ttemp0	set	126
  2635  0081                     ttemp1	set	129
  2636  0084                     ttemp2	set	132
  2637  0087                     ttemp3	set	135
  2638  007F                     ttemp4	set	127
  2639  007E                     ltemp	set	126
  2640  007E                     ltemp0	set	126
  2641  0082                     ltemp1	set	130
  2642  0086                     ltemp2	set	134
  2643  0080                     ltemp3	set	128


Data Sizes:
    Strings     11
    Constant    32
    Data        1
    BSS         4
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     20      25
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            32      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 256
		 -> _tx_buffer(BIGRAM[256]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 256
		 -> _tx_buffer(BIGRAM[256]), 

    usart_transmite_lock_write_message@message	PTR unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    _usart_callback_transmit_done	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    _tx_iterator	PTR unsigned char  size(2) Largest target is 256
		 -> _tx_buffer(BIGRAM[256]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 256
		 -> _tx_buffer(BIGRAM[256]), 

    usart_transmite_set_message@message	PTR unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    timer0_start@timer0_callback	PTR FTN()void  size(2) Largest target is 1
		 -> isr_timer0_pisca_led(), 

    _timer0_callback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), isr_timer0_pisca_led(), 


Critical Paths under _main in COMMON

    _main->_usart_transmite_lock_write_message
    _usart_transmite_lock_write_message->_usart_transmite_set_message
    _usart_transmite_set_message->_strcpy
    _usart_start->___lldiv

Critical Paths under _isr_general in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_usart_start
    _usart_start->___lldiv

Critical Paths under _isr_general in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr_general in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_general in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr_general in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr_general in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr_general in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr_general in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr_general in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr_general in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr_general in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr_general in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr_general in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr_general in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1605
                                             19 BANK0      1     1      0
            _isr_usart_tx_acende_led
                       _timer0_start
                        _usart_start
 _usart_transmite_lock_write_message
 ---------------------------------------------------------------------------------
 (1) _usart_transmite_lock_write_message                   2     0      2     454
                                              9 COMMON     2     0      2
    _usart_transmite_lock_write_byte
        _usart_transmite_set_message
 ---------------------------------------------------------------------------------
 (2) _usart_transmite_set_message                          2     0      2     353
                                              7 COMMON     2     0      2
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     203
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _usart_transmite_lock_write_byte                      1     1      0      15
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _usart_start                                         14    10      4     871
                                              5 BANK0     14    10      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     546
                                              1 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _timer0_start                                         5     1      4     280
                                              1 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (1) _isr_usart_tx_acende_led                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr_general                                          1     1      0       0
                                              0 COMMON     1     1      0
                         _timer0_isr
      _usart_transmite_interrupt_isr
 ---------------------------------------------------------------------------------
 (5) _usart_transmite_interrupt_isr                        0     0      0       0
     _usart_transmite_interrupt_done
 ---------------------------------------------------------------------------------
 (6) _usart_transmite_interrupt_done                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _timer0_isr                                           0     0      0       0
                   Absolute function *
               _isr_timer0_pisca_led *
 ---------------------------------------------------------------------------------
 (6) _isr_timer0_pisca_led                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _isr_usart_tx_acende_led
   _timer0_start
   _usart_start
     ___lldiv
   _usart_transmite_lock_write_message
     _usart_transmite_lock_write_byte
     _usart_transmite_set_message
       _strcpy

 _isr_general (ROOT)
   _timer0_isr
     Absolute function(Fake) *
     _isr_timer0_pisca_led *
   _usart_transmite_interrupt_isr
     _usart_transmite_interrupt_done

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      19       5       31.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      26      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               20      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      26      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Sep 10 20:57:51 2016

                                          pc 0002                                           l52 01E5  
      __end_of_usart_transmite_interrupt_isr 029C       __size_of_usart_transmite_interrupt_isr 0016  
              _usart_transmite_interrupt_isr 0286                                          l123 0046  
                                        l126 00B8                                          l143 00D6  
                                        l170 02D0                                          l178 024D  
                                        l921 005C                                          l665 02D5  
                                        l931 006F                                          l923 0064  
                                        l915 0049                                          l941 008F  
                                        l933 0077                                          l925 006C  
                                        l917 0050                                          l863 0175  
                                        l943 0097                                          l935 007F  
                                        l927 006D                                          l919 0056  
                                        l847 0270                                          l873 01A3  
                                        l865 0183                                          l961 0130  
                                        l945 0097                                          l937 0087  
                                        l929 006E                                          l955 00CE  
                                        l947 009F                                          l939 008F  
                                        l877 01AE                                          l957 00E3  
                                        l965 0157                                          l949 00A8  
                                        l959 0109                                          l977 0239  
                                        l899 025F                                          u120 02C0  
                                        u305 0178                                          u325 0184  
                                        u335 0198                                          u345 01A4  
                                        u380 025D                                          u445 00EC  
                                        u455 0113                                          u465 013A  
     __end_of_usart_transmite_interrupt_done 02DD      __size_of_usart_transmite_interrupt_done 0004  
             _usart_transmite_interrupt_done 02D9                   timer0_start@prescalar_rate 0072  
                                        wreg 0009                                         S1063 0212  
                                       STR_1 0207                                         _BRGH 0CF2  
                                       i1l43 0017                                         _SYNC 0CF4  
                                       _main 01B7                                  _usart_start 0034  
                                       fsr0h 0005                                         fsr1h 0007  
                                       fsr0l 0004                                         indf0 0000  
                                       indf1 0001                                         fsr1l 0006  
                                       btemp 007E                                         ltemp 007E  
                                       start 001C                                         ttemp 007E  
                                       wtemp 007E           usart_transmite_set_message@message 0077  
                                      ?_main 0070                                        _BRG16 0CFB  
                              __CFG_WDTE$OFF 0000                              __end_of___lldiv 01B7  
                                      i1l885 02CD                                        i1l893 0299  
                                      i1l985 000F                                        _SPBRG 019B  
                                      _TXREG 019A                                        pclath 000A  
                                      ltemp0 007E                                        ltemp1 0082  
                                      ltemp2 0086                                        ltemp3 0080  
               __end_of_isr_timer0_pisca_led 02DF                                        ttemp0 007E  
                                      ttemp1 0081                                        ttemp2 0084  
                                      ttemp3 0087                                        ttemp4 007F  
                                      status 0003                                        wtemp0 007E  
                                      wtemp1 0080                                        wtemp2 0082  
                                      wtemp3 0084                                        wtemp4 0086  
                                      wtemp5 0088                                        wtemp6 007F  
                            __initialization 001E                                 ?_isr_general 0070  
                               __end_of_main 01E7                     ?_isr_usart_tx_acende_led 0070  
                                     ??_main 0033                                    ??___lldiv 0079  
                     _USART_BAUD_RATE_115200 01EB                                       _strcpy 026C  
                    __end_of__initialization 0030                __end_of_USART_BAUD_RATE_10417 01EB  
                             __pcstackCOMMON 0070                __end_of_USART_BAUD_RATE_19200 01F7  
              __end_of_USART_BAUD_RATE_57600 0203                                 __pidataBANK0 02DD  
        __end_of_usart_transmite_set_message 02AB                  _usart_transmite_set_message 029C  
              __usart_callback_transmit_done 0036                         _isr_timer0_pisca_led 02DE  
                             _OPTION_REGbits 0095                                   __pbssBANK0 0036  
                               ?_usart_start 0025                                   __pmaintext 01B7  
                                 __pintentry 0004                         __size_of_isr_general 0018  
                      ?_isr_timer0_pisca_led 0070                                      ?_strcpy 0071  
                                 __tx_buffer 22F0                          _USART_BAUD_RATE_300 01FB  
                                    ___lldiv 0164                                      __ptext1 0232  
                                    __ptext2 029C                                      __ptext3 026C  
                                    __ptext4 02CF                                      __ptext5 0034  
                                    __ptext6 0164                                      __ptext7 0250  
                                    __ptext8 02B7                                ?_timer0_start 0071  
                            __size_of_strcpy 001A                                      clrloop0 02AC  
                       end_of_initialization 0030             __size_of_isr_usart_tx_acende_led 000C  
                            ___lldiv@divisor 0071                              ___lldiv@counter 0024  
                                  _RCSTAbits 019D                                   _timer0_isr 02C3  
                               __pstringtext 01E7                       ??_isr_timer0_pisca_led 0070  
                             ??_timer0_start 0075                                    _PORTBbits 000D  
                               __tx_iterator 007B                             __CFG_FOSC$INTOSC 0000  
                                  _TRISBbits 008D                       usart_start@baud_switch 002D  
                                  _TXSTAbits 019E                         __size_of_usart_start 0130  
             __end_of_USART_BAUD_RATE_115200 01EF                                  _BAUDCONbits 019F  
 __end_of_usart_transmite_lock_write_message 0250  __size_of_usart_transmite_lock_write_message 001E  
       ??_usart_transmite_lock_write_message 007B          ?_usart_transmite_lock_write_message 0079  
         _usart_transmite_lock_write_message 0232                               __end_of_strcpy 0286  
                        start_initialization 001E         __size_of_usart_transmite_set_message 000F  
             ?_usart_transmite_interrupt_isr 0070                             timer0_start@mode 0075  
                                ?_timer0_isr 0070                        _USART_BAUD_RATE_10417 01E7  
                                __pdataBANK0 0038                        _USART_BAUD_RATE_19200 01F3  
                      _USART_BAUD_RATE_57600 01FF                                     ??_strcpy 0075  
                                __pbssBIGRAM 22F0                                  __pbssCOMMON 007B  
                                  ___latbits 0002                                __pcstackBANK0 0020  
               __end_of_USART_BAUD_RATE_1200 01F3                 __end_of_USART_BAUD_RATE_2400 01FB  
               __end_of_USART_BAUD_RATE_9600 0207                      _isr_usart_tx_acende_led 02B7  
  usart_transmite_lock_write_message@message 0079                         __end_of_timer0_start 026C  
                                  __pnvBANK0 0034                                ??_isr_general 0070  
                                   ?___lldiv 0071                                    __pswtext1 0212  
                        __size_of_timer0_isr 000C                    timer0_start@prescalar_use 0071  
                                   _LATBbits 010D                                    clear_ram0 02AB  
                                   _PIE1bits 0091             ??_usart_transmite_interrupt_done 0070  
            ?_usart_transmite_interrupt_done 0070                                     _PIR1bits 0011  
    __end_of_usart_transmite_lock_write_byte 02D9     __size_of_usart_transmite_lock_write_byte 000A  
          ??_usart_transmite_lock_write_byte 0071             ?_usart_transmite_lock_write_byte 0070  
            _usart_transmite_lock_write_byte 02CF                          __end_of_isr_general 001C  
                timer0_start@timer0_callback 0073                    ??_isr_usart_tx_acende_led 0071  
        usart_transmite_lock_write_byte@data 0071                         _USART_BAUD_RATE_1200 01EF  
                       _USART_BAUD_RATE_2400 01F7                         _USART_BAUD_RATE_9600 0203  
                            usart_start@fosc 002F                 ?_usart_transmite_set_message 0077  
                           __size_of___lldiv 0053                  __end_of_USART_BAUD_RATE_300 01FF  
              __size_of_isr_timer0_pisca_led 0001                                     __ptext10 0286  
                                   __ptext11 02D9                                     __ptext12 02C3  
                                   __ptext13 02DE                        __size_of_timer0_start 001C  
                                   __tx_done 0038                                   strcpy@from 0073  
                              ??_usart_start 0029                                __size_of_main 0030  
            __end_of_isr_usart_tx_acende_led 02C3              ??_usart_transmite_interrupt_isr 0070  
                                _isr_general 0004                                 ??_timer0_isr 0070  
                                   int$flags 007E                         usart_start@baud_rate 0025  
                 usart_start@usart_sync_mode 002E                ??_usart_transmite_set_message 0079  
                               _timer0_start 0250                                   _INTCONbits 000B  
                                   intlevel1 0000                           __end_of_timer0_isr 02CF  
                           ___lldiv@dividend 0075                                   _OSCCONbits 0099  
                        __end_of_usart_start 0164                             ___lldiv@quotient 0020  
                                   strcpy@cp 0075                                     strcpy@to 0071  
                                 _TX1STAbits 019E                             __timer0_callback 0034  
