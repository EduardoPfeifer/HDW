

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Sep 27 13:37:40 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16LF1786
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	swtext1,local,class=CONST,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x620,48
    32                           	dabs	1,0x5A0,80
    33                           	dabs	1,0x520,80
    34                           	dabs	1,0x4C0,48
    35                           	dabs	1,0x4A0,32
    36                           	dabs	1,0x420,80
    37                           	dabs	1,0x3A0,80
    38                           	dabs	1,0x330,64
    39                           	dabs	1,0x22F0,0,__rx_buffer
    40                           	dabs	1,0x21F0,0,__tx_buffer
    41                           	dabs	1,0x7E,2
    42  0000                     	;# 
    43  0001                     	;# 
    44  0002                     	;# 
    45  0003                     	;# 
    46  0004                     	;# 
    47  0005                     	;# 
    48  0006                     	;# 
    49  0007                     	;# 
    50  0008                     	;# 
    51  0009                     	;# 
    52  000A                     	;# 
    53  000B                     	;# 
    54  000C                     	;# 
    55  000D                     	;# 
    56  000E                     	;# 
    57  0010                     	;# 
    58  0011                     	;# 
    59  0012                     	;# 
    60  0013                     	;# 
    61  0014                     	;# 
    62  0015                     	;# 
    63  0016                     	;# 
    64  0016                     	;# 
    65  0017                     	;# 
    66  0018                     	;# 
    67  0019                     	;# 
    68  001A                     	;# 
    69  001B                     	;# 
    70  001C                     	;# 
    71  008C                     	;# 
    72  008D                     	;# 
    73  008E                     	;# 
    74  0090                     	;# 
    75  0091                     	;# 
    76  0092                     	;# 
    77  0093                     	;# 
    78  0094                     	;# 
    79  0095                     	;# 
    80  0096                     	;# 
    81  0097                     	;# 
    82  0098                     	;# 
    83  0099                     	;# 
    84  009A                     	;# 
    85  009B                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  009F                     	;# 
    91  010C                     	;# 
    92  010D                     	;# 
    93  010E                     	;# 
    94  0111                     	;# 
    95  0112                     	;# 
    96  0113                     	;# 
    97  0114                     	;# 
    98  0115                     	;# 
    99  0116                     	;# 
   100  0117                     	;# 
   101  0118                     	;# 
   102  0119                     	;# 
   103  011A                     	;# 
   104  011B                     	;# 
   105  011C                     	;# 
   106  011D                     	;# 
   107  011D                     	;# 
   108  011D                     	;# 
   109  011E                     	;# 
   110  011F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0199                     	;# 
   123  0199                     	;# 
   124  0199                     	;# 
   125  019A                     	;# 
   126  019A                     	;# 
   127  019A                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019C                     	;# 
   134  019C                     	;# 
   135  019C                     	;# 
   136  019D                     	;# 
   137  019D                     	;# 
   138  019D                     	;# 
   139  019E                     	;# 
   140  019E                     	;# 
   141  019E                     	;# 
   142  019F                     	;# 
   143  019F                     	;# 
   144  019F                     	;# 
   145  019F                     	;# 
   146  019F                     	;# 
   147  020C                     	;# 
   148  020D                     	;# 
   149  020E                     	;# 
   150  0210                     	;# 
   151  0211                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0214                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0216                     	;# 
   164  0216                     	;# 
   165  0217                     	;# 
   166  0217                     	;# 
   167  028C                     	;# 
   168  028D                     	;# 
   169  028E                     	;# 
   170  0291                     	;# 
   171  0291                     	;# 
   172  0292                     	;# 
   173  0293                     	;# 
   174  0298                     	;# 
   175  0298                     	;# 
   176  0299                     	;# 
   177  029A                     	;# 
   178  030C                     	;# 
   179  030D                     	;# 
   180  030E                     	;# 
   181  0311                     	;# 
   182  0311                     	;# 
   183  0312                     	;# 
   184  0313                     	;# 
   185  038C                     	;# 
   186  038D                     	;# 
   187  038E                     	;# 
   188  0390                     	;# 
   189  0391                     	;# 
   190  0392                     	;# 
   191  0393                     	;# 
   192  0394                     	;# 
   193  0395                     	;# 
   194  0396                     	;# 
   195  0397                     	;# 
   196  0398                     	;# 
   197  0399                     	;# 
   198  039D                     	;# 
   199  039E                     	;# 
   200  039F                     	;# 
   201  0511                     	;# 
   202  0513                     	;# 
   203  051A                     	;# 
   204  0811                     	;# 
   205  0812                     	;# 
   206  0813                     	;# 
   207  0814                     	;# 
   208  0815                     	;# 
   209  0816                     	;# 
   210  0817                     	;# 
   211  0818                     	;# 
   212  0819                     	;# 
   213  081A                     	;# 
   214  081B                     	;# 
   215  081C                     	;# 
   216  081D                     	;# 
   217  081E                     	;# 
   218  081F                     	;# 
   219  0820                     	;# 
   220  0821                     	;# 
   221  0821                     	;# 
   222  0822                     	;# 
   223  0823                     	;# 
   224  0823                     	;# 
   225  0824                     	;# 
   226  0825                     	;# 
   227  0825                     	;# 
   228  0826                     	;# 
   229  0827                     	;# 
   230  0827                     	;# 
   231  0828                     	;# 
   232  0829                     	;# 
   233  082A                     	;# 
   234  082B                     	;# 
   235  082C                     	;# 
   236  082D                     	;# 
   237  082E                     	;# 
   238  082F                     	;# 
   239  0831                     	;# 
   240  0832                     	;# 
   241  0833                     	;# 
   242  0834                     	;# 
   243  0835                     	;# 
   244  0836                     	;# 
   245  0837                     	;# 
   246  0838                     	;# 
   247  0839                     	;# 
   248  083A                     	;# 
   249  083B                     	;# 
   250  083C                     	;# 
   251  083D                     	;# 
   252  083E                     	;# 
   253  083F                     	;# 
   254  0840                     	;# 
   255  0841                     	;# 
   256  0841                     	;# 
   257  0842                     	;# 
   258  0843                     	;# 
   259  0843                     	;# 
   260  0844                     	;# 
   261  0845                     	;# 
   262  0845                     	;# 
   263  0846                     	;# 
   264  0847                     	;# 
   265  0847                     	;# 
   266  0848                     	;# 
   267  0849                     	;# 
   268  084A                     	;# 
   269  084B                     	;# 
   270  084C                     	;# 
   271  084D                     	;# 
   272  084E                     	;# 
   273  084F                     	;# 
   274  0851                     	;# 
   275  0852                     	;# 
   276  0853                     	;# 
   277  0854                     	;# 
   278  0855                     	;# 
   279  0856                     	;# 
   280  0857                     	;# 
   281  0858                     	;# 
   282  0859                     	;# 
   283  085A                     	;# 
   284  085B                     	;# 
   285  085C                     	;# 
   286  085D                     	;# 
   287  085E                     	;# 
   288  085F                     	;# 
   289  0860                     	;# 
   290  0861                     	;# 
   291  0861                     	;# 
   292  0862                     	;# 
   293  0863                     	;# 
   294  0863                     	;# 
   295  0864                     	;# 
   296  0865                     	;# 
   297  0865                     	;# 
   298  0866                     	;# 
   299  0867                     	;# 
   300  0867                     	;# 
   301  0868                     	;# 
   302  0869                     	;# 
   303  086A                     	;# 
   304  086B                     	;# 
   305  086C                     	;# 
   306  086D                     	;# 
   307  086E                     	;# 
   308  086F                     	;# 
   309  0FE4                     	;# 
   310  0FE5                     	;# 
   311  0FE6                     	;# 
   312  0FE7                     	;# 
   313  0FE8                     	;# 
   314  0FE9                     	;# 
   315  0FEA                     	;# 
   316  0FEB                     	;# 
   317  0FED                     	;# 
   318  0FEE                     	;# 
   319  0FEF                     	;# 
   320  0000                     	;# 
   321  0001                     	;# 
   322  0002                     	;# 
   323  0003                     	;# 
   324  0004                     	;# 
   325  0005                     	;# 
   326  0006                     	;# 
   327  0007                     	;# 
   328  0008                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  0010                     	;# 
   336  0011                     	;# 
   337  0012                     	;# 
   338  0013                     	;# 
   339  0014                     	;# 
   340  0015                     	;# 
   341  0016                     	;# 
   342  0016                     	;# 
   343  0017                     	;# 
   344  0018                     	;# 
   345  0019                     	;# 
   346  001A                     	;# 
   347  001B                     	;# 
   348  001C                     	;# 
   349  008C                     	;# 
   350  008D                     	;# 
   351  008E                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  0111                     	;# 
   373  0112                     	;# 
   374  0113                     	;# 
   375  0114                     	;# 
   376  0115                     	;# 
   377  0116                     	;# 
   378  0117                     	;# 
   379  0118                     	;# 
   380  0119                     	;# 
   381  011A                     	;# 
   382  011B                     	;# 
   383  011C                     	;# 
   384  011D                     	;# 
   385  011D                     	;# 
   386  011D                     	;# 
   387  011E                     	;# 
   388  011F                     	;# 
   389  018C                     	;# 
   390  018D                     	;# 
   391  0191                     	;# 
   392  0191                     	;# 
   393  0192                     	;# 
   394  0193                     	;# 
   395  0193                     	;# 
   396  0193                     	;# 
   397  0194                     	;# 
   398  0195                     	;# 
   399  0196                     	;# 
   400  0199                     	;# 
   401  0199                     	;# 
   402  0199                     	;# 
   403  019A                     	;# 
   404  019A                     	;# 
   405  019A                     	;# 
   406  019B                     	;# 
   407  019B                     	;# 
   408  019B                     	;# 
   409  019B                     	;# 
   410  019B                     	;# 
   411  019C                     	;# 
   412  019C                     	;# 
   413  019C                     	;# 
   414  019D                     	;# 
   415  019D                     	;# 
   416  019D                     	;# 
   417  019E                     	;# 
   418  019E                     	;# 
   419  019E                     	;# 
   420  019F                     	;# 
   421  019F                     	;# 
   422  019F                     	;# 
   423  019F                     	;# 
   424  019F                     	;# 
   425  020C                     	;# 
   426  020D                     	;# 
   427  020E                     	;# 
   428  0210                     	;# 
   429  0211                     	;# 
   430  0211                     	;# 
   431  0212                     	;# 
   432  0212                     	;# 
   433  0213                     	;# 
   434  0213                     	;# 
   435  0214                     	;# 
   436  0214                     	;# 
   437  0215                     	;# 
   438  0215                     	;# 
   439  0215                     	;# 
   440  0215                     	;# 
   441  0216                     	;# 
   442  0216                     	;# 
   443  0217                     	;# 
   444  0217                     	;# 
   445  028C                     	;# 
   446  028D                     	;# 
   447  028E                     	;# 
   448  0291                     	;# 
   449  0291                     	;# 
   450  0292                     	;# 
   451  0293                     	;# 
   452  0298                     	;# 
   453  0298                     	;# 
   454  0299                     	;# 
   455  029A                     	;# 
   456  030C                     	;# 
   457  030D                     	;# 
   458  030E                     	;# 
   459  0311                     	;# 
   460  0311                     	;# 
   461  0312                     	;# 
   462  0313                     	;# 
   463  038C                     	;# 
   464  038D                     	;# 
   465  038E                     	;# 
   466  0390                     	;# 
   467  0391                     	;# 
   468  0392                     	;# 
   469  0393                     	;# 
   470  0394                     	;# 
   471  0395                     	;# 
   472  0396                     	;# 
   473  0397                     	;# 
   474  0398                     	;# 
   475  0399                     	;# 
   476  039D                     	;# 
   477  039E                     	;# 
   478  039F                     	;# 
   479  0511                     	;# 
   480  0513                     	;# 
   481  051A                     	;# 
   482  0811                     	;# 
   483  0812                     	;# 
   484  0813                     	;# 
   485  0814                     	;# 
   486  0815                     	;# 
   487  0816                     	;# 
   488  0817                     	;# 
   489  0818                     	;# 
   490  0819                     	;# 
   491  081A                     	;# 
   492  081B                     	;# 
   493  081C                     	;# 
   494  081D                     	;# 
   495  081E                     	;# 
   496  081F                     	;# 
   497  0820                     	;# 
   498  0821                     	;# 
   499  0821                     	;# 
   500  0822                     	;# 
   501  0823                     	;# 
   502  0823                     	;# 
   503  0824                     	;# 
   504  0825                     	;# 
   505  0825                     	;# 
   506  0826                     	;# 
   507  0827                     	;# 
   508  0827                     	;# 
   509  0828                     	;# 
   510  0829                     	;# 
   511  082A                     	;# 
   512  082B                     	;# 
   513  082C                     	;# 
   514  082D                     	;# 
   515  082E                     	;# 
   516  082F                     	;# 
   517  0831                     	;# 
   518  0832                     	;# 
   519  0833                     	;# 
   520  0834                     	;# 
   521  0835                     	;# 
   522  0836                     	;# 
   523  0837                     	;# 
   524  0838                     	;# 
   525  0839                     	;# 
   526  083A                     	;# 
   527  083B                     	;# 
   528  083C                     	;# 
   529  083D                     	;# 
   530  083E                     	;# 
   531  083F                     	;# 
   532  0840                     	;# 
   533  0841                     	;# 
   534  0841                     	;# 
   535  0842                     	;# 
   536  0843                     	;# 
   537  0843                     	;# 
   538  0844                     	;# 
   539  0845                     	;# 
   540  0845                     	;# 
   541  0846                     	;# 
   542  0847                     	;# 
   543  0847                     	;# 
   544  0848                     	;# 
   545  0849                     	;# 
   546  084A                     	;# 
   547  084B                     	;# 
   548  084C                     	;# 
   549  084D                     	;# 
   550  084E                     	;# 
   551  084F                     	;# 
   552  0851                     	;# 
   553  0852                     	;# 
   554  0853                     	;# 
   555  0854                     	;# 
   556  0855                     	;# 
   557  0856                     	;# 
   558  0857                     	;# 
   559  0858                     	;# 
   560  0859                     	;# 
   561  085A                     	;# 
   562  085B                     	;# 
   563  085C                     	;# 
   564  085D                     	;# 
   565  085E                     	;# 
   566  085F                     	;# 
   567  0860                     	;# 
   568  0861                     	;# 
   569  0861                     	;# 
   570  0862                     	;# 
   571  0863                     	;# 
   572  0863                     	;# 
   573  0864                     	;# 
   574  0865                     	;# 
   575  0865                     	;# 
   576  0866                     	;# 
   577  0867                     	;# 
   578  0867                     	;# 
   579  0868                     	;# 
   580  0869                     	;# 
   581  086A                     	;# 
   582  086B                     	;# 
   583  086C                     	;# 
   584  086D                     	;# 
   585  086E                     	;# 
   586  086F                     	;# 
   587  0FE4                     	;# 
   588  0FE5                     	;# 
   589  0FE6                     	;# 
   590  0FE7                     	;# 
   591  0FE8                     	;# 
   592  0FE9                     	;# 
   593  0FEA                     	;# 
   594  0FEB                     	;# 
   595  0FED                     	;# 
   596  0FEE                     	;# 
   597  0FEF                     	;# 
   598  0000                     	;# 
   599  0001                     	;# 
   600  0002                     	;# 
   601  0003                     	;# 
   602  0004                     	;# 
   603  0005                     	;# 
   604  0006                     	;# 
   605  0007                     	;# 
   606  0008                     	;# 
   607  0009                     	;# 
   608  000A                     	;# 
   609  000B                     	;# 
   610  000C                     	;# 
   611  000D                     	;# 
   612  000E                     	;# 
   613  0010                     	;# 
   614  0011                     	;# 
   615  0012                     	;# 
   616  0013                     	;# 
   617  0014                     	;# 
   618  0015                     	;# 
   619  0016                     	;# 
   620  0016                     	;# 
   621  0017                     	;# 
   622  0018                     	;# 
   623  0019                     	;# 
   624  001A                     	;# 
   625  001B                     	;# 
   626  001C                     	;# 
   627  008C                     	;# 
   628  008D                     	;# 
   629  008E                     	;# 
   630  0090                     	;# 
   631  0091                     	;# 
   632  0092                     	;# 
   633  0093                     	;# 
   634  0094                     	;# 
   635  0095                     	;# 
   636  0096                     	;# 
   637  0097                     	;# 
   638  0098                     	;# 
   639  0099                     	;# 
   640  009A                     	;# 
   641  009B                     	;# 
   642  009B                     	;# 
   643  009C                     	;# 
   644  009D                     	;# 
   645  009E                     	;# 
   646  009F                     	;# 
   647  010C                     	;# 
   648  010D                     	;# 
   649  010E                     	;# 
   650  0111                     	;# 
   651  0112                     	;# 
   652  0113                     	;# 
   653  0114                     	;# 
   654  0115                     	;# 
   655  0116                     	;# 
   656  0117                     	;# 
   657  0118                     	;# 
   658  0119                     	;# 
   659  011A                     	;# 
   660  011B                     	;# 
   661  011C                     	;# 
   662  011D                     	;# 
   663  011D                     	;# 
   664  011D                     	;# 
   665  011E                     	;# 
   666  011F                     	;# 
   667  018C                     	;# 
   668  018D                     	;# 
   669  0191                     	;# 
   670  0191                     	;# 
   671  0192                     	;# 
   672  0193                     	;# 
   673  0193                     	;# 
   674  0193                     	;# 
   675  0194                     	;# 
   676  0195                     	;# 
   677  0196                     	;# 
   678  0199                     	;# 
   679  0199                     	;# 
   680  0199                     	;# 
   681  019A                     	;# 
   682  019A                     	;# 
   683  019A                     	;# 
   684  019B                     	;# 
   685  019B                     	;# 
   686  019B                     	;# 
   687  019B                     	;# 
   688  019B                     	;# 
   689  019C                     	;# 
   690  019C                     	;# 
   691  019C                     	;# 
   692  019D                     	;# 
   693  019D                     	;# 
   694  019D                     	;# 
   695  019E                     	;# 
   696  019E                     	;# 
   697  019E                     	;# 
   698  019F                     	;# 
   699  019F                     	;# 
   700  019F                     	;# 
   701  019F                     	;# 
   702  019F                     	;# 
   703  020C                     	;# 
   704  020D                     	;# 
   705  020E                     	;# 
   706  0210                     	;# 
   707  0211                     	;# 
   708  0211                     	;# 
   709  0212                     	;# 
   710  0212                     	;# 
   711  0213                     	;# 
   712  0213                     	;# 
   713  0214                     	;# 
   714  0214                     	;# 
   715  0215                     	;# 
   716  0215                     	;# 
   717  0215                     	;# 
   718  0215                     	;# 
   719  0216                     	;# 
   720  0216                     	;# 
   721  0217                     	;# 
   722  0217                     	;# 
   723  028C                     	;# 
   724  028D                     	;# 
   725  028E                     	;# 
   726  0291                     	;# 
   727  0291                     	;# 
   728  0292                     	;# 
   729  0293                     	;# 
   730  0298                     	;# 
   731  0298                     	;# 
   732  0299                     	;# 
   733  029A                     	;# 
   734  030C                     	;# 
   735  030D                     	;# 
   736  030E                     	;# 
   737  0311                     	;# 
   738  0311                     	;# 
   739  0312                     	;# 
   740  0313                     	;# 
   741  038C                     	;# 
   742  038D                     	;# 
   743  038E                     	;# 
   744  0390                     	;# 
   745  0391                     	;# 
   746  0392                     	;# 
   747  0393                     	;# 
   748  0394                     	;# 
   749  0395                     	;# 
   750  0396                     	;# 
   751  0397                     	;# 
   752  0398                     	;# 
   753  0399                     	;# 
   754  039D                     	;# 
   755  039E                     	;# 
   756  039F                     	;# 
   757  0511                     	;# 
   758  0513                     	;# 
   759  051A                     	;# 
   760  0811                     	;# 
   761  0812                     	;# 
   762  0813                     	;# 
   763  0814                     	;# 
   764  0815                     	;# 
   765  0816                     	;# 
   766  0817                     	;# 
   767  0818                     	;# 
   768  0819                     	;# 
   769  081A                     	;# 
   770  081B                     	;# 
   771  081C                     	;# 
   772  081D                     	;# 
   773  081E                     	;# 
   774  081F                     	;# 
   775  0820                     	;# 
   776  0821                     	;# 
   777  0821                     	;# 
   778  0822                     	;# 
   779  0823                     	;# 
   780  0823                     	;# 
   781  0824                     	;# 
   782  0825                     	;# 
   783  0825                     	;# 
   784  0826                     	;# 
   785  0827                     	;# 
   786  0827                     	;# 
   787  0828                     	;# 
   788  0829                     	;# 
   789  082A                     	;# 
   790  082B                     	;# 
   791  082C                     	;# 
   792  082D                     	;# 
   793  082E                     	;# 
   794  082F                     	;# 
   795  0831                     	;# 
   796  0832                     	;# 
   797  0833                     	;# 
   798  0834                     	;# 
   799  0835                     	;# 
   800  0836                     	;# 
   801  0837                     	;# 
   802  0838                     	;# 
   803  0839                     	;# 
   804  083A                     	;# 
   805  083B                     	;# 
   806  083C                     	;# 
   807  083D                     	;# 
   808  083E                     	;# 
   809  083F                     	;# 
   810  0840                     	;# 
   811  0841                     	;# 
   812  0841                     	;# 
   813  0842                     	;# 
   814  0843                     	;# 
   815  0843                     	;# 
   816  0844                     	;# 
   817  0845                     	;# 
   818  0845                     	;# 
   819  0846                     	;# 
   820  0847                     	;# 
   821  0847                     	;# 
   822  0848                     	;# 
   823  0849                     	;# 
   824  084A                     	;# 
   825  084B                     	;# 
   826  084C                     	;# 
   827  084D                     	;# 
   828  084E                     	;# 
   829  084F                     	;# 
   830  0851                     	;# 
   831  0852                     	;# 
   832  0853                     	;# 
   833  0854                     	;# 
   834  0855                     	;# 
   835  0856                     	;# 
   836  0857                     	;# 
   837  0858                     	;# 
   838  0859                     	;# 
   839  085A                     	;# 
   840  085B                     	;# 
   841  085C                     	;# 
   842  085D                     	;# 
   843  085E                     	;# 
   844  085F                     	;# 
   845  0860                     	;# 
   846  0861                     	;# 
   847  0861                     	;# 
   848  0862                     	;# 
   849  0863                     	;# 
   850  0863                     	;# 
   851  0864                     	;# 
   852  0865                     	;# 
   853  0865                     	;# 
   854  0866                     	;# 
   855  0867                     	;# 
   856  0867                     	;# 
   857  0868                     	;# 
   858  0869                     	;# 
   859  086A                     	;# 
   860  086B                     	;# 
   861  086C                     	;# 
   862  086D                     	;# 
   863  086E                     	;# 
   864  086F                     	;# 
   865  0FE4                     	;# 
   866  0FE5                     	;# 
   867  0FE6                     	;# 
   868  0FE7                     	;# 
   869  0FE8                     	;# 
   870  0FE9                     	;# 
   871  0FEA                     	;# 
   872  0FEB                     	;# 
   873  0FED                     	;# 
   874  0FEE                     	;# 
   875  0FEF                     	;__tx_buffer
   876                           
   877                           	psect	stringtext
   878  025C                     __pstringtext:	
   879  025C                     _USART_BAUD_RATE_10417:	
   880  025C  34B1               	retlw	177
   881  025D  3428               	retlw	40
   882  025E  3400               	retlw	0
   883  025F  3400               	retlw	0
   884  0260                     __end_of_USART_BAUD_RATE_10417:	
   885  0260                     _USART_BAUD_RATE_115200:	
   886  0260  3400               	retlw	0
   887  0261  34C2               	retlw	194
   888  0262  3401               	retlw	1
   889  0263  3400               	retlw	0
   890  0264                     __end_of_USART_BAUD_RATE_115200:	
   891  0264                     _USART_BAUD_RATE_1200:	
   892  0264  34B0               	retlw	176
   893  0265  3404               	retlw	4
   894  0266  3400               	retlw	0
   895  0267  3400               	retlw	0
   896  0268                     __end_of_USART_BAUD_RATE_1200:	
   897  0268                     _USART_BAUD_RATE_19200:	
   898  0268  3400               	retlw	0
   899  0269  344B               	retlw	75
   900  026A  3400               	retlw	0
   901  026B  3400               	retlw	0
   902  026C                     __end_of_USART_BAUD_RATE_19200:	
   903  026C                     _USART_BAUD_RATE_2400:	
   904  026C  3460               	retlw	96
   905  026D  3409               	retlw	9
   906  026E  3400               	retlw	0
   907  026F  3400               	retlw	0
   908  0270                     __end_of_USART_BAUD_RATE_2400:	
   909  0270                     _USART_BAUD_RATE_300:	
   910  0270  342C               	retlw	44
   911  0271  3401               	retlw	1
   912  0272  3400               	retlw	0
   913  0273  3400               	retlw	0
   914  0274                     __end_of_USART_BAUD_RATE_300:	
   915  0274                     _USART_BAUD_RATE_57600:	
   916  0274  3400               	retlw	0
   917  0275  34E1               	retlw	225
   918  0276  3400               	retlw	0
   919  0277  3400               	retlw	0
   920  0278                     __end_of_USART_BAUD_RATE_57600:	
   921  0278                     _USART_BAUD_RATE_9600:	
   922  0278  3480               	retlw	128
   923  0279  3425               	retlw	37
   924  027A  3400               	retlw	0
   925  027B  3400               	retlw	0
   926  027C                     __end_of_USART_BAUD_RATE_9600:	
   927  027C                     STR_2:	
   928  027C  3454               	retlw	84	;'T'
   929  027D  3465               	retlw	101	;'e'
   930  027E  3473               	retlw	115	;'s'
   931  027F  3474               	retlw	116	;'t'
   932  0280  3465               	retlw	101	;'e'
   933  0281  347A               	retlw	122	;'z'
   934  0282  3469               	retlw	105	;'i'
   935  0283  346E               	retlw	110	;'n'
   936  0284  3468               	retlw	104	;'h'
   937  0285  346F               	retlw	111	;'o'
   938  0286  340D               	retlw	13
   939  0287  3400               	retlw	0
   940  0288                     STR_3:	
   941  0288  3446               	retlw	70	;'F'
   942  0289  346F               	retlw	111	;'o'
   943  028A  346F               	retlw	111	;'o'
   944  028B  3420               	retlw	32	;' '
   945  028C  3462               	retlw	98	;'b'
   946  028D  3461               	retlw	97	;'a'
   947  028E  3472               	retlw	114	;'r'
   948  028F  340D               	retlw	13
   949  0290  3400               	retlw	0
   950  0286                     
   951                           ; #config settings
   952  0000                     
   953                           	psect	nvBANK0
   954  003F                     __pnvBANK0:	
   955  003F                     __timer0_callback:	
   956  003F                     	ds	2
   957  000B                     _INTCONbits	set	11
   958  0011                     _PIR1bits	set	17
   959  000D                     _PORTBbits	set	13
   960  0095                     _OPTION_REGbits	set	149
   961  0099                     _OSCCONbits	set	153
   962  0091                     _PIE1bits	set	145
   963  008D                     _TRISBbits	set	141
   964  008E                     _TRISCbits	set	142
   965  010D                     _LATBbits	set	269
   966  019F                     _BAUDCONbits	set	415
   967  0199                     _RCREG	set	409
   968  019D                     _RCSTAbits	set	413
   969  019B                     _SPBRG	set	411
   970  019E                     _TX1STAbits	set	414
   971  019A                     _TXREG	set	410
   972  019E                     _TXSTAbits	set	414
   973  0CFB                     _BRG16	set	3323
   974  0CF2                     _BRGH	set	3314
   975  0CF4                     _SYNC	set	3316
   976                           
   977                           	psect	cinit
   978  0027                     start_initialization:	
   979  0027                     __initialization:		;BIGRAM
   980                           
   981                           ; Clear objects allocated to BIGRAM
   982  0027  30F0               	movlw	low (0+8688)
   983  0028  0084               	movwf	4
   984  0029  3021               	movlw	high (0+8688)
   985  002A  0085               	movwf	5
   986  002B  3000               	movlw	0
   987  002C  00FE               	movwf	btemp
   988  002D  3002               	movlw	2
   989  002E  00FF               	movwf	btemp+1
   990  002F  3183  2356         	fcall	clear_ram0
   991                           
   992                           ; Clear objects allocated to COMMON
   993  0031  01FA               	clrf	__pbssCOMMON& (0+127)
   994  0032  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   995                           
   996                           ; Clear objects allocated to BANK0
   997  0033  01B7               	clrf	__pbssBANK0& (0+127)
   998  0034  01B8               	clrf	(__pbssBANK0+1)& (0+127)
   999  0035  01B9               	clrf	(__pbssBANK0+2)& (0+127)
  1000  0036  01BA               	clrf	(__pbssBANK0+3)& (0+127)
  1001  0037  01BB               	clrf	(__pbssBANK0+4)& (0+127)
  1002  0038  01BC               	clrf	(__pbssBANK0+5)& (0+127)
  1003  0039  01BD               	clrf	(__pbssBANK0+6)& (0+127)
  1004  003A  01BE               	clrf	(__pbssBANK0+7)& (0+127)
  1005  003B                     end_of_initialization:	
  1006                           ;End of C runtime variable initialization code
  1007                           
  1008  003B                     __end_of__initialization:	
  1009  003B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1010  003C  0020               	movlb	0
  1011  003D  3181  2973         	ljmp	_main	;jump to C main() function
  1012                           
  1013                           	psect	bssCOMMON
  1014  007A                     __pbssCOMMON:	
  1015  007A                     __tx_iterator:	
  1016  007A                     	ds	2
  1017                           
  1018                           	psect	bssBANK0
  1019  0037                     __pbssBANK0:	
  1020  0037                     __rx_isr_done_callback:	
  1021  0037                     	ds	2
  1022  0039                     __rx_iterator:	
  1023  0039                     	ds	2
  1024  003B                     __tx_isr_done_callback:	
  1025  003B                     	ds	2
  1026  003D                     __rx_done:	
  1027  003D                     	ds	1
  1028  003E                     __rx_message_size:	
  1029  003E                     	ds	1
  1030                           
  1031                           	psect	clrtext
  1032  0356                     clear_ram0:	
  1033                           ;	Called with FSR0 containing the base address, and
  1034                           ;	btemp/btemp+1 has the size to clear
  1035                           
  1036  0356  0064               	clrwdt	;clear the watchdog before getting into this loop
  1037  0357                     clrloop0:	
  1038  0357  0180               	clrf	0	;clear RAM location pointed to by FSR
  1039  0358  3101               	addfsr 0,1
  1040  0359  3001               	movlw	1
  1041  035A  02FE               	subwf	126,f
  1042  035B  3000               	movlw	0
  1043  035C  3BFF               	subwfb	127,f
  1044  035D  087F               	movf	127,w
  1045  035E  047E               	iorwf	126,w
  1046  035F  1903               	btfsc	3,2
  1047  0360  3400               	retlw	0	;all done for this memory range, return
  1048  0361  2B57               	goto	clrloop0	;have we reached the end yet?
  1049                           
  1050                           	psect	cstackCOMMON
  1051  0070                     __pcstackCOMMON:	
  1052  0070                     ?_timer0_isr:	
  1053  0070                     ??_timer0_isr:	
  1054                           ; 1 bytes @ 0x0
  1055                           
  1056  0070                     ?_usart_transmite_interrupt_isr:	
  1057                           ; 1 bytes @ 0x0
  1058                           
  1059  0070                     ??_usart_transmite_interrupt_isr:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062  0070                     ?_usart_receive_interrupt_isr:	
  1063                           ; 1 bytes @ 0x0
  1064                           
  1065  0070                     ??_usart_receive_interrupt_isr:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068  0070                     ?_isr_general:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  0070                     ?_isr_timer0_pisca_led:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  0070                     ??_isr_timer0_pisca_led:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0070                     ?_isr_usart_tx_acende_led:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0070                     ??_isr_usart_tx_acende_led:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0070                     ?_isr_usart_rx_teste:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0070                     ??_isr_usart_rx_teste:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0070                     ?_main:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0070                     ?_usart_transmite_lock_write_byte:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095                           
  1096                           ; 1 bytes @ 0x0
  1097  0070                     	ds	1
  1098  0071                     ??_isr_general:	
  1099                           
  1100                           ; 1 bytes @ 0x1
  1101  0071                     	ds	1
  1102  0072                     ?_timer0_start:	
  1103  0072                     ?_usart_receive_interrupt_read_message:	
  1104                           ; 1 bytes @ 0x2
  1105                           
  1106  0072                     ??_usart_transmite_lock_write_byte:	
  1107                           ; 1 bytes @ 0x2
  1108                           
  1109  0072                     ?_usart_receive_interrupt_get_message:	
  1110                           ; 1 bytes @ 0x2
  1111                           
  1112  0072                     ?_strcpy:	
  1113                           ; 2 bytes @ 0x2
  1114                           
  1115  0072                     ?___lldiv:	
  1116                           ; 2 bytes @ 0x2
  1117                           
  1118  0072                     timer0_start@prescalar_use:	
  1119                           ; 4 bytes @ 0x2
  1120                           
  1121  0072                     usart_transmite_lock_write_byte@data:	
  1122                           ; 1 bytes @ 0x2
  1123                           
  1124  0072                     usart_receive_interrupt_read_message@usart_callback_receive_done:	
  1125                           ; 1 bytes @ 0x2
  1126                           
  1127  0072                     strcpy@to:	
  1128                           ; 2 bytes @ 0x2
  1129                           
  1130  0072                     ___lldiv@divisor:	
  1131                           ; 2 bytes @ 0x2
  1132                           
  1133                           
  1134                           ; 4 bytes @ 0x2
  1135  0072                     	ds	1
  1136  0073                     timer0_start@prescalar_rate:	
  1137                           
  1138                           ; 1 bytes @ 0x3
  1139  0073                     	ds	1
  1140  0074                     ??_usart_receive_interrupt_read_message:	
  1141  0074                     ??_usart_receive_interrupt_get_message:	
  1142                           ; 1 bytes @ 0x4
  1143                           
  1144  0074                     timer0_start@timer0_callback:	
  1145                           ; 1 bytes @ 0x4
  1146                           
  1147  0074                     strcpy@from:	
  1148                           ; 2 bytes @ 0x4
  1149                           
  1150                           
  1151                           ; 2 bytes @ 0x4
  1152  0074                     	ds	2
  1153  0076                     ??_timer0_start:	
  1154  0076                     ??_strcpy:	
  1155                           ; 1 bytes @ 0x6
  1156                           
  1157  0076                     timer0_start@mode:	
  1158                           ; 1 bytes @ 0x6
  1159                           
  1160  0076                     strcpy@cp:	
  1161                           ; 1 bytes @ 0x6
  1162                           
  1163  0076                     ___lldiv@dividend:	
  1164                           ; 2 bytes @ 0x6
  1165                           
  1166                           
  1167                           ; 4 bytes @ 0x6
  1168  0076                     	ds	2
  1169  0078                     ?_usart_transmite_set_message:	
  1170  0078                     usart_transmite_set_message@message:	
  1171                           ; 1 bytes @ 0x8
  1172                           
  1173                           
  1174                           ; 2 bytes @ 0x8
  1175  0078                     	ds	2
  1176  007A                     ??_usart_transmite_lock_write_message:	
  1177  007A                     ??_usart_transmite_interrupt_write_message:	
  1178                           ; 1 bytes @ 0xA
  1179                           
  1180  007A                     ??_usart_transmite_set_message:	
  1181                           ; 1 bytes @ 0xA
  1182                           
  1183                           
  1184                           	psect	cstackBANK0
  1185  0020                     __pcstackBANK0:	
  1186                           ; 1 bytes @ 0xA
  1187                           
  1188  0020                     ?_usart_transmite_lock_write_message:	
  1189  0020                     ?_usart_transmite_interrupt_write_message:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192  0020                     ??___lldiv:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195  0020                     usart_transmite_interrupt_write_message@message:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0020                     usart_transmite_lock_write_message@message:	
  1199                           ; 2 bytes @ 0x0
  1200                           
  1201                           
  1202                           ; 2 bytes @ 0x0
  1203  0020                     	ds	1
  1204  0021                     ___lldiv@quotient:	
  1205                           
  1206                           ; 4 bytes @ 0x1
  1207  0021                     	ds	1
  1208  0022                     usart_transmite_interrupt_write_message@usart_callback_transmit_done:	
  1209                           
  1210                           ; 2 bytes @ 0x2
  1211  0022                     	ds	3
  1212  0025                     ___lldiv@counter:	
  1213                           
  1214                           ; 1 bytes @ 0x5
  1215  0025                     	ds	1
  1216  0026                     ?_usart_start:	
  1217  0026                     usart_start@baud_rate:	
  1218                           ; 1 bytes @ 0x6
  1219                           
  1220                           
  1221                           ; 4 bytes @ 0x6
  1222  0026                     	ds	4
  1223  002A                     ??_usart_start:	
  1224                           
  1225                           ; 1 bytes @ 0xA
  1226  002A                     	ds	4
  1227  002E                     usart_start@baud_switch:	
  1228                           
  1229                           ; 1 bytes @ 0xE
  1230  002E                     	ds	1
  1231  002F                     usart_start@usart_sync_mode:	
  1232                           
  1233                           ; 1 bytes @ 0xF
  1234  002F                     	ds	1
  1235  0030                     usart_start@fosc:	
  1236                           
  1237                           ; 4 bytes @ 0x10
  1238  0030                     	ds	4
  1239  0034                     ??_main:	
  1240                           
  1241                           ; 1 bytes @ 0x14
  1242  0034                     	ds	1
  1243  0035                     main@message:	
  1244                           
  1245                           ; 2 bytes @ 0x15
  1246  0035                     	ds	2
  1247                           
  1248                           	psect	maintext
  1249  0173                     __pmaintext:	
  1250 ;;
  1251 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1252 ;;
  1253 ;; *************** function _main *****************
  1254 ;; Defined at:
  1255 ;;		line 54 in file "main.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  message         2   21[BANK0 ] PTR unsigned char 
  1260 ;;		 -> _rx_buffer(256), 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : B1F/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1271 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1272 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1273 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1274 ;;Total ram usage:        3 bytes
  1275 ;; Hardware stack levels required when called:    6
  1276 ;; This function calls:
  1277 ;;		_timer0_start
  1278 ;;		_usart_receive_interrupt_get_message
  1279 ;;		_usart_receive_interrupt_read_message
  1280 ;;		_usart_start
  1281 ;;		_usart_transmite_interrupt_write_message
  1282 ;;		_usart_transmite_lock_write_message
  1283 ;; This function is called by:
  1284 ;;		Startup code after reset
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           
  1289                           ;psect for function _main
  1290  0173                     _main:	
  1291                           
  1292                           ;main.c: 55: TRISBbits.TRISB4 = 0;
  1293                           
  1294                           ;incstack = 0
  1295                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1296  0173  0021               	movlb	1	; select bank1
  1297  0174  120D               	bcf	13,4	;volatile
  1298                           
  1299                           ;main.c: 56: PORTBbits.RB4 = 0;
  1300  0175  0020               	movlb	0	; select bank0
  1301  0176  120D               	bcf	13,4	;volatile
  1302                           
  1303                           ;main.c: 58: timer0_start( TIMER0_MODE_TIMER, PRESCALAR_USE_YES, PRESCALAR_RATE_256, isr
      +                          _timer0_pisca_led );
  1304  0177  01F2               	clrf	timer0_start@prescalar_use
  1305  0178  0AF2               	incf	timer0_start@prescalar_use,f
  1306  0179  3007               	movlw	7
  1307  017A  00B4               	movwf	??_main
  1308  017B  0834               	movf	??_main,w
  1309  017C  00F3               	movwf	timer0_start@prescalar_rate
  1310  017D  308D               	movlw	low _isr_timer0_pisca_led
  1311  017E  00F4               	movwf	timer0_start@timer0_callback
  1312  017F  3003               	movlw	high _isr_timer0_pisca_led
  1313  0180  00F5               	movwf	timer0_start@timer0_callback+1
  1314  0181  3000               	movlw	0
  1315  0182  3182  22F3  3181   	fcall	_timer0_start
  1316                           
  1317                           ;main.c: 60: usart_start( USART_SYNC_MODE_ASYNCHRONOUS, USART_BAUD_RATE_300 );
  1318  0185  3070               	movlw	low (_USART_BAUD_RATE_300| (0+32768))
  1319  0186  0084               	movwf	4
  1320  0187  3082               	movlw	high (_USART_BAUD_RATE_300| (0+32768))
  1321  0188  0085               	movwf	5
  1322  0189  3F00               	moviw [0]fsr0
  1323  018A  0020               	movlb	0	; select bank0
  1324  018B  00A6               	movwf	usart_start@baud_rate
  1325  018C  3F01               	moviw [1]fsr0
  1326  018D  00A7               	movwf	usart_start@baud_rate+1
  1327  018E  3F02               	moviw [2]fsr0
  1328  018F  00A8               	movwf	usart_start@baud_rate+2
  1329  0190  3F03               	moviw [3]fsr0
  1330  0191  00A9               	movwf	usart_start@baud_rate+3
  1331  0192  3000               	movlw	0
  1332  0193  3180  203F  3181   	fcall	_usart_start
  1333                           
  1334                           ;main.c: 62: INTCONbits.GIE = 1;
  1335  0196  178B               	bsf	11,7	;volatile
  1336                           
  1337                           ;main.c: 65: usart_transmite_lock_write_message( "\r" );
  1338  0197  3086               	movlw	low ((STR_2+10)| (0+32768))
  1339  0198  0020               	movlb	0	; select bank0
  1340  0199  00A0               	movwf	usart_transmite_lock_write_message@message
  1341  019A  3082               	movlw	high ((STR_2+10)| (0+32768))
  1342  019B  00A1               	movwf	usart_transmite_lock_write_message@message+1
  1343  019C  3182  22D4  3181   	fcall	_usart_transmite_lock_write_message
  1344                           
  1345                           ;main.c: 66: usart_transmite_lock_write_message( "Testezinho\r" );
  1346  019F  307C               	movlw	low (STR_2| (0+32768))
  1347  01A0  0020               	movlb	0	; select bank0
  1348  01A1  00A0               	movwf	usart_transmite_lock_write_message@message
  1349  01A2  3082               	movlw	high (STR_2| (0+32768))
  1350  01A3  00A1               	movwf	usart_transmite_lock_write_message@message+1
  1351  01A4  3182  22D4  3181   	fcall	_usart_transmite_lock_write_message
  1352                           
  1353                           ;main.c: 68: usart_transmite_lock_write_message( "Foo bar\r" );
  1354  01A7  3088               	movlw	low (STR_3| (0+32768))
  1355  01A8  0020               	movlb	0	; select bank0
  1356  01A9  00A0               	movwf	usart_transmite_lock_write_message@message
  1357  01AA  3082               	movlw	high (STR_3| (0+32768))
  1358  01AB  00A1               	movwf	usart_transmite_lock_write_message@message+1
  1359  01AC  3182  22D4  3181   	fcall	_usart_transmite_lock_write_message
  1360                           
  1361                           ;main.c: 74: _rx_done = 0;
  1362  01AF  0020               	movlb	0	; select bank0
  1363  01B0  01BD               	clrf	__rx_done
  1364                           
  1365                           ;main.c: 75: usart_receive_interrupt_read_message( isr_usart_rx_teste );
  1366  01B1  3089               	movlw	low _isr_usart_rx_teste
  1367  01B2  00F2               	movwf	usart_receive_interrupt_read_message@usart_callback_receive_done
  1368  01B3  3003               	movlw	high _isr_usart_rx_teste
  1369  01B4  00F3               	movwf	usart_receive_interrupt_read_message@usart_callback_receive_done+1
  1370  01B5  3183  2348  3181   	fcall	_usart_receive_interrupt_read_message
  1371  01B8                     l1365:	
  1372                           ;main.c: 77: while(1) {
  1373                           
  1374                           
  1375                           ;main.c: 78: if( _rx_done ) {
  1376  01B8  0020               	movlb	0	; select bank0
  1377  01B9  083D               	movf	__rx_done,w
  1378  01BA  1903               	btfsc	3,2
  1379  01BB  29B8               	goto	l1365
  1380                           
  1381                           ;main.c: 79: char* message = usart_receive_interrupt_get_message();
  1382  01BC  3183  2384  3181   	fcall	_usart_receive_interrupt_get_message
  1383  01BF  0873               	movf	?_usart_receive_interrupt_get_message+1,w
  1384  01C0  0020               	movlb	0	; select bank0
  1385  01C1  00B6               	movwf	main@message+1
  1386  01C2  0872               	movf	?_usart_receive_interrupt_get_message,w
  1387  01C3  00B5               	movwf	main@message
  1388                           
  1389                           ;main.c: 81: usart_transmite_interrupt_write_message( message, isr_usart_tx_acende_led )
      +                          ;
  1390  01C4  0836               	movf	main@message+1,w
  1391  01C5  00A1               	movwf	usart_transmite_interrupt_write_message@message+1
  1392  01C6  0835               	movf	main@message,w
  1393  01C7  00A0               	movwf	usart_transmite_interrupt_write_message@message
  1394  01C8  3062               	movlw	low _isr_usart_tx_acende_led
  1395  01C9  00A2               	movwf	usart_transmite_interrupt_write_message@usart_callback_transmit_done
  1396  01CA  3003               	movlw	high _isr_usart_tx_acende_led
  1397  01CB  00A3               	movwf	usart_transmite_interrupt_write_message@usart_callback_transmit_done+1
  1398  01CC  3183  2329  3181   	fcall	_usart_transmite_interrupt_write_message
  1399                           
  1400                           ;main.c: 82: _rx_done = 0;
  1401  01CF  0020               	movlb	0	; select bank0
  1402  01D0  01BD               	clrf	__rx_done
  1403  01D1  29B8               	goto	l1365
  1404  01D2                     __end_of_main:	
  1405                           ;main.c: 83: }
  1406                           ;main.c: 94: }
  1407                           ;main.c: 96: return;
  1408                           
  1409                           
  1410                           	psect	text1
  1411  02D4                     __ptext1:	
  1412 ;; *************** function _usart_transmite_lock_write_message *****************
  1413 ;; Defined at:
  1414 ;;		line 159 in file "usart.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  message         2    0[BANK0 ] PTR unsigned char 
  1417 ;;		 -> STR_3(9), STR_2(12), STR_1(2), 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;		None
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1429 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1432 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1433 ;;Total ram usage:        2 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    5
  1436 ;; This function calls:
  1437 ;;		_usart_transmite_lock_write_byte
  1438 ;;		_usart_transmite_set_message
  1439 ;; This function is called by:
  1440 ;;		_main
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           
  1445                           ;psect for function _usart_transmite_lock_write_message
  1446  02D4                     _usart_transmite_lock_write_message:	
  1447                           
  1448                           ;usart.c: 161: usart_transmite_set_message( message );
  1449                           
  1450                           ;incstack = 0
  1451                           ; Regs used in _usart_transmite_lock_write_message: [wreg-fsr1h+status,2+status,0+pclath
      +                          +cstack]
  1452  02D4  0020               	movlb	0	; select bank0
  1453  02D5  0821               	movf	usart_transmite_lock_write_message@message+1,w
  1454  02D6  00F9               	movwf	usart_transmite_set_message@message+1
  1455  02D7  0820               	movf	usart_transmite_lock_write_message@message,w
  1456  02D8  00F8               	movwf	usart_transmite_set_message@message
  1457  02D9  3183  2339  3182   	fcall	_usart_transmite_set_message
  1458  02DC                     l1345:	
  1459                           ;usart.c: 163: while( *_tx_iterator ) {
  1460                           
  1461  02DC  087A               	movf	__tx_iterator,w
  1462  02DD  0086               	movwf	6
  1463  02DE  087B               	movf	__tx_iterator+1,w
  1464  02DF  0087               	movwf	7
  1465  02E0  0801               	movf	1,w
  1466  02E1  1903               	btfsc	3,2
  1467  02E2  2AF0               	goto	l202
  1468                           
  1469                           ;usart.c: 165: usart_transmite_lock_write_byte( *_tx_iterator );
  1470  02E3  087A               	movf	__tx_iterator,w
  1471  02E4  0086               	movwf	6
  1472  02E5  087B               	movf	__tx_iterator+1,w
  1473  02E6  0087               	movwf	7
  1474  02E7  0801               	movf	1,w
  1475  02E8  3183  237A  3182   	fcall	_usart_transmite_lock_write_byte
  1476                           
  1477                           ;usart.c: 167: _tx_iterator++;
  1478  02EB  3001               	movlw	1
  1479  02EC  07FA               	addwf	__tx_iterator,f
  1480  02ED  3000               	movlw	0
  1481  02EE  3DFB               	addwfc	__tx_iterator+1,f
  1482  02EF  2ADC               	goto	l1345
  1483  02F0                     l202:	
  1484                           
  1485                           ;usart.c: 168: }
  1486                           ;usart.c: 170: PIE1bits.TXIE = 0;
  1487  02F0  0021               	movlb	1	; select bank1
  1488  02F1  1211               	bcf	17,4	;volatile
  1489  02F2  0008               	return
  1490  02F3                     __end_of_usart_transmite_lock_write_message:	
  1491                           
  1492                           	psect	text2
  1493  037A                     __ptext2:	
  1494 ;; *************** function _usart_transmite_lock_write_byte *****************
  1495 ;; Defined at:
  1496 ;;		line 149 in file "usart.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  data            1    wreg     unsigned char 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  data            1    2[COMMON] unsigned char 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		wreg
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1514 ;;Total ram usage:        1 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    3
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_usart_transmite_lock_write_message
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           
  1525                           ;psect for function _usart_transmite_lock_write_byte
  1526  037A                     _usart_transmite_lock_write_byte:	
  1527                           
  1528                           ;incstack = 0
  1529                           ; Regs used in _usart_transmite_lock_write_byte: [wreg]
  1530                           ;usart_transmite_lock_write_byte@data stored from wreg
  1531  037A  00F2               	movwf	usart_transmite_lock_write_byte@data
  1532  037B                     l194:	
  1533                           ;usart.c: 152: while( !PIR1bits.TXIF ) {
  1534                           
  1535  037B  0020               	movlb	0	; select bank0
  1536  037C  1A11               	btfsc	17,4	;volatile
  1537  037D  2B80               	goto	l999
  1538                           
  1539                           ;usart.c: 153: __nop();
  1540  037E  0000               	nop
  1541  037F  2B7B               	goto	l194
  1542  0380                     l999:	
  1543                           
  1544                           ;usart.c: 154: }
  1545                           ;usart.c: 156: TXREG = data;
  1546  0380  0872               	movf	usart_transmite_lock_write_byte@data,w
  1547  0381  0023               	movlb	3	; select bank3
  1548  0382  009A               	movwf	26	;volatile
  1549  0383  0008               	return
  1550  0384                     __end_of_usart_transmite_lock_write_byte:	
  1551                           
  1552                           	psect	text3
  1553  0329                     __ptext3:	
  1554 ;; *************** function _usart_transmite_interrupt_write_message *****************
  1555 ;; Defined at:
  1556 ;;		line 113 in file "usart.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;  message         2    0[BANK0 ] PTR unsigned char 
  1559 ;;		 -> _rx_buffer(256), 
  1560 ;;  usart_callba    2    2[BANK0 ] PTR FTN()void 
  1561 ;;		 -> isr_usart_tx_acende_led(1), 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;		None
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1573 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1576 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1577 ;;Total ram usage:        4 bytes
  1578 ;; Hardware stack levels used:    1
  1579 ;; Hardware stack levels required when called:    5
  1580 ;; This function calls:
  1581 ;;		_usart_transmite_set_message
  1582 ;; This function is called by:
  1583 ;;		_main
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           
  1588                           ;psect for function _usart_transmite_interrupt_write_message
  1589  0329                     _usart_transmite_interrupt_write_message:	
  1590                           
  1591                           ;usart.c: 115: usart_transmite_set_message(message);
  1592                           
  1593                           ;incstack = 0
  1594                           ; Regs used in _usart_transmite_interrupt_write_message: [wreg-fsr1h+status,2+status,0+p
      +                          clath+cstack]
  1595  0329  0020               	movlb	0	; select bank0
  1596  032A  0821               	movf	usart_transmite_interrupt_write_message@message+1,w
  1597  032B  00F9               	movwf	usart_transmite_set_message@message+1
  1598  032C  0820               	movf	usart_transmite_interrupt_write_message@message,w
  1599  032D  00F8               	movwf	usart_transmite_set_message@message
  1600  032E  3183  2339         	fcall	_usart_transmite_set_message
  1601                           
  1602                           ;usart.c: 117: _tx_isr_done_callback = usart_callback_transmit_done;
  1603  0330  0020               	movlb	0	; select bank0
  1604  0331  0823               	movf	usart_transmite_interrupt_write_message@usart_callback_transmit_done+1,w
  1605  0332  00BC               	movwf	__tx_isr_done_callback+1
  1606  0333  0822               	movf	usart_transmite_interrupt_write_message@usart_callback_transmit_done,w
  1607  0334  00BB               	movwf	__tx_isr_done_callback
  1608                           
  1609                           ;usart.c: 119: INTCONbits.PEIE = 1;
  1610  0335  170B               	bsf	11,6	;volatile
  1611                           
  1612                           ;usart.c: 122: PIE1bits.TXIE = 1;
  1613  0336  0021               	movlb	1	; select bank1
  1614  0337  1611               	bsf	17,4	;volatile
  1615  0338  0008               	return
  1616  0339                     __end_of_usart_transmite_interrupt_write_message:	
  1617                           
  1618                           	psect	text4
  1619  0339                     __ptext4:	
  1620 ;; *************** function _usart_transmite_set_message *****************
  1621 ;; Defined at:
  1622 ;;		line 106 in file "usart.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;  message         2    8[COMMON] PTR unsigned char 
  1625 ;;		 -> _rx_buffer(256), STR_3(9), STR_2(12), STR_1(2), 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1641 ;;Total ram usage:        2 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:    4
  1644 ;; This function calls:
  1645 ;;		_strcpy
  1646 ;; This function is called by:
  1647 ;;		_usart_transmite_interrupt_write_message
  1648 ;;		_usart_transmite_lock_write_message
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           
  1653                           ;psect for function _usart_transmite_set_message
  1654  0339                     _usart_transmite_set_message:	
  1655                           
  1656                           ;usart.c: 108: strcpy( _tx_buffer, message );
  1657                           
  1658                           ;incstack = 0
  1659                           ; Regs used in _usart_transmite_set_message: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  1660  0339  30F0               	movlw	240
  1661  033A  00F2               	movwf	strcpy@to
  1662  033B  3021               	movlw	33
  1663  033C  00F3               	movwf	strcpy@to+1
  1664  033D  0879               	movf	usart_transmite_set_message@message+1,w
  1665  033E  00F5               	movwf	strcpy@from+1
  1666  033F  0878               	movf	usart_transmite_set_message@message,w
  1667  0340  00F4               	movwf	strcpy@from
  1668  0341  3183  230F         	fcall	_strcpy
  1669                           
  1670                           ;usart.c: 110: _tx_iterator = _tx_buffer;
  1671  0343  30F0               	movlw	240
  1672  0344  00FA               	movwf	__tx_iterator
  1673  0345  3021               	movlw	33
  1674  0346  00FB               	movwf	__tx_iterator+1
  1675  0347  0008               	return
  1676  0348                     __end_of_usart_transmite_set_message:	
  1677                           
  1678                           	psect	text5
  1679  030F                     __ptext5:	
  1680 ;; *************** function _strcpy *****************
  1681 ;; Defined at:
  1682 ;;		line 8 in file "/home/bruno/Programs/microchip/xc8/v1.37/sources/common/strcpy.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  to              2    2[COMMON] PTR unsigned char 
  1685 ;;		 -> _tx_buffer(256), 
  1686 ;;  from            2    4[COMMON] PTR const unsigned char 
  1687 ;;		 -> _rx_buffer(256), STR_3(9), STR_2(12), STR_1(2), 
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  cp              2    6[COMMON] PTR unsigned char 
  1690 ;;		 -> _tx_buffer(256), 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  2    2[COMMON] PTR unsigned char 
  1693 ;; Registers used:
  1694 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, pclath
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1700 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1701 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1703 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1704 ;;Total ram usage:        6 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    3
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		_usart_transmite_set_message
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           
  1715                           ;psect for function _strcpy
  1716  030F                     _strcpy:	
  1717                           
  1718                           ;incstack = 0
  1719                           ; Regs used in _strcpy: [wreg-fsr1h+pclath]
  1720  030F  0873               	movf	strcpy@to+1,w
  1721  0310  00F7               	movwf	strcpy@cp+1
  1722  0311  0872               	movf	strcpy@to,w
  1723  0312  00F6               	movwf	strcpy@cp
  1724  0313                     l987:	
  1725  0313  0876               	movf	strcpy@cp,w
  1726  0314  0086               	movwf	6
  1727  0315  0877               	movf	strcpy@cp+1,w
  1728  0316  0087               	movwf	7
  1729  0317  0874               	movf	strcpy@from,w
  1730  0318  0084               	movwf	4
  1731  0319  0875               	movf	strcpy@from+1,w
  1732  031A  0085               	movwf	5
  1733  031B  0800               	movf	0,w	;code access
  1734  031C  3FC0               	movwi [0]fsr1
  1735  031D  0889               	movf	9,f
  1736  031E  1903               	btfsc	3,2
  1737  031F  0008               	return
  1738  0320  3001               	movlw	1
  1739  0321  07F6               	addwf	strcpy@cp,f
  1740  0322  3000               	movlw	0
  1741  0323  3DF7               	addwfc	strcpy@cp+1,f
  1742  0324  3001               	movlw	1
  1743  0325  07F4               	addwf	strcpy@from,f
  1744  0326  3000               	movlw	0
  1745  0327  3DF5               	addwfc	strcpy@from+1,f
  1746  0328  2B13               	goto	l987
  1747  0329                     __end_of_strcpy:	
  1748                           ;	Return value of _strcpy is never used
  1749                           
  1750                           
  1751                           	psect	text6
  1752  003F                     __ptext6:	
  1753 ;; *************** function _usart_start *****************
  1754 ;; Defined at:
  1755 ;;		line 27 in file "usart.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  usart_sync_m    1    wreg     enum E8
  1758 ;;  baud_rate       4    6[BANK0 ] unsigned long 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  usart_sync_m    1   15[BANK0 ] enum E8
  1761 ;;  fosc            4   16[BANK0 ] unsigned long 
  1762 ;;  baud_switch     1   14[BANK0 ] unsigned char 
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  1    wreg      void 
  1765 ;; Registers used:
  1766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1772 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1773 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1774 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1775 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1776 ;;Total ram usage:       14 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; Hardware stack levels required when called:    4
  1779 ;; This function calls:
  1780 ;;		___lldiv
  1781 ;; This function is called by:
  1782 ;;		_main
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           
  1787                           ;psect for function _usart_start
  1788  003F                     _usart_start:	
  1789                           
  1790                           ;incstack = 0
  1791                           ; Regs used in _usart_start: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1792                           ;usart_start@usart_sync_mode stored from wreg
  1793  003F  0020               	movlb	0	; select bank0
  1794  0040  00AF               	movwf	usart_start@usart_sync_mode
  1795                           
  1796                           ;usart.c: 29: TX1STAbits.TXEN = 1;
  1797  0041  0023               	movlb	3	; select bank3
  1798  0042  169E               	bsf	30,5	;volatile
  1799                           
  1800                           ;usart.c: 31: RCSTAbits.SPEN = 1;
  1801  0043  179D               	bsf	29,7	;volatile
  1802                           
  1803                           ;usart.c: 33: TX1STAbits.SYNC = usart_sync_mode;
  1804  0044  0020               	movlb	0	; select bank0
  1805  0045  0C2F               	rrf	usart_start@usart_sync_mode,w
  1806  0046  0023               	movlb	3	; select bank3
  1807  0047  1C03               	skipc
  1808  0048  121E               	bcf	30,4	;volatile
  1809  0049  1803               	skipnc
  1810  004A  161E               	bsf	30,4	;volatile
  1811                           
  1812                           ;usart.c: 38: RCSTAbits.CREN = 1;
  1813  004B  161D               	bsf	29,4	;volatile
  1814                           
  1815                           ;usart.c: 40: TRISCbits.TRISC7 = 1;
  1816  004C  0021               	movlb	1	; select bank1
  1817  004D  178E               	bsf	14,7	;volatile
  1818                           
  1819                           ;usart.c: 43: TXSTAbits.TX9 = USART_9BIT_MODE_NOT_IMPLEMENTED;
  1820  004E  0023               	movlb	3	; select bank3
  1821  004F  131E               	bcf	30,6	;volatile
  1822                           
  1823                           ;usart.c: 44: RCSTAbits.RX9 = USART_9BIT_MODE_NOT_IMPLEMENTED;
  1824  0050  131D               	bcf	29,6	;volatile
  1825                           
  1826                           ;usart.c: 55: if( usart_sync_mode == USART_SYNC_MODE_ASYNCHRONOUS ) {
  1827  0051  0020               	movlb	0	; select bank0
  1828  0052  082F               	movf	usart_start@usart_sync_mode,w
  1829  0053  1D03               	btfss	3,2
  1830  0054  28B7               	goto	l1317
  1831                           
  1832                           ;usart.c: 56: BAUDCONbits.SCKP = 0;
  1833  0055  0023               	movlb	3	; select bank3
  1834  0056  121F               	bcf	31,4	;volatile
  1835                           
  1836                           ;usart.c: 57: }
  1837                           ;usart.c: 63: uint32_t fosc;
  1838                           ;usart.c: 64: switch( OSCCONbits.IRCF ) {
  1839  0057  28B7               	goto	l1317
  1840  0058                     l1283:	
  1841                           ;usart.c: 65: case 0b1111: fosc = 16000000ul; break;
  1842                           
  1843  0058  3000               	movlw	0
  1844  0059  0020               	movlb	0	; select bank0
  1845  005A  00B3               	movwf	usart_start@fosc+3
  1846  005B  30F4               	movlw	244
  1847  005C  00B2               	movwf	usart_start@fosc+2
  1848  005D  3024               	movlw	36
  1849  005E  28B3               	goto	L17
  1850  005F                     l1285:	
  1851                           ;usart.c: 66: case 0b1110: fosc = 8000000ul; break;
  1852                           
  1853  005F  3000               	movlw	0
  1854  0060  00B3               	movwf	usart_start@fosc+3
  1855  0061  307A               	movlw	122
  1856  0062  00B2               	movwf	usart_start@fosc+2
  1857  0063  3012               	movlw	18
  1858  0064  28B3               	goto	L17
  1859  0065                     l1287:	
  1860                           ;usart.c: 67: case 0b1101: fosc = 4000000ul; break;
  1861                           
  1862  0065  3000               	movlw	0
  1863  0066  00B3               	movwf	usart_start@fosc+3
  1864  0067  303D               	movlw	61
  1865  0068  00B2               	movwf	usart_start@fosc+2
  1866  0069  3009               	movlw	9
  1867  006A  28B3               	goto	L17
  1868  006B                     l1289:	
  1869                           ;usart.c: 68: case 0b1100: fosc = 2000000ul; break;
  1870                           
  1871  006B  3000               	movlw	0
  1872  006C  00B3               	movwf	usart_start@fosc+3
  1873  006D  301E               	movlw	30
  1874  006E  00B2               	movwf	usart_start@fosc+2
  1875  006F  3084               	movlw	132
  1876  0070  00B1               	movwf	usart_start@fosc+1
  1877  0071  3080               	movlw	128
  1878  0072  28B5               	goto	L16
  1879  0073                     l1291:	
  1880                           ;usart.c: 69: case 0b1011: fosc = 1000000ul; break;
  1881                           
  1882  0073  3000               	movlw	0
  1883  0074  00B3               	movwf	usart_start@fosc+3
  1884  0075  300F               	movlw	15
  1885  0076  00B2               	movwf	usart_start@fosc+2
  1886  0077  3042               	movlw	66
  1887  0078  00B1               	movwf	usart_start@fosc+1
  1888  0079  3040               	movlw	64
  1889  007A  28B5               	goto	L16
  1890  007B                     l1293:	
  1891                           ;usart.c: 70: case 0b1010: fosc = 500000ul; break;
  1892                           
  1893  007B  287E               	goto	l1299
  1894  007C                     l1295:	
  1895                           ;usart.c: 71: case 0b1001: fosc = 250000ul; break;
  1896                           
  1897  007C  2886               	goto	l1301
  1898  007D                     l1297:	
  1899                           ;usart.c: 72: case 0b1000: fosc = 125000ul; break;
  1900                           
  1901  007D  288E               	goto	l1303
  1902  007E                     l1299:	
  1903                           ;usart.c: 73: case 0b0111: fosc = 500000ul; break;
  1904                           
  1905  007E  3000               	movlw	0
  1906  007F  00B3               	movwf	usart_start@fosc+3
  1907  0080  3007               	movlw	7
  1908  0081  00B2               	movwf	usart_start@fosc+2
  1909  0082  30A1               	movlw	161
  1910  0083  00B1               	movwf	usart_start@fosc+1
  1911  0084  3020               	movlw	32
  1912  0085  28B5               	goto	L16
  1913  0086                     l1301:	
  1914                           ;usart.c: 74: case 0b0110: fosc = 250000ul; break;
  1915                           
  1916  0086  3000               	movlw	0
  1917  0087  00B3               	movwf	usart_start@fosc+3
  1918  0088  3003               	movlw	3
  1919  0089  00B2               	movwf	usart_start@fosc+2
  1920  008A  30D0               	movlw	208
  1921  008B  00B1               	movwf	usart_start@fosc+1
  1922  008C  3090               	movlw	144
  1923  008D  28B5               	goto	L16
  1924  008E                     l1303:	
  1925                           ;usart.c: 75: case 0b0101: fosc = 125000ul; break;
  1926                           
  1927  008E  3000               	movlw	0
  1928  008F  00B3               	movwf	usart_start@fosc+3
  1929  0090  3001               	movlw	1
  1930  0091  00B2               	movwf	usart_start@fosc+2
  1931  0092  30E8               	movlw	232
  1932  0093  00B1               	movwf	usart_start@fosc+1
  1933  0094  3048               	movlw	72
  1934  0095  28B5               	goto	L16
  1935  0096                     l1305:	
  1936                           ;usart.c: 76: case 0b0100: fosc = 62500ul; break;
  1937                           
  1938  0096  3000               	movlw	0
  1939  0097  00B3               	movwf	usart_start@fosc+3
  1940  0098  3000               	movlw	0
  1941  0099  00B2               	movwf	usart_start@fosc+2
  1942  009A  30F4               	movlw	244
  1943  009B  00B1               	movwf	usart_start@fosc+1
  1944  009C  3024               	movlw	36
  1945  009D  28B5               	goto	L16
  1946  009E                     l1307:	
  1947                           ;usart.c: 77: case 0b0011: fosc = 31250ul; break;
  1948                           
  1949  009E                     l1309:	
  1950                           ;usart.c: 78: case 0b0010: fosc = 31250ul; break;
  1951                           
  1952  009E  3000               	movlw	0
  1953  009F  00B3               	movwf	usart_start@fosc+3
  1954  00A0  3000               	movlw	0
  1955  00A1  00B2               	movwf	usart_start@fosc+2
  1956  00A2  307A               	movlw	122
  1957  00A3  00B1               	movwf	usart_start@fosc+1
  1958  00A4  3012               	movlw	18
  1959  00A5  28B5               	goto	L16
  1960  00A6                     l1311:	
  1961                           ;usart.c: 79: case 0b0001: fosc = 31000ul; break;
  1962                           
  1963  00A6                     l1313:	
  1964                           ;usart.c: 80: case 0b0000: fosc = 31000ul; break;
  1965                           
  1966  00A6  3000               	movlw	0
  1967  00A7  00B3               	movwf	usart_start@fosc+3
  1968  00A8  3000               	movlw	0
  1969  00A9  00B2               	movwf	usart_start@fosc+2
  1970  00AA  3079               	movlw	121
  1971  00AB  00B1               	movwf	usart_start@fosc+1
  1972  00AC  3018               	movlw	24
  1973  00AD  28B5               	goto	L16
  1974  00AE                     l1315:	
  1975                           ;usart.c: 81: default:
  1976                           
  1977                           
  1978                           ;usart.c: 82: fosc = 0ul;
  1979  00AE  3000               	movlw	0
  1980  00AF  00B3               	movwf	usart_start@fosc+3
  1981  00B0  3000               	movlw	0
  1982  00B1  00B2               	movwf	usart_start@fosc+2
  1983  00B2  3000               	movlw	0
  1984  00B3                     L17:	
  1985  00B3  00B1               	movwf	usart_start@fosc+1
  1986  00B4  3000               	movlw	0
  1987  00B5                     L16:	
  1988  00B5  00B0               	movwf	usart_start@fosc
  1989                           
  1990                           ;usart.c: 83: }
  1991  00B6  28C7               	goto	l153
  1992  00B7                     l1317:	
  1993  00B7  0021               	movlb	1	; select bank1
  1994  00B8  0C19               	rrf	25,w	;volatile
  1995  00B9  0020               	movlb	0	; select bank0
  1996  00BA  00AA               	movwf	??_usart_start
  1997  00BB  0CAA               	rrf	??_usart_start,f
  1998  00BC  0C2A               	rrf	??_usart_start,w
  1999  00BD  390F               	andlw	15
  2000                           
  2001                           ; Switch size 1, requested type "space"
  2002                           ; Number of cases is 16, Range of values is 0 to 15
  2003                           ; switch strategies available:
  2004                           ; Name         Instructions Cycles
  2005                           ; direct_byte           38     6 (fixed)
  2006                           ; simple_byte           49    25 (average)
  2007                           ; jumptable            260     6 (fixed)
  2008                           ;	Chosen strategy is direct_byte
  2009  00BE  0084               	movwf	4
  2010  00BF  3010               	movlw	16
  2011  00C0  0204               	subwf	4,w
  2012  00C1  1803               	skipnc
  2013  00C2  28AE               	goto	l1315
  2014  00C3  3182               	movlp	high S1393
  2015  00C4  3504               	lslf	4,w
  2016  00C5  3EB4               	addlw	low S1393
  2017  00C6  0082               	movwf	2
  2018  00C7                     l153:	
  2019                           
  2020                           ;usart.c: 85: if( OSCCONbits.SPLLEN && ( fosc == 16000000ul || fosc == 8000000ul ) ) {
  2021  00C7  0021               	movlb	1	; select bank1
  2022  00C8  1F99               	btfss	25,7	;volatile
  2023  00C9  28E5               	goto	l170
  2024  00CA  3024               	movlw	36
  2025  00CB  0020               	movlb	0	; select bank0
  2026  00CC  0631               	xorwf	usart_start@fosc+1,w
  2027  00CD  30F4               	movlw	244
  2028  00CE  1903               	skipnz
  2029  00CF  0632               	xorwf	usart_start@fosc+2,w
  2030  00D0  0430               	iorwf	usart_start@fosc,w
  2031  00D1  0433               	iorwf	usart_start@fosc+3,w
  2032  00D2  1903               	btfsc	3,2
  2033  00D3  28DD               	goto	l1323
  2034  00D4  3012               	movlw	18
  2035  00D5  0631               	xorwf	usart_start@fosc+1,w
  2036  00D6  307A               	movlw	122
  2037  00D7  1903               	skipnz
  2038  00D8  0632               	xorwf	usart_start@fosc+2,w
  2039  00D9  0430               	iorwf	usart_start@fosc,w
  2040  00DA  0433               	iorwf	usart_start@fosc+3,w
  2041  00DB  1D03               	btfss	3,2
  2042  00DC  28E5               	goto	l170
  2043  00DD                     l1323:	
  2044                           
  2045                           ;usart.c: 86: fosc = 32000000ul;
  2046  00DD  3001               	movlw	1
  2047  00DE  00B3               	movwf	usart_start@fosc+3
  2048  00DF  30E8               	movlw	232
  2049  00E0  00B2               	movwf	usart_start@fosc+2
  2050  00E1  3048               	movlw	72
  2051  00E2  00B1               	movwf	usart_start@fosc+1
  2052  00E3  3000               	movlw	0
  2053  00E4  00B0               	movwf	usart_start@fosc
  2054  00E5                     l170:	
  2055                           
  2056                           ;usart.c: 87: }
  2057                           ;usart.c: 90: uint8_t baud_switch = SYNC << 2 | BRG16 << 1 | BRGH << 0;
  2058  00E5  3000               	movlw	0
  2059  00E6  0023               	movlb	3	; select bank3
  2060  00E7  1A1E               	btfsc	30,4	;volatile
  2061  00E8  3004               	movlw	4
  2062  00E9  199F               	btfsc	31,3	;volatile
  2063  00EA  3802               	iorlw	2
  2064  00EB  191E               	btfsc	30,2	;volatile
  2065  00EC  3801               	iorlw	1
  2066  00ED  0020               	movlb	0	; select bank0
  2067  00EE  00AA               	movwf	??_usart_start
  2068  00EF  082A               	movf	??_usart_start,w
  2069  00F0  00AE               	movwf	usart_start@baud_switch
  2070                           
  2071                           ;usart.c: 92: switch( baud_switch ) {
  2072  00F1  2966               	goto	l1333
  2073  00F2                     l1325:	
  2074                           ;usart.c: 93: case 0b000: SPBRG = ( fosc / ( 64ul * baud_rate ) ) - 1ul; break;
  2075                           
  2076  00F2  0826               	movf	usart_start@baud_rate,w
  2077  00F3  00AA               	movwf	??_usart_start
  2078  00F4  0827               	movf	usart_start@baud_rate+1,w
  2079  00F5  00AB               	movwf	??_usart_start+1
  2080  00F6  0828               	movf	usart_start@baud_rate+2,w
  2081  00F7  00AC               	movwf	??_usart_start+2
  2082  00F8  0829               	movf	usart_start@baud_rate+3,w
  2083  00F9  00AD               	movwf	??_usart_start+3
  2084  00FA  3006               	movlw	6
  2085  00FB                     u875:	
  2086  00FB  35AA               	lslf	??_usart_start,f
  2087  00FC  0DAB               	rlf	??_usart_start+1,f
  2088  00FD  0DAC               	rlf	??_usart_start+2,f
  2089  00FE  0DAD               	rlf	??_usart_start+3,f
  2090  00FF  0B89               	decfsz	9,f
  2091  0100  28FB               	goto	u875
  2092  0101  082D               	movf	??_usart_start+3,w
  2093  0102  00F5               	movwf	___lldiv@divisor+3
  2094  0103  082C               	movf	??_usart_start+2,w
  2095  0104  00F4               	movwf	___lldiv@divisor+2
  2096  0105  082B               	movf	??_usart_start+1,w
  2097  0106  00F3               	movwf	___lldiv@divisor+1
  2098  0107  082A               	movf	??_usart_start,w
  2099  0108  00F2               	movwf	___lldiv@divisor
  2100  0109  0833               	movf	usart_start@fosc+3,w
  2101  010A  00F9               	movwf	___lldiv@dividend+3
  2102  010B  0832               	movf	usart_start@fosc+2,w
  2103  010C  00F8               	movwf	___lldiv@dividend+2
  2104  010D  0831               	movf	usart_start@fosc+1,w
  2105  010E  00F7               	movwf	___lldiv@dividend+1
  2106  010F  0830               	movf	usart_start@fosc,w
  2107  0110  00F6               	movwf	___lldiv@dividend
  2108  0111  3181  21D2         	fcall	___lldiv
  2109  0113  0872               	movf	?___lldiv,w
  2110  0114  3EFF               	addlw	255
  2111  0115  0023               	movlb	3	; select bank3
  2112  0116  009B               	movwf	27	;volatile
  2113  0117  0008               	return
  2114  0118                     l1327:	
  2115                           ;usart.c: 94: case 0b001:
  2116                           
  2117                           
  2118                           ;usart.c: 95: case 0b010: SPBRG = ( fosc / ( 16ul * baud_rate ) ) - 1ul; break;
  2119  0118  0020               	movlb	0	; select bank0
  2120  0119  0826               	movf	usart_start@baud_rate,w
  2121  011A  00AA               	movwf	??_usart_start
  2122  011B  0827               	movf	usart_start@baud_rate+1,w
  2123  011C  00AB               	movwf	??_usart_start+1
  2124  011D  0828               	movf	usart_start@baud_rate+2,w
  2125  011E  00AC               	movwf	??_usart_start+2
  2126  011F  0829               	movf	usart_start@baud_rate+3,w
  2127  0120  00AD               	movwf	??_usart_start+3
  2128  0121  3004               	movlw	4
  2129  0122                     u885:	
  2130  0122  35AA               	lslf	??_usart_start,f
  2131  0123  0DAB               	rlf	??_usart_start+1,f
  2132  0124  0DAC               	rlf	??_usart_start+2,f
  2133  0125  0DAD               	rlf	??_usart_start+3,f
  2134  0126  0B89               	decfsz	9,f
  2135  0127  2922               	goto	u885
  2136  0128  082D               	movf	??_usart_start+3,w
  2137  0129  00F5               	movwf	___lldiv@divisor+3
  2138  012A  082C               	movf	??_usart_start+2,w
  2139  012B  00F4               	movwf	___lldiv@divisor+2
  2140  012C  082B               	movf	??_usart_start+1,w
  2141  012D  00F3               	movwf	___lldiv@divisor+1
  2142  012E  082A               	movf	??_usart_start,w
  2143  012F  00F2               	movwf	___lldiv@divisor
  2144  0130  0833               	movf	usart_start@fosc+3,w
  2145  0131  00F9               	movwf	___lldiv@dividend+3
  2146  0132  0832               	movf	usart_start@fosc+2,w
  2147  0133  00F8               	movwf	___lldiv@dividend+2
  2148  0134  0831               	movf	usart_start@fosc+1,w
  2149  0135  00F7               	movwf	___lldiv@dividend+1
  2150  0136  0830               	movf	usart_start@fosc,w
  2151  0137  00F6               	movwf	___lldiv@dividend
  2152  0138  3181  21D2         	fcall	___lldiv
  2153  013A  0872               	movf	?___lldiv,w
  2154  013B  3EFF               	addlw	255
  2155  013C  0023               	movlb	3	; select bank3
  2156  013D  009B               	movwf	27	;volatile
  2157  013E  0008               	return
  2158  013F                     l1329:	
  2159                           ;usart.c: 96: default:
  2160                           
  2161                           
  2162                           ;usart.c: 97: SPBRG = ( fosc / ( 4ul * baud_rate ) ) - 1ul; break;
  2163  013F  0020               	movlb	0	; select bank0
  2164  0140  0826               	movf	usart_start@baud_rate,w
  2165  0141  00AA               	movwf	??_usart_start
  2166  0142  0827               	movf	usart_start@baud_rate+1,w
  2167  0143  00AB               	movwf	??_usart_start+1
  2168  0144  0828               	movf	usart_start@baud_rate+2,w
  2169  0145  00AC               	movwf	??_usart_start+2
  2170  0146  0829               	movf	usart_start@baud_rate+3,w
  2171  0147  00AD               	movwf	??_usart_start+3
  2172  0148  3002               	movlw	2
  2173  0149                     u895:	
  2174  0149  35AA               	lslf	??_usart_start,f
  2175  014A  0DAB               	rlf	??_usart_start+1,f
  2176  014B  0DAC               	rlf	??_usart_start+2,f
  2177  014C  0DAD               	rlf	??_usart_start+3,f
  2178  014D  0B89               	decfsz	9,f
  2179  014E  2949               	goto	u895
  2180  014F  082D               	movf	??_usart_start+3,w
  2181  0150  00F5               	movwf	___lldiv@divisor+3
  2182  0151  082C               	movf	??_usart_start+2,w
  2183  0152  00F4               	movwf	___lldiv@divisor+2
  2184  0153  082B               	movf	??_usart_start+1,w
  2185  0154  00F3               	movwf	___lldiv@divisor+1
  2186  0155  082A               	movf	??_usart_start,w
  2187  0156  00F2               	movwf	___lldiv@divisor
  2188  0157  0833               	movf	usart_start@fosc+3,w
  2189  0158  00F9               	movwf	___lldiv@dividend+3
  2190  0159  0832               	movf	usart_start@fosc+2,w
  2191  015A  00F8               	movwf	___lldiv@dividend+2
  2192  015B  0831               	movf	usart_start@fosc+1,w
  2193  015C  00F7               	movwf	___lldiv@dividend+1
  2194  015D  0830               	movf	usart_start@fosc,w
  2195  015E  00F6               	movwf	___lldiv@dividend
  2196  015F  3181  21D2         	fcall	___lldiv
  2197  0161  0872               	movf	?___lldiv,w
  2198  0162  3EFF               	addlw	255
  2199  0163  0023               	movlb	3	; select bank3
  2200  0164  009B               	movwf	27	;volatile
  2201                           
  2202                           ;usart.c: 98: }
  2203  0165  0008               	return
  2204  0166                     l1333:	
  2205  0166  0020               	movlb	0	; select bank0
  2206  0167  082E               	movf	usart_start@baud_switch,w
  2207                           
  2208                           ; Switch size 1, requested type "space"
  2209                           ; Number of cases is 3, Range of values is 0 to 2
  2210                           ; switch strategies available:
  2211                           ; Name         Instructions Cycles
  2212                           ; simple_byte           10     6 (average)
  2213                           ; direct_byte           12     6 (fixed)
  2214                           ; jumptable            260     6 (fixed)
  2215                           ;	Chosen strategy is simple_byte
  2216  0168  3A00               	xorlw	0	; case 0
  2217  0169  1903               	skipnz
  2218  016A  28F2               	goto	l1325
  2219  016B  3A01               	xorlw	1	; case 1
  2220  016C  1903               	skipnz
  2221  016D  2918               	goto	l1327
  2222  016E  3A03               	xorlw	3	; case 2
  2223  016F  1903               	skipnz
  2224  0170  2918               	goto	l1327
  2225  0171  293F               	goto	l1329
  2226  0172  0008               	return
  2227  0173                     __end_of_usart_start:	
  2228                           
  2229                           	psect	swtext1
  2230  02B4                     __pswtext1:	
  2231  02B4                     S1393:	
  2232  02B4  3180  28A6         	ljmp	l1313
  2233  02B6  3180  28A6         	ljmp	l1311
  2234  02B8  3180  289E         	ljmp	l1309
  2235  02BA  3180  289E         	ljmp	l1307
  2236  02BC  3180  2896         	ljmp	l1305
  2237  02BE  3180  288E         	ljmp	l1303
  2238  02C0  3180  2886         	ljmp	l1301
  2239  02C2  3180  287E         	ljmp	l1299
  2240  02C4  3180  287D         	ljmp	l1297
  2241  02C6  3180  287C         	ljmp	l1295
  2242  02C8  3180  287B         	ljmp	l1293
  2243  02CA  3180  2873         	ljmp	l1291
  2244  02CC  3180  286B         	ljmp	l1289
  2245  02CE  3180  2865         	ljmp	l1287
  2246  02D0  3180  285F         	ljmp	l1285
  2247  02D2  3180  2858         	ljmp	l1283
  2248                           
  2249                           	psect	text7
  2250  01D2                     __ptext7:	
  2251 ;; *************** function ___lldiv *****************
  2252 ;; Defined at:
  2253 ;;		line 6 in file "/home/bruno/Programs/microchip/xc8/v1.37/sources/common/lldiv.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  divisor         4    2[COMMON] unsigned long 
  2256 ;;  dividend        4    6[COMMON] unsigned long 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  quotient        4    1[BANK0 ] unsigned long 
  2259 ;;  counter         1    5[BANK0 ] unsigned char 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  4    2[COMMON] unsigned long 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2269 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2270 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2271 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2272 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2273 ;;Total ram usage:       14 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    3
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_usart_start
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           
  2284                           ;psect for function ___lldiv
  2285  01D2                     ___lldiv:	
  2286                           
  2287                           ;incstack = 0
  2288                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2289  01D2  3000               	movlw	0
  2290  01D3  0020               	movlb	0	; select bank0
  2291  01D4  00A4               	movwf	___lldiv@quotient+3
  2292  01D5  3000               	movlw	0
  2293  01D6  00A3               	movwf	___lldiv@quotient+2
  2294  01D7  3000               	movlw	0
  2295  01D8  00A2               	movwf	___lldiv@quotient+1
  2296  01D9  3000               	movlw	0
  2297  01DA  00A1               	movwf	___lldiv@quotient
  2298  01DB  0875               	movf	___lldiv@divisor+3,w
  2299  01DC  0474               	iorwf	___lldiv@divisor+2,w
  2300  01DD  0473               	iorwf	___lldiv@divisor+1,w
  2301  01DE  0472               	iorwf	___lldiv@divisor,w
  2302  01DF  1903               	skipnz
  2303  01E0  2A1C               	goto	l1263
  2304  01E1  01A5               	clrf	___lldiv@counter
  2305  01E2  0AA5               	incf	___lldiv@counter,f
  2306  01E3                     l1249:	
  2307  01E3  1BF5               	btfsc	___lldiv@divisor+3,7
  2308  01E4  29F1               	goto	l1251
  2309  01E5  3001               	movlw	1
  2310  01E6                     u775:	
  2311  01E6  35F2               	lslf	___lldiv@divisor,f
  2312  01E7  0DF3               	rlf	___lldiv@divisor+1,f
  2313  01E8  0DF4               	rlf	___lldiv@divisor+2,f
  2314  01E9  0DF5               	rlf	___lldiv@divisor+3,f
  2315  01EA  0B89               	decfsz	9,f
  2316  01EB  29E6               	goto	u775
  2317  01EC  3001               	movlw	1
  2318  01ED  00A0               	movwf	??___lldiv
  2319  01EE  0820               	movf	??___lldiv,w
  2320  01EF  07A5               	addwf	___lldiv@counter,f
  2321  01F0  29E3               	goto	l1249
  2322  01F1                     l1251:	
  2323  01F1  3001               	movlw	1
  2324  01F2                     u795:	
  2325  01F2  35A1               	lslf	___lldiv@quotient,f
  2326  01F3  0DA2               	rlf	___lldiv@quotient+1,f
  2327  01F4  0DA3               	rlf	___lldiv@quotient+2,f
  2328  01F5  0DA4               	rlf	___lldiv@quotient+3,f
  2329  01F6  0B89               	decfsz	9,f
  2330  01F7  29F2               	goto	u795
  2331  01F8  0875               	movf	___lldiv@divisor+3,w
  2332  01F9  0279               	subwf	___lldiv@dividend+3,w
  2333  01FA  1D03               	skipz
  2334  01FB  2A06               	goto	u805
  2335  01FC  0874               	movf	___lldiv@divisor+2,w
  2336  01FD  0278               	subwf	___lldiv@dividend+2,w
  2337  01FE  1D03               	skipz
  2338  01FF  2A06               	goto	u805
  2339  0200  0873               	movf	___lldiv@divisor+1,w
  2340  0201  0277               	subwf	___lldiv@dividend+1,w
  2341  0202  1D03               	skipz
  2342  0203  2A06               	goto	u805
  2343  0204  0872               	movf	___lldiv@divisor,w
  2344  0205  0276               	subwf	___lldiv@dividend,w
  2345  0206                     u805:	
  2346  0206  1C03               	skipc
  2347  0207  2A11               	goto	l1259
  2348  0208  0872               	movf	___lldiv@divisor,w
  2349  0209  02F6               	subwf	___lldiv@dividend,f
  2350  020A  0873               	movf	___lldiv@divisor+1,w
  2351  020B  3BF7               	subwfb	___lldiv@dividend+1,f
  2352  020C  0874               	movf	___lldiv@divisor+2,w
  2353  020D  3BF8               	subwfb	___lldiv@dividend+2,f
  2354  020E  0875               	movf	___lldiv@divisor+3,w
  2355  020F  3BF9               	subwfb	___lldiv@dividend+3,f
  2356  0210  1421               	bsf	___lldiv@quotient,0
  2357  0211                     l1259:	
  2358  0211  3001               	movlw	1
  2359  0212                     u815:	
  2360  0212  36F5               	lsrf	___lldiv@divisor+3,f
  2361  0213  0CF4               	rrf	___lldiv@divisor+2,f
  2362  0214  0CF3               	rrf	___lldiv@divisor+1,f
  2363  0215  0CF2               	rrf	___lldiv@divisor,f
  2364  0216  0B89               	decfsz	9,f
  2365  0217  2A12               	goto	u815
  2366  0218  3001               	movlw	1
  2367  0219  02A5               	subwf	___lldiv@counter,f
  2368  021A  1D03               	btfss	3,2
  2369  021B  29F1               	goto	l1251
  2370  021C                     l1263:	
  2371  021C  0824               	movf	___lldiv@quotient+3,w
  2372  021D  00F5               	movwf	?___lldiv+3
  2373  021E  0823               	movf	___lldiv@quotient+2,w
  2374  021F  00F4               	movwf	?___lldiv+2
  2375  0220  0822               	movf	___lldiv@quotient+1,w
  2376  0221  00F3               	movwf	?___lldiv+1
  2377  0222  0821               	movf	___lldiv@quotient,w
  2378  0223  00F2               	movwf	?___lldiv
  2379  0224  0008               	return
  2380  0225                     __end_of___lldiv:	
  2381                           
  2382                           	psect	text8
  2383  0348                     __ptext8:	
  2384 ;; *************** function _usart_receive_interrupt_read_message *****************
  2385 ;; Defined at:
  2386 ;;		line 208 in file "usart.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  usart_callba    2    2[COMMON] PTR FTN()void 
  2389 ;;		 -> isr_usart_rx_teste(1), 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;		None
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2401 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2404 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2405 ;;Total ram usage:        2 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    3
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_main
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           
  2416                           ;psect for function _usart_receive_interrupt_read_message
  2417  0348                     _usart_receive_interrupt_read_message:	
  2418                           
  2419                           ;usart.c: 210: _rx_iterator = _rx_buffer;
  2420                           
  2421                           ;incstack = 0
  2422                           ; Regs used in _usart_receive_interrupt_read_message: [wreg+status,2]
  2423  0348  30F0               	movlw	240
  2424  0349  0020               	movlb	0	; select bank0
  2425  034A  00B9               	movwf	__rx_iterator
  2426  034B  3022               	movlw	34
  2427  034C  00BA               	movwf	__rx_iterator+1
  2428                           
  2429                           ;usart.c: 211: _rx_message_size = 0;
  2430  034D  01BE               	clrf	__rx_message_size
  2431                           
  2432                           ;usart.c: 212: _rx_isr_done_callback = usart_callback_receive_done;
  2433  034E  0873               	movf	usart_receive_interrupt_read_message@usart_callback_receive_done+1,w
  2434  034F  00B8               	movwf	__rx_isr_done_callback+1
  2435  0350  0872               	movf	usart_receive_interrupt_read_message@usart_callback_receive_done,w
  2436  0351  00B7               	movwf	__rx_isr_done_callback
  2437                           
  2438                           ;usart.c: 214: INTCONbits.PEIE = 1;
  2439  0352  170B               	bsf	11,6	;volatile
  2440                           
  2441                           ;usart.c: 217: PIE1bits.RCIE = 1;
  2442  0353  0021               	movlb	1	; select bank1
  2443  0354  1691               	bsf	17,5	;volatile
  2444  0355  0008               	return
  2445  0356                     __end_of_usart_receive_interrupt_read_message:	
  2446                           
  2447                           	psect	text9
  2448  0384                     __ptext9:	
  2449 ;; *************** function _usart_receive_interrupt_get_message *****************
  2450 ;; Defined at:
  2451 ;;		line 243 in file "usart.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;		None
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;		None
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  2    2[COMMON] PTR unsigned char 
  2458 ;; Registers used:
  2459 ;;		wreg
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2465 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2469 ;;Total ram usage:        2 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; Hardware stack levels required when called:    3
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		_main
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           
  2480                           ;psect for function _usart_receive_interrupt_get_message
  2481  0384                     _usart_receive_interrupt_get_message:	
  2482                           
  2483                           ;usart.c: 244: return _rx_buffer;
  2484                           
  2485                           ;incstack = 0
  2486                           ; Regs used in _usart_receive_interrupt_get_message: [wreg]
  2487  0384  30F0               	movlw	240
  2488  0385  00F2               	movwf	?_usart_receive_interrupt_get_message
  2489  0386  3022               	movlw	34
  2490  0387  00F3               	movwf	?_usart_receive_interrupt_get_message+1
  2491  0388  0008               	return
  2492  0389                     __end_of_usart_receive_interrupt_get_message:	
  2493                           
  2494                           	psect	text10
  2495  02F3                     __ptext10:	
  2496 ;; *************** function _timer0_start *****************
  2497 ;; Defined at:
  2498 ;;		line 10 in file "timer.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;  mode            1    wreg     enum E8
  2501 ;;  prescalar_us    1    2[COMMON] enum E12
  2502 ;;  prescalar_ra    1    3[COMMON] enum E16
  2503 ;;  timer0_callb    2    4[COMMON] PTR FTN()void 
  2504 ;;		 -> isr_timer0_pisca_led(1), 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  mode            1    6[COMMON] enum E8
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, status,2, status,0
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2516 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2517 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2519 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2520 ;;Total ram usage:        5 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:    3
  2523 ;; This function calls:
  2524 ;;		Nothing
  2525 ;; This function is called by:
  2526 ;;		_main
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           
  2531                           ;psect for function _timer0_start
  2532  02F3                     _timer0_start:	
  2533                           
  2534                           ;incstack = 0
  2535                           ; Regs used in _timer0_start: [wreg+status,2+status,0]
  2536                           ;timer0_start@mode stored from wreg
  2537  02F3  00F6               	movwf	timer0_start@mode
  2538                           
  2539                           ;timer.c: 11: OPTION_REGbits.TMR0CS = mode;
  2540  02F4  0C76               	rrf	timer0_start@mode,w
  2541  02F5  0021               	movlb	1	; select bank1
  2542  02F6  1C03               	skipc
  2543  02F7  1295               	bcf	21,5	;volatile
  2544  02F8  1803               	skipnc
  2545  02F9  1695               	bsf	21,5	;volatile
  2546                           
  2547                           ;timer.c: 12: OPTION_REGbits.PSA = prescalar_use ? 0 : 1;
  2548  02FA  0872               	movf	timer0_start@prescalar_use,w
  2549  02FB  1D03               	btfss	3,2
  2550  02FC  2B00               	goto	u590
  2551  02FD  0021               	movlb	1	; select bank1
  2552  02FE  1595               	bsf	21,3	;volatile
  2553  02FF  2B02               	goto	l1069
  2554  0300                     u590:	
  2555  0300  0021               	movlb	1	; select bank1
  2556  0301  1195               	bcf	21,3	;volatile
  2557  0302                     l1069:	
  2558                           
  2559                           ;timer.c: 13: OPTION_REGbits.PS = prescalar_rate;
  2560  0302  0815               	movf	21,w	;volatile
  2561  0303  0673               	xorwf	timer0_start@prescalar_rate,w
  2562  0304  39F8               	andlw	-8
  2563  0305  0673               	xorwf	timer0_start@prescalar_rate,w
  2564  0306  0095               	movwf	21	;volatile
  2565                           
  2566                           ;timer.c: 15: _timer0_callback = timer0_callback;
  2567  0307  0875               	movf	timer0_start@timer0_callback+1,w
  2568  0308  0020               	movlb	0	; select bank0
  2569  0309  00C0               	movwf	__timer0_callback+1
  2570  030A  0874               	movf	timer0_start@timer0_callback,w
  2571  030B  00BF               	movwf	__timer0_callback
  2572                           
  2573                           ;timer.c: 17: INTCONbits.TMR0IF = 0;
  2574  030C  110B               	bcf	11,2	;volatile
  2575                           
  2576                           ;timer.c: 18: INTCONbits.TMR0IE = 1;
  2577  030D  168B               	bsf	11,5	;volatile
  2578  030E  0008               	return
  2579  030F                     __end_of_timer0_start:	
  2580                           
  2581                           	psect	intentry
  2582  0004                     __pintentry:	
  2583 ;; *************** function _isr_general *****************
  2584 ;; Defined at:
  2585 ;;		line 28 in file "main.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      void 
  2592 ;; Registers used:
  2593 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2601 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2602 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2603 ;;Total ram usage:        1 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:    2
  2606 ;; This function calls:
  2607 ;;		_timer0_isr
  2608 ;;		_usart_receive_interrupt_isr
  2609 ;;		_usart_transmite_interrupt_isr
  2610 ;; This function is called by:
  2611 ;;		Interrupt level 1
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615  0004                     _isr_general:	
  2616                           
  2617                           ;incstack = 0
  2618                           ; Regs used in _isr_general: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2619  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2620  0005  3180               	pagesel	$
  2621  0006  0020               	movlb	0	; select bank0
  2622  0007  087F               	movf	127,w
  2623  0008  00F1               	movwf	??_isr_general
  2624                           
  2625                           ;main.c: 30: if( INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1 ) {
  2626  0009  1A8B               	btfsc	11,5	;volatile
  2627  000A  1D0B               	btfss	11,2	;volatile
  2628  000B  280F               	goto	i1l1185
  2629                           
  2630                           ;main.c: 31: timer0_isr();
  2631  000C  3183  236E  3180   	fcall	_timer0_isr
  2632  000F                     i1l1185:	
  2633                           
  2634                           ;main.c: 32: }
  2635                           ;main.c: 33: if( PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1 ) {
  2636  000F  0021               	movlb	1	; select bank1
  2637  0010  1E11               	btfss	17,4	;volatile
  2638  0011  2818               	goto	i1l1191
  2639  0012  0020               	movlb	0	; select bank0
  2640  0013  1E11               	btfss	17,4	;volatile
  2641  0014  2818               	goto	i1l1191
  2642                           
  2643                           ;main.c: 34: usart_transmite_interrupt_isr();
  2644  0015  3182  2291  3180   	fcall	_usart_transmite_interrupt_isr
  2645  0018                     i1l1191:	
  2646                           
  2647                           ;main.c: 35: }
  2648                           ;main.c: 36: if( PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1 ) {
  2649  0018  0021               	movlb	1	; select bank1
  2650  0019  1E91               	btfss	17,5	;volatile
  2651  001A  2820               	goto	i1l52
  2652  001B  0020               	movlb	0	; select bank0
  2653  001C  1E91               	btfss	17,5	;volatile
  2654  001D  2820               	goto	i1l52
  2655                           
  2656                           ;main.c: 37: usart_receive_interrupt_isr();
  2657  001E  3182  2225         	fcall	_usart_receive_interrupt_isr
  2658  0020                     i1l52:	
  2659  0020  0871               	movf	??_isr_general,w
  2660  0021  0020               	movlb	0	; select bank0
  2661  0022  00FF               	movwf	127
  2662  0023  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2663  0024  0009               	retfie
  2664  0025                     __end_of_isr_general:	
  2665                           
  2666                           	psect	text12
  2667  0291                     __ptext12:	
  2668 ;; *************** function _usart_transmite_interrupt_isr *****************
  2669 ;; Defined at:
  2670 ;;		line 125 in file "usart.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;		None
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;		None
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2688 ;;Total ram usage:        0 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    1
  2691 ;; This function calls:
  2692 ;;		Absolute function
  2693 ;;		_isr_usart_tx_acende_led
  2694 ;; This function is called by:
  2695 ;;		_isr_general
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           
  2700                           ;psect for function _usart_transmite_interrupt_isr
  2701  0291                     _usart_transmite_interrupt_isr:	
  2702                           
  2703                           ;usart.c: 127: if( *_tx_iterator ) {
  2704                           
  2705                           ;incstack = 0
  2706                           ; Regs used in _usart_transmite_interrupt_isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  2707  0291  087A               	movf	__tx_iterator,w
  2708  0292  0086               	movwf	6
  2709  0293  087B               	movf	__tx_iterator+1,w
  2710  0294  0087               	movwf	7
  2711  0295  0801               	movf	1,w
  2712  0296  1903               	btfsc	3,2
  2713  0297  2AA4               	goto	i1l188
  2714                           
  2715                           ;usart.c: 128: TXREG = *_tx_iterator;
  2716  0298  087A               	movf	__tx_iterator,w
  2717  0299  0086               	movwf	6
  2718  029A  087B               	movf	__tx_iterator+1,w
  2719  029B  0087               	movwf	7
  2720  029C  0801               	movf	1,w
  2721  029D  0023               	movlb	3	; select bank3
  2722  029E  009A               	movwf	26	;volatile
  2723                           
  2724                           ;usart.c: 129: _tx_iterator++;
  2725  029F  3001               	movlw	1
  2726  02A0  07FA               	addwf	__tx_iterator,f
  2727  02A1  3000               	movlw	0
  2728  02A2  3DFB               	addwfc	__tx_iterator+1,f
  2729                           
  2730                           ;usart.c: 131: } else {
  2731  02A3  0008               	return
  2732  02A4                     i1l188:	
  2733                           
  2734                           ;usart.c: 133: if( PIE1bits.TXIE && _tx_isr_done_callback ) {
  2735  02A4  0021               	movlb	1	; select bank1
  2736  02A5  1E11               	btfss	17,4	;volatile
  2737  02A6  2AB1               	goto	i1l1041
  2738  02A7  0020               	movlb	0	; select bank0
  2739  02A8  083B               	movf	__tx_isr_done_callback,w
  2740  02A9  043C               	iorwf	__tx_isr_done_callback+1,w
  2741  02AA  1903               	btfsc	3,2
  2742  02AB  2AB1               	goto	i1l1041
  2743                           
  2744                           ;usart.c: 135: _tx_isr_done_callback();
  2745  02AC  083C               	movf	__tx_isr_done_callback+1,w
  2746  02AD  008A               	movwf	10
  2747  02AE  083B               	movf	__tx_isr_done_callback,w
  2748  02AF  000A               	callw
  2749  02B0  3182               	pagesel	$
  2750  02B1                     i1l1041:	
  2751                           
  2752                           ;usart.c: 136: }
  2753                           ;usart.c: 138: PIE1bits.TXIE = 0;
  2754  02B1  0021               	movlb	1	; select bank1
  2755  02B2  1211               	bcf	17,4	;volatile
  2756  02B3  0008               	return
  2757  02B4                     __end_of_usart_transmite_interrupt_isr:	
  2758                           
  2759                           	psect	text13
  2760  0362                     __ptext13:	
  2761 ;; *************** function _isr_usart_tx_acende_led *****************
  2762 ;; Defined at:
  2763 ;;		line 45 in file "main.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;		None
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		status,0
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2781 ;;Total ram usage:        0 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_main
  2787 ;;		_usart_transmite_interrupt_isr
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           
  2792                           ;psect for function _isr_usart_tx_acende_led
  2793  0362                     _isr_usart_tx_acende_led:	
  2794                           
  2795                           ;main.c: 46: PORTBbits.RB4 = ~LATBbits.LATB4;
  2796                           
  2797                           ;incstack = 0
  2798                           ; Regs used in _isr_usart_tx_acende_led: [status,0]
  2799  0362  1003               	clrc
  2800  0363  0022               	movlb	2	; select bank2
  2801  0364  1E0D               	btfss	13,4	;volatile
  2802  0365  1403               	setc
  2803  0366  1C03               	btfss	3,0
  2804  0367  2B6B               	goto	u41_20
  2805  0368  0020               	movlb	0	; select bank0
  2806  0369  160D               	bsf	13,4	;volatile
  2807  036A  0008               	return
  2808  036B                     u41_20:	
  2809  036B  0020               	movlb	0	; select bank0
  2810  036C  120D               	bcf	13,4	;volatile
  2811  036D  0008               	return
  2812  036E                     __end_of_isr_usart_tx_acende_led:	
  2813                           
  2814                           	psect	text14
  2815  0225                     __ptext14:	
  2816 ;; *************** function _usart_receive_interrupt_isr *****************
  2817 ;; Defined at:
  2818 ;;		line 220 in file "usart.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;		None
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;		None
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2835 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2836 ;;Total ram usage:        1 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    1
  2839 ;; This function calls:
  2840 ;;		Absolute function
  2841 ;;		_isr_usart_rx_teste
  2842 ;; This function is called by:
  2843 ;;		_isr_general
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           
  2848                           ;psect for function _usart_receive_interrupt_isr
  2849  0225                     _usart_receive_interrupt_isr:	
  2850                           
  2851                           ;usart.c: 222: *_rx_iterator = RCREG;
  2852                           
  2853                           ;incstack = 0
  2854                           ; Regs used in _usart_receive_interrupt_isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  2855  0225  0020               	movlb	0	; select bank0
  2856  0226  0839               	movf	__rx_iterator,w
  2857  0227  0086               	movwf	6
  2858  0228  083A               	movf	__rx_iterator+1,w
  2859  0229  0087               	movwf	7
  2860  022A  0023               	movlb	3	; select bank3
  2861  022B  0819               	movf	25,w	;volatile
  2862  022C  0081               	movwf	1
  2863                           
  2864                           ;usart.c: 224: _rx_message_size++;
  2865  022D  3001               	movlw	1
  2866  022E  00F0               	movwf	??_usart_receive_interrupt_isr
  2867  022F  0870               	movf	??_usart_receive_interrupt_isr,w
  2868  0230  0020               	movlb	0	; select bank0
  2869  0231  07BE               	addwf	__rx_message_size,f
  2870                           
  2871                           ;usart.c: 226: if( *_rx_iterator == '\r' ) {
  2872  0232  0839               	movf	__rx_iterator,w
  2873  0233  0086               	movwf	6
  2874  0234  083A               	movf	__rx_iterator+1,w
  2875  0235  0087               	movwf	7
  2876  0236  300D               	movlw	13
  2877  0237  0601               	xorwf	1,w
  2878  0238  1D03               	btfss	3,2
  2879  0239  2A4F               	goto	i1l1059
  2880                           
  2881                           ;usart.c: 227: *_rx_iterator = '\0';
  2882  023A  0839               	movf	__rx_iterator,w
  2883  023B  0086               	movwf	6
  2884  023C  083A               	movf	__rx_iterator+1,w
  2885  023D  0087               	movwf	7
  2886  023E  0181               	clrf	1
  2887                           
  2888                           ;usart.c: 229: if( PIE1bits.RCIE && _rx_isr_done_callback ) {
  2889  023F  0021               	movlb	1	; select bank1
  2890  0240  1E91               	btfss	17,5	;volatile
  2891  0241  2A4C               	goto	i1l1057
  2892  0242  0020               	movlb	0	; select bank0
  2893  0243  0837               	movf	__rx_isr_done_callback,w
  2894  0244  0438               	iorwf	__rx_isr_done_callback+1,w
  2895  0245  1903               	btfsc	3,2
  2896  0246  2A4C               	goto	i1l1057
  2897                           
  2898                           ;usart.c: 231: _rx_isr_done_callback();
  2899  0247  0838               	movf	__rx_isr_done_callback+1,w
  2900  0248  008A               	movwf	10
  2901  0249  0837               	movf	__rx_isr_done_callback,w
  2902  024A  000A               	callw
  2903  024B  3182               	pagesel	$
  2904  024C                     i1l1057:	
  2905                           
  2906                           ;usart.c: 232: }
  2907                           ;usart.c: 234: PIE1bits.RCIE = 0;
  2908  024C  0021               	movlb	1	; select bank1
  2909  024D  1291               	bcf	17,5	;volatile
  2910                           
  2911                           ;usart.c: 235: } else if( _rx_message_size == 255 ) {
  2912  024E  0008               	return
  2913  024F                     i1l1059:	
  2914  024F  0020               	movlb	0	; select bank0
  2915  0250  0A3E               	incf	__rx_message_size,w
  2916  0251  1D03               	btfss	3,2
  2917  0252  2A56               	goto	i1l1063
  2918                           
  2919                           ;usart.c: 237: PIE1bits.RCIE = 0;
  2920  0253  0021               	movlb	1	; select bank1
  2921  0254  1291               	bcf	17,5	;volatile
  2922                           
  2923                           ;usart.c: 238: } else {
  2924  0255  0008               	return
  2925  0256                     i1l1063:	
  2926                           
  2927                           ;usart.c: 239: _rx_iterator++;
  2928  0256  3001               	movlw	1
  2929  0257  0020               	movlb	0	; select bank0
  2930  0258  07B9               	addwf	__rx_iterator,f
  2931  0259  3000               	movlw	0
  2932  025A  3DBA               	addwfc	__rx_iterator+1,f
  2933  025B  0008               	return
  2934  025C                     __end_of_usart_receive_interrupt_isr:	
  2935                           
  2936                           	psect	text15
  2937  0389                     __ptext15:	
  2938 ;; *************** function _isr_usart_rx_teste *****************
  2939 ;; Defined at:
  2940 ;;		line 50 in file "main.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;		None
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      void 
  2947 ;; Registers used:
  2948 ;;		None
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2958 ;;Total ram usage:        0 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; This function calls:
  2961 ;;		Nothing
  2962 ;; This function is called by:
  2963 ;;		_main
  2964 ;;		_usart_receive_interrupt_isr
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           
  2969                           ;psect for function _isr_usart_rx_teste
  2970  0389                     _isr_usart_rx_teste:	
  2971                           
  2972                           ;main.c: 51: _rx_done = 1;
  2973                           
  2974                           ;incstack = 0
  2975                           ; Regs used in _isr_usart_rx_teste: []
  2976  0389  0020               	movlb	0	; select bank0
  2977  038A  01BD               	clrf	__rx_done
  2978  038B  0ABD               	incf	__rx_done,f
  2979  038C  0008               	return
  2980  038D                     __end_of_isr_usart_rx_teste:	
  2981                           
  2982                           	psect	text16
  2983  036E                     __ptext16:	
  2984 ;; *************** function _timer0_isr *****************
  2985 ;; Defined at:
  2986 ;;		line 21 in file "timer.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;		None
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      void 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, status,0, pclath, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3004 ;;Total ram usage:        0 bytes
  3005 ;; Hardware stack levels used:    1
  3006 ;; Hardware stack levels required when called:    1
  3007 ;; This function calls:
  3008 ;;		Absolute function
  3009 ;;		_isr_timer0_pisca_led
  3010 ;; This function is called by:
  3011 ;;		_isr_general
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           
  3016                           ;psect for function _timer0_isr
  3017  036E                     _timer0_isr:	
  3018                           
  3019                           ;timer.c: 22: if( _timer0_callback ) {
  3020                           
  3021                           ;incstack = 0
  3022                           ; Regs used in _timer0_isr: [wreg+status,2+status,0+pclath+cstack]
  3023  036E  0020               	movlb	0	; select bank0
  3024  036F  083F               	movf	__timer0_callback,w
  3025  0370  0440               	iorwf	__timer0_callback+1,w
  3026  0371  1903               	btfsc	3,2
  3027  0372  2B78               	goto	i1l1029
  3028                           
  3029                           ;timer.c: 23: _timer0_callback();
  3030  0373  0840               	movf	__timer0_callback+1,w
  3031  0374  008A               	movwf	10
  3032  0375  083F               	movf	__timer0_callback,w
  3033  0376  000A               	callw
  3034  0377  3183               	pagesel	$
  3035  0378                     i1l1029:	
  3036                           
  3037                           ;timer.c: 24: }
  3038                           ;timer.c: 25: INTCONbits.TMR0IF = 0;
  3039  0378  110B               	bcf	11,2	;volatile
  3040  0379  0008               	return
  3041  037A                     __end_of_timer0_isr:	
  3042                           
  3043                           	psect	text17
  3044  038D                     __ptext17:	
  3045 ;; *************** function _isr_timer0_pisca_led *****************
  3046 ;; Defined at:
  3047 ;;		line 41 in file "main.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;		None
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;		None
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		None
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3065 ;;Total ram usage:        0 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_main
  3071 ;;		_timer0_isr
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           
  3076                           ;psect for function _isr_timer0_pisca_led
  3077  038D                     _isr_timer0_pisca_led:	
  3078                           
  3079                           ;incstack = 0
  3080                           ; Regs used in _isr_timer0_pisca_led: []
  3081  038D  0008               	return
  3082  038E                     __end_of_isr_timer0_pisca_led:	
  3083  007E                     btemp	set	126	;btemp
  3084  007E                     int$flags	set	126
  3085  007E                     wtemp	set	126
  3086  007E                     wtemp0	set	126
  3087  0080                     wtemp1	set	128
  3088  0082                     wtemp2	set	130
  3089  0084                     wtemp3	set	132
  3090  0086                     wtemp4	set	134
  3091  0088                     wtemp5	set	136
  3092  007F                     wtemp6	set	127
  3093  007E                     ttemp	set	126
  3094  007E                     ttemp0	set	126
  3095  0081                     ttemp1	set	129
  3096  0084                     ttemp2	set	132
  3097  0087                     ttemp3	set	135
  3098  007F                     ttemp4	set	127
  3099  007E                     ltemp	set	126
  3100  007E                     ltemp0	set	126
  3101  0082                     ltemp1	set	130
  3102  0086                     ltemp2	set	134
  3103  0080                     ltemp3	set	128


Data Sizes:
    Strings     21
    Constant    32
    Data        0
    BSS         10
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     23      33
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 256
		 -> _rx_buffer(BIGRAM[256]), STR_3(CODE[9]), STR_2(CODE[12]), STR_1(CODE[2]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 256
		 -> _tx_buffer(BIGRAM[256]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 256
		 -> _tx_buffer(BIGRAM[256]), 

    usart_receive_interrupt_read_message@usart_callback_receive_done	PTR FTN()void  size(2) Largest target is 1
		 -> isr_usart_rx_teste(), 

    _rx_isr_done_callback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), isr_usart_rx_teste(), 

    _rx_iterator	PTR unsigned char  size(2) Largest target is 256
		 -> _rx_buffer(BIGRAM[256]), NULL(NULL[0]), 

    usart_transmite_lock_write_message@message	PTR unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[9]), STR_2(CODE[12]), STR_1(CODE[2]), 

    usart_transmite_interrupt_write_message@usart_callback_transmit_done	PTR FTN()void  size(2) Largest target is 1
		 -> isr_usart_tx_acende_led(), 

    _tx_isr_done_callback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), isr_usart_tx_acende_led(), 

    usart_transmite_interrupt_write_message@message	PTR unsigned char  size(2) Largest target is 256
		 -> _rx_buffer(BIGRAM[256]), 

    _tx_iterator	PTR unsigned char  size(2) Largest target is 256
		 -> _tx_buffer(BIGRAM[256]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 256
		 -> _tx_buffer(BIGRAM[256]), 

    usart_transmite_set_message@message	PTR unsigned char  size(2) Largest target is 256
		 -> _rx_buffer(BIGRAM[256]), STR_3(CODE[9]), STR_2(CODE[12]), STR_1(CODE[2]), 

    timer0_start@timer0_callback	PTR FTN()void  size(2) Largest target is 1
		 -> isr_timer0_pisca_led(), 

    _timer0_callback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), isr_timer0_pisca_led(), 

    sp__usart_receive_interrupt_get_message	PTR unsigned char  size(2) Largest target is 256
		 -> _rx_buffer(BIGRAM[256]), 

    main@message	PTR unsigned char  size(2) Largest target is 256
		 -> _rx_buffer(BIGRAM[256]), 


Critical Paths under _main in COMMON

    _usart_transmite_lock_write_message->_usart_transmite_set_message
    _usart_transmite_interrupt_write_message->_usart_transmite_set_message
    _usart_transmite_set_message->_strcpy
    _usart_start->___lldiv

Critical Paths under _isr_general in COMMON

    _isr_general->_usart_receive_interrupt_isr

Critical Paths under _main in BANK0

    _main->_usart_start
    _usart_start->___lldiv

Critical Paths under _isr_general in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr_general in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_general in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr_general in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr_general in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr_general in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr_general in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr_general in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr_general in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr_general in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr_general in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr_general in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr_general in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2740
                                             20 BANK0      3     3      0
                       _timer0_start
_usart_receive_interrupt_get_message
_usart_receive_interrupt_read_messag
                        _usart_start
_usart_transmite_interrupt_write_mes
 _usart_transmite_lock_write_message
 ---------------------------------------------------------------------------------
 (1) _usart_transmite_lock_write_message                   2     0      2     637
                                              0 BANK0      2     0      2
    _usart_transmite_lock_write_byte
        _usart_transmite_set_message
 ---------------------------------------------------------------------------------
 (2) _usart_transmite_lock_write_byte                      1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _usart_transmite_interrupt_write_message              4     0      4     525
                                              0 BANK0      4     0      4
        _usart_transmite_set_message
 ---------------------------------------------------------------------------------
 (2) _usart_transmite_set_message                          2     0      2     353
                                              8 COMMON     2     0      2
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     203
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _usart_start                                         14    10      4    1178
                                              6 BANK0     14    10      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     703
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _usart_receive_interrupt_read_message                 2     0      2      86
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _usart_receive_interrupt_get_message                  2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _timer0_start                                         5     1      4     280
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr_general                                          1     1      0       0
                                              1 COMMON     1     1      0
                         _timer0_isr
        _usart_receive_interrupt_isr
      _usart_transmite_interrupt_isr
 ---------------------------------------------------------------------------------
 (5) _usart_transmite_interrupt_isr                        0     0      0       0
                   Absolute function *
            _isr_usart_tx_acende_led *
 ---------------------------------------------------------------------------------
 (6) _isr_usart_tx_acende_led                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _usart_receive_interrupt_isr                          1     1      0       0
                                              0 COMMON     1     1      0
                   Absolute function *
                 _isr_usart_rx_teste *
 ---------------------------------------------------------------------------------
 (6) _isr_usart_rx_teste                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _timer0_isr                                           0     0      0       0
                   Absolute function *
               _isr_timer0_pisca_led *
 ---------------------------------------------------------------------------------
 (6) _isr_timer0_pisca_led                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _timer0_start
   _usart_receive_interrupt_get_message
   _usart_receive_interrupt_read_message
   _usart_start
     ___lldiv
   _usart_transmite_interrupt_write_message
     _usart_transmite_set_message
       _strcpy
   _usart_transmite_lock_write_message
     _usart_transmite_lock_write_byte
     _usart_transmite_set_message
       _strcpy

 _isr_general (ROOT)
   _timer0_isr
     Absolute function(Fake) *
     _isr_timer0_pisca_led *
   _usart_receive_interrupt_isr
     Absolute function(Fake) *
     _isr_usart_rx_teste *
   _usart_transmite_interrupt_isr
     Absolute function(Fake) *
     _isr_usart_tx_acende_led *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      21       5       41.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      2D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      2D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Sep 27 13:37:40 2016

                                                                  pc 0002  
                                               ??_isr_usart_rx_teste 0070  
                              __end_of_usart_transmite_interrupt_isr 02B4  
                             __size_of_usart_transmite_interrupt_isr 0023  
                                      _usart_transmite_interrupt_isr 0291  
                                                                l202 02F0  
                                                                l153 00C7  
                                                                l170 00E5  
                                                                l194 037B  
                                                                l987 0313  
                                                                l999 0380  
                                                                u805 0206  
                                                                u590 0300  
                                                                u815 0212  
                                                                u775 01E6  
                                                                u795 01F2  
                                                                u875 00FB  
                                                                u885 0122  
                                                                u895 0149  
                                         timer0_start@prescalar_rate 0073  
                                                                wreg 0009  
                                                               S1393 02B4  
                                                               l1301 0086  
                                                               l1311 00A6  
                                                               l1303 008E  
                                                               l1313 00A6  
                                                               l1305 0096  
                                                               l1251 01F1  
                                                               l1323 00DD  
                                                               l1315 00AE  
                                                               l1307 009E  
                                                               l1069 0302  
                                                               l1325 00F2  
                                                               l1333 0166  
                                                               l1309 009E  
                                                               l1317 00B7  
                                                               l1263 021C  
                                                               l1327 0118  
                                                               l1249 01E3  
                                                               l1329 013F  
                                                               l1345 02DC  
                                                               l1259 0211  
                                                               l1291 0073  
                                                               l1283 0058  
                                                               l1293 007B  
                                                               l1285 005F  
                                                               l1365 01B8  
                                                               l1295 007C  
                                                               l1287 0065  
                                                               l1297 007D  
                                                               l1289 006B  
                                                               l1299 007E  
                                                               STR_1 0286  
                                                               STR_2 027C  
                                                               STR_3 0288  
                                                               _BRGH 0CF2  
                                                               i1l52 0020  
                                                               _SYNC 0CF4  
    usart_receive_interrupt_read_message@usart_callback_receive_done 0072  
                                                        main@message 0035  
                                                               _main 0173  
                                                        _usart_start 003F  
                                                               fsr0h 0005  
                                                               fsr1h 0007  
                                                               fsr0l 0004  
                                                               indf0 0000  
                                                               indf1 0001  
                                                               fsr1l 0006  
                                                               btemp 007E  
                                                               ltemp 007E  
                                __end_of_usart_receive_interrupt_isr 025C  
                                        _usart_receive_interrupt_isr 0225  
                                                               start 0025  
                                                               ttemp 007E  
                                                               wtemp 007E  
                                 usart_transmite_set_message@message 0078  
                                                              ?_main 0070  
                                                              _BRG16 0CFB  
                                                      __CFG_WDTE$OFF 0000  
                                                    __end_of___lldiv 0225  
                                                              i1l188 02A4  
                                                              _RCREG 0199  
                                                              u41_20 036B  
                                                              _SPBRG 019B  
                                                              _TXREG 019A  
                                                              pclath 000A  
                                                              ltemp0 007E  
                                                              ltemp1 0082  
                                                              ltemp2 0086  
                                                              ltemp3 0080  
                                       __end_of_isr_timer0_pisca_led 038E  
                                                              ttemp0 007E  
                                                              ttemp1 0081  
                                                              ttemp2 0084  
                                                              ttemp3 0087  
                                                              ttemp4 007F  
                                                              status 0003  
                                                              wtemp0 007E  
                                                              wtemp1 0080  
                                                              wtemp2 0082  
                                                              wtemp3 0084  
                                                              wtemp4 0086  
                                                              wtemp5 0088  
                                                              wtemp6 007F  
                                                    __initialization 0027  
                                                       ?_isr_general 0070  
                                                       __end_of_main 01D2  
                                           ?_isr_usart_tx_acende_led 0070  
                                                             ??_main 0034  
                                                             i1l1041 02B1  
                                                             i1l1029 0378  
                                                             i1l1063 0256  
                                                             i1l1057 024C  
                                                             i1l1059 024F  
                                                             i1l1191 0018  
                                                             i1l1185 000F  
                                                          ??___lldiv 0020  
                                             _USART_BAUD_RATE_115200 0260  
                                                   __rx_message_size 003E  
                                                             _strcpy 030F  
                                              __tx_isr_done_callback 003B  
                                            __end_of__initialization 003B  
                                      __end_of_USART_BAUD_RATE_10417 0260  
                                                     __pcstackCOMMON 0070  
                                      __end_of_USART_BAUD_RATE_19200 026C  
                                      __end_of_USART_BAUD_RATE_57600 0278  
                                __end_of_usart_transmite_set_message 0348  
                                        _usart_transmite_set_message 0339  
                                               _isr_timer0_pisca_led 038D  
                                                     _OPTION_REGbits 0095  
                       __end_of_usart_receive_interrupt_read_message 0356  
                      __size_of_usart_receive_interrupt_read_message 000E  
                             ??_usart_receive_interrupt_read_message 0074  
                              ?_usart_receive_interrupt_read_message 0072  
                               _usart_receive_interrupt_read_message 0348  
                                                         __pbssBANK0 0037  
                                                       ?_usart_start 0026  
                                                         __pmaintext 0173  
                                                         __pintentry 0004  
                                        __size_of_isr_usart_rx_teste 0004  
                                               __size_of_isr_general 0021  
                                              ?_isr_timer0_pisca_led 0070  
                               __size_of_usart_receive_interrupt_isr 0037  
                                                            ?_strcpy 0072  
                                                         __rx_buffer 22F0  
                                                         __tx_buffer 21F0  
                                                _USART_BAUD_RATE_300 0270  
                                                            ___lldiv 01D2  
                                                            __ptext1 02D4  
                                                            __ptext2 037A  
                                                            __ptext3 0329  
                                                            __ptext4 0339  
                                                            __ptext5 030F  
                                                            __ptext6 003F  
                                                            __ptext7 01D2  
                                                            __ptext8 0348  
                                                            __ptext9 0384  
                                                      ?_timer0_start 0072  
                                                    __size_of_strcpy 001A  
                                                            clrloop0 0357  
                                               end_of_initialization 003B  
                                   __size_of_isr_usart_tx_acende_led 000C  
                                                       __rx_iterator 0039  
                                                    ___lldiv@divisor 0072  
                                                    ___lldiv@counter 0025  
                                                          _RCSTAbits 019D  
                                                         _timer0_isr 036E  
                                                       __pstringtext 025C  
                                             ??_isr_timer0_pisca_led 0070  
                                                     ??_timer0_start 0076  
                                                          _PORTBbits 000D  
                                                       __tx_iterator 007A  
                                                   __CFG_FOSC$INTOSC 0000  
                    __end_of_usart_transmite_interrupt_write_message 0339  
                   __size_of_usart_transmite_interrupt_write_message 0010  
                           ?_usart_transmite_interrupt_write_message 0020  
                          ??_usart_transmite_interrupt_write_message 007A  
                            _usart_transmite_interrupt_write_message 0329  
                                                          _TRISBbits 008D  
                                                          _TRISCbits 008E  
                                             usart_start@baud_switch 002E  
                                                          _TXSTAbits 019E  
                                               __size_of_usart_start 0134  
                                     __end_of_USART_BAUD_RATE_115200 0264  
                        __end_of_usart_receive_interrupt_get_message 0389  
                       __size_of_usart_receive_interrupt_get_message 0005  
                              ??_usart_receive_interrupt_get_message 0074  
                               ?_usart_receive_interrupt_get_message 0072  
                                _usart_receive_interrupt_get_message 0384  
                                                        _BAUDCONbits 019F  
                         __end_of_usart_transmite_lock_write_message 02F3  
                        __size_of_usart_transmite_lock_write_message 001F  
                                ?_usart_transmite_lock_write_message 0020  
                               ??_usart_transmite_lock_write_message 007A  
                                 _usart_transmite_lock_write_message 02D4  
                                                     __end_of_strcpy 0329  
                                                start_initialization 0027  
                               __size_of_usart_transmite_set_message 000F  
                                     ?_usart_transmite_interrupt_isr 0070  
                                                   timer0_start@mode 0076  
                                       ?_usart_receive_interrupt_isr 0070  
                                                        ?_timer0_isr 0070  
                                              _USART_BAUD_RATE_10417 025C  
                                              _USART_BAUD_RATE_19200 0268  
                                              _USART_BAUD_RATE_57600 0274  
                                                           ??_strcpy 0076  
                                                        __pbssBIGRAM 21F0  
                                                        __pbssCOMMON 007A  
                                                          ___latbits 0002  
                                                      __pcstackBANK0 0020  
                                       __end_of_USART_BAUD_RATE_1200 0268  
                                       __end_of_USART_BAUD_RATE_2400 0270  
                                       __end_of_USART_BAUD_RATE_9600 027C  
                                            _isr_usart_tx_acende_led 0362  
                          usart_transmite_lock_write_message@message 0020  
                                               __end_of_timer0_start 030F  
                                                          __pnvBANK0 003F  
                                                      ??_isr_general 0071  
                                         __end_of_isr_usart_rx_teste 038D  
                                      ??_usart_receive_interrupt_isr 0070  
                                                           ?___lldiv 0072  
                                                          __pswtext1 02B4  
                     usart_transmite_interrupt_write_message@message 0020  
                                                __size_of_timer0_isr 000C  
                                          timer0_start@prescalar_use 0072  
                                                           _LATBbits 010D  
                                                          clear_ram0 0356  
                                                           _PIE1bits 0091  
                                                           _PIR1bits 0011  
                            __end_of_usart_transmite_lock_write_byte 0384  
                           __size_of_usart_transmite_lock_write_byte 000A  
                                  ??_usart_transmite_lock_write_byte 0072  
                                   ?_usart_transmite_lock_write_byte 0070  
                                    _usart_transmite_lock_write_byte 037A  
usart_transmite_interrupt_write_message@usart_callback_transmit_done 0022  
                                                __end_of_isr_general 0025  
                                        timer0_start@timer0_callback 0074  
                                          ??_isr_usart_tx_acende_led 0070  
                                usart_transmite_lock_write_byte@data 0072  
                                               _USART_BAUD_RATE_1200 0264  
                                               _USART_BAUD_RATE_2400 026C  
                                               _USART_BAUD_RATE_9600 0278  
                                                    usart_start@fosc 0030  
                                       ?_usart_transmite_set_message 0078  
                                                   __size_of___lldiv 0053  
                                        __end_of_USART_BAUD_RATE_300 0274  
                                      __size_of_isr_timer0_pisca_led 0001  
                                                           __ptext10 02F3  
                                                           __ptext12 0291  
                                                           __ptext13 0362  
                                                           __ptext14 0225  
                                                           __ptext15 0389  
                                                           __ptext16 036E  
                                                           __ptext17 038D  
                                              __size_of_timer0_start 001C  
                                                           __rx_done 003D  
                                                         strcpy@from 0074  
                                                      ??_usart_start 002A  
                                                      __size_of_main 005F  
                                    __end_of_isr_usart_tx_acende_led 036E  
                                    ??_usart_transmite_interrupt_isr 0070  
                                                        _isr_general 0004  
                                                       ??_timer0_isr 0070  
                                                           int$flags 007E  
                                               usart_start@baud_rate 0026  
                                         usart_start@usart_sync_mode 002F  
                                      ??_usart_transmite_set_message 007A  
                                              __rx_isr_done_callback 0037  
                                                       _timer0_start 02F3  
                                                         _INTCONbits 000B  
                                                           intlevel1 0000  
                                                 __end_of_timer0_isr 037A  
                                                   ___lldiv@dividend 0076  
                                                         _OSCCONbits 0099  
                                                __end_of_usart_start 0173  
                                                 _isr_usart_rx_teste 0389  
                                                   ___lldiv@quotient 0021  
                                                           strcpy@cp 0076  
                                                           strcpy@to 0072  
                                                         _TX1STAbits 019E  
                                                ?_isr_usart_rx_teste 0070  
                                                   __timer0_callback 003F  
